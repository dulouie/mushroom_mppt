{"version":3,"file":"reveal.js","sources":["../js/utils/util.js","../js/utils/device.js","../node_modules/fitty/dist/fitty.module.js","../js/controllers/slidecontent.js","../js/controllers/slidenumber.js","../js/controllers/jumptoslide.js","../js/utils/color.js","../js/controllers/backgrounds.js","../js/utils/constants.js","../js/controllers/autoanimate.js","../js/controllers/fragments.js","../js/controllers/overview.js","../js/controllers/keyboard.js","../js/controllers/location.js","../js/controllers/controls.js","../js/controllers/progress.js","../js/controllers/pointer.js","../js/utils/loader.js","../js/controllers/plugins.js","../js/controllers/print.js","../js/controllers/touch.js","../js/controllers/focus.js","../js/controllers/notes.js","../js/components/playback.js","../js/config.js","../js/reveal.js","../js/index.js"],"sourcesContent":["/**\n * Extend object a with the properties of object b.\n * If there's a conflict, object b takes precedence.\n *\n * @param {object} a\n * @param {object} b\n */\nexport const extend = ( a, b ) => {\n\n\tfor( let i in b ) {\n\t\ta[ i ] = b[ i ];\n\t}\n\n\treturn a;\n\n}\n\n/**\n * querySelectorAll but returns an Array.\n */\nexport const queryAll = ( el, selector ) => {\n\n\treturn Array.from( el.querySelectorAll( selector ) );\n\n}\n\n/**\n * classList.toggle() with cross browser support\n */\nexport const toggleClass = ( el, className, value ) => {\n\tif( value ) {\n\t\tel.classList.add( className );\n\t}\n\telse {\n\t\tel.classList.remove( className );\n\t}\n}\n\n/**\n * Utility for deserializing a value.\n *\n * @param {*} value\n * @return {*}\n */\nexport const deserialize = ( value ) => {\n\n\tif( typeof value === 'string' ) {\n\t\tif( value === 'null' ) return null;\n\t\telse if( value === 'true' ) return true;\n\t\telse if( value === 'false' ) return false;\n\t\telse if( value.match( /^-?[\\d\\.]+$/ ) ) return parseFloat( value );\n\t}\n\n\treturn value;\n\n}\n\n/**\n * Measures the distance in pixels between point a\n * and point b.\n *\n * @param {object} a point with x/y properties\n * @param {object} b point with x/y properties\n *\n * @return {number}\n */\nexport const distanceBetween = ( a, b ) => {\n\n\tlet dx = a.x - b.x,\n\t\tdy = a.y - b.y;\n\n\treturn Math.sqrt( dx*dx + dy*dy );\n\n}\n\n/**\n * Applies a CSS transform to the target element.\n *\n * @param {HTMLElement} element\n * @param {string} transform\n */\nexport const transformElement = ( element, transform ) => {\n\n\telement.style.transform = transform;\n\n}\n\n/**\n * Element.matches with IE support.\n *\n * @param {HTMLElement} target The element to match\n * @param {String} selector The CSS selector to match\n * the element against\n *\n * @return {Boolean}\n */\nexport const matches = ( target, selector ) => {\n\n\tlet matchesMethod = target.matches || target.matchesSelector || target.msMatchesSelector;\n\n\treturn !!( matchesMethod && matchesMethod.call( target, selector ) );\n\n}\n\n/**\n * Find the closest parent that matches the given\n * selector.\n *\n * @param {HTMLElement} target The child element\n * @param {String} selector The CSS selector to match\n * the parents against\n *\n * @return {HTMLElement} The matched parent or null\n * if no matching parent was found\n */\nexport const closest = ( target, selector ) => {\n\n\t// Native Element.closest\n\tif( typeof target.closest === 'function' ) {\n\t\treturn target.closest( selector );\n\t}\n\n\t// Polyfill\n\twhile( target ) {\n\t\tif( matches( target, selector ) ) {\n\t\t\treturn target;\n\t\t}\n\n\t\t// Keep searching\n\t\ttarget = target.parentNode;\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Handling the fullscreen functionality via the fullscreen API\n *\n * @see http://fullscreen.spec.whatwg.org/\n * @see https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode\n */\nexport const enterFullscreen = element => {\n\n\telement = element || document.documentElement;\n\n\t// Check which implementation is available\n\tlet requestMethod = element.requestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullScreen ||\n\t\t\t\t\t\telement.mozRequestFullScreen ||\n\t\t\t\t\t\telement.msRequestFullscreen;\n\n\tif( requestMethod ) {\n\t\trequestMethod.apply( element );\n\t}\n\n}\n\n/**\n * Creates an HTML element and returns a reference to it.\n * If the element already exists the existing instance will\n * be returned.\n *\n * @param {HTMLElement} container\n * @param {string} tagname\n * @param {string} classname\n * @param {string} innerHTML\n *\n * @return {HTMLElement}\n */\nexport const createSingletonNode = ( container, tagname, classname, innerHTML='' ) => {\n\n\t// Find all nodes matching the description\n\tlet nodes = container.querySelectorAll( '.' + classname );\n\n\t// Check all matches to find one which is a direct child of\n\t// the specified container\n\tfor( let i = 0; i < nodes.length; i++ ) {\n\t\tlet testNode = nodes[i];\n\t\tif( testNode.parentNode === container ) {\n\t\t\treturn testNode;\n\t\t}\n\t}\n\n\t// If no node was found, create it now\n\tlet node = document.createElement( tagname );\n\tnode.className = classname;\n\tnode.innerHTML = innerHTML;\n\tcontainer.appendChild( node );\n\n\treturn node;\n\n}\n\n/**\n * Injects the given CSS styles into the DOM.\n *\n * @param {string} value\n */\nexport const createStyleSheet = ( value ) => {\n\n\tlet tag = document.createElement( 'style' );\n\ttag.type = 'text/css';\n\n\tif( value && value.length > 0 ) {\n\t\tif( tag.styleSheet ) {\n\t\t\ttag.styleSheet.cssText = value;\n\t\t}\n\t\telse {\n\t\t\ttag.appendChild( document.createTextNode( value ) );\n\t\t}\n\t}\n\n\tdocument.head.appendChild( tag );\n\n\treturn tag;\n\n}\n\n/**\n * Returns a key:value hash of all query params.\n */\nexport const getQueryHash = () => {\n\n\tlet query = {};\n\n\tlocation.search.replace( /[A-Z0-9]+?=([\\w\\.%-]*)/gi, a => {\n\t\tquery[ a.split( '=' ).shift() ] = a.split( '=' ).pop();\n\t} );\n\n\t// Basic deserialization\n\tfor( let i in query ) {\n\t\tlet value = query[ i ];\n\n\t\tquery[ i ] = deserialize( unescape( value ) );\n\t}\n\n\t// Do not accept new dependencies via query config to avoid\n\t// the potential of malicious script injection\n\tif( typeof query['dependencies'] !== 'undefined' ) delete query['dependencies'];\n\n\treturn query;\n\n}\n\n/**\n * Returns the remaining height within the parent of the\n * target element.\n *\n * remaining height = [ configured parent height ] - [ current parent height ]\n *\n * @param {HTMLElement} element\n * @param {number} [height]\n */\nexport const getRemainingHeight = ( element, height = 0 ) => {\n\n\tif( element ) {\n\t\tlet newHeight, oldHeight = element.style.height;\n\n\t\t// Change the .stretch element height to 0 in order find the height of all\n\t\t// the other elements\n\t\telement.style.height = '0px';\n\n\t\t// In Overview mode, the parent (.slide) height is set of 700px.\n\t\t// Restore it temporarily to its natural height.\n\t\telement.parentNode.style.height = 'auto';\n\n\t\tnewHeight = height - element.parentNode.offsetHeight;\n\n\t\t// Restore the old height, just in case\n\t\telement.style.height = oldHeight + 'px';\n\n\t\t// Clear the parent (.slide) height. .removeProperty works in IE9+\n\t\telement.parentNode.style.removeProperty('height');\n\n\t\treturn newHeight;\n\t}\n\n\treturn height;\n\n}\n\nconst fileExtensionToMimeMap = {\n\t'mp4': 'video/mp4',\n\t'm4a': 'video/mp4',\n\t'ogv': 'video/ogg',\n\t'mpeg': 'video/mpeg',\n\t'webm': 'video/webm'\n}\n\n/**\n * Guess the MIME type for common file formats.\n */\nexport const getMimeTypeFromFile = ( filename='' ) => {\n\treturn fileExtensionToMimeMap[filename.split('.').pop()]\n}\n\n/**\n * Encodes a string for RFC3986-compliant URL format.\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURI#encoding_for_rfc3986\n *\n * @param {string} url\n */\nexport const encodeRFC3986URI = ( url='' ) => {\n\treturn encodeURI(url)\n\t  .replace(/%5B/g, \"[\")\n\t  .replace(/%5D/g, \"]\")\n\t  .replace(\n\t\t/[!'()*]/g,\n\t\t(c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`\n\t  );\n}","const UA = navigator.userAgent;\n\nexport const isMobile = /(iphone|ipod|ipad|android)/gi.test( UA ) ||\n\t\t\t\t\t\t( navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1 ); // iPadOS\n\nexport const isChrome = /chrome/i.test( UA ) && !/edge/i.test( UA );\n\nexport const isAndroid = /android/gi.test( UA );","/*\n * fitty v2.3.3 - Snugly resizes text to fit its parent container\n * Copyright (c) 2020 Rik Schennink <rik@pqina.nl> (https://pqina.nl/)\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = function (w) {\n\n  // no window, early exit\n  if (!w) return;\n\n  // node list to array helper method\n  var toArray = function toArray(nl) {\n    return [].slice.call(nl);\n  };\n\n  // states\n  var DrawState = {\n    IDLE: 0,\n    DIRTY_CONTENT: 1,\n    DIRTY_LAYOUT: 2,\n    DIRTY: 3\n  };\n\n  // all active fitty elements\n  var fitties = [];\n\n  // group all redraw calls till next frame, we cancel each frame request when a new one comes in. If no support for request animation frame, this is an empty function and supports for fitty stops.\n  var redrawFrame = null;\n  var requestRedraw = 'requestAnimationFrame' in w ? function () {\n    w.cancelAnimationFrame(redrawFrame);\n    redrawFrame = w.requestAnimationFrame(function () {\n      return redraw(fitties.filter(function (f) {\n        return f.dirty && f.active;\n      }));\n    });\n  } : function () {};\n\n  // sets all fitties to dirty so they are redrawn on the next redraw loop, then calls redraw\n  var redrawAll = function redrawAll(type) {\n    return function () {\n      fitties.forEach(function (f) {\n        return f.dirty = type;\n      });\n      requestRedraw();\n    };\n  };\n\n  // redraws fitties so they nicely fit their parent container\n  var redraw = function redraw(fitties) {\n\n    // getting info from the DOM at this point should not trigger a reflow, let's gather as much intel as possible before triggering a reflow\n\n    // check if styles of all fitties have been computed\n    fitties.filter(function (f) {\n      return !f.styleComputed;\n    }).forEach(function (f) {\n      f.styleComputed = computeStyle(f);\n    });\n\n    // restyle elements that require pre-styling, this triggers a reflow, please try to prevent by adding CSS rules (see docs)\n    fitties.filter(shouldPreStyle).forEach(applyStyle);\n\n    // we now determine which fitties should be redrawn\n    var fittiesToRedraw = fitties.filter(shouldRedraw);\n\n    // we calculate final styles for these fitties\n    fittiesToRedraw.forEach(calculateStyles);\n\n    // now we apply the calculated styles from our previous loop\n    fittiesToRedraw.forEach(function (f) {\n      applyStyle(f);\n      markAsClean(f);\n    });\n\n    // now we dispatch events for all restyled fitties\n    fittiesToRedraw.forEach(dispatchFitEvent);\n  };\n\n  var markAsClean = function markAsClean(f) {\n    return f.dirty = DrawState.IDLE;\n  };\n\n  var calculateStyles = function calculateStyles(f) {\n\n    // get available width from parent node\n    f.availableWidth = f.element.parentNode.clientWidth;\n\n    // the space our target element uses\n    f.currentWidth = f.element.scrollWidth;\n\n    // remember current font size\n    f.previousFontSize = f.currentFontSize;\n\n    // let's calculate the new font size\n    f.currentFontSize = Math.min(Math.max(f.minSize, f.availableWidth / f.currentWidth * f.previousFontSize), f.maxSize);\n\n    // if allows wrapping, only wrap when at minimum font size (otherwise would break container)\n    f.whiteSpace = f.multiLine && f.currentFontSize === f.minSize ? 'normal' : 'nowrap';\n  };\n\n  // should always redraw if is not dirty layout, if is dirty layout, only redraw if size has changed\n  var shouldRedraw = function shouldRedraw(f) {\n    return f.dirty !== DrawState.DIRTY_LAYOUT || f.dirty === DrawState.DIRTY_LAYOUT && f.element.parentNode.clientWidth !== f.availableWidth;\n  };\n\n  // every fitty element is tested for invalid styles\n  var computeStyle = function computeStyle(f) {\n\n    // get style properties\n    var style = w.getComputedStyle(f.element, null);\n\n    // get current font size in pixels (if we already calculated it, use the calculated version)\n    f.currentFontSize = parseFloat(style.getPropertyValue('font-size'));\n\n    // get display type and wrap mode\n    f.display = style.getPropertyValue('display');\n    f.whiteSpace = style.getPropertyValue('white-space');\n  };\n\n  // determines if this fitty requires initial styling, can be prevented by applying correct styles through CSS\n  var shouldPreStyle = function shouldPreStyle(f) {\n\n    var preStyle = false;\n\n    // if we already tested for prestyling we don't have to do it again\n    if (f.preStyleTestCompleted) return false;\n\n    // should have an inline style, if not, apply\n    if (!/inline-/.test(f.display)) {\n      preStyle = true;\n      f.display = 'inline-block';\n    }\n\n    // to correctly calculate dimensions the element should have whiteSpace set to nowrap\n    if (f.whiteSpace !== 'nowrap') {\n      preStyle = true;\n      f.whiteSpace = 'nowrap';\n    }\n\n    // we don't have to do this twice\n    f.preStyleTestCompleted = true;\n\n    return preStyle;\n  };\n\n  // apply styles to single fitty\n  var applyStyle = function applyStyle(f) {\n    f.element.style.whiteSpace = f.whiteSpace;\n    f.element.style.display = f.display;\n    f.element.style.fontSize = f.currentFontSize + 'px';\n  };\n\n  // dispatch a fit event on a fitty\n  var dispatchFitEvent = function dispatchFitEvent(f) {\n    f.element.dispatchEvent(new CustomEvent('fit', {\n      detail: {\n        oldValue: f.previousFontSize,\n        newValue: f.currentFontSize,\n        scaleFactor: f.currentFontSize / f.previousFontSize\n      }\n    }));\n  };\n\n  // fit method, marks the fitty as dirty and requests a redraw (this will also redraw any other fitty marked as dirty)\n  var fit = function fit(f, type) {\n    return function () {\n      f.dirty = type;\n      if (!f.active) return;\n      requestRedraw();\n    };\n  };\n\n  var init = function init(f) {\n\n    // save some of the original CSS properties before we change them\n    f.originalStyle = {\n      whiteSpace: f.element.style.whiteSpace,\n      display: f.element.style.display,\n      fontSize: f.element.style.fontSize\n    };\n\n    // should we observe DOM mutations\n    observeMutations(f);\n\n    // this is a new fitty so we need to validate if it's styles are in order\n    f.newbie = true;\n\n    // because it's a new fitty it should also be dirty, we want it to redraw on the first loop\n    f.dirty = true;\n\n    // we want to be able to update this fitty\n    fitties.push(f);\n  };\n\n  var destroy = function destroy(f) {\n    return function () {\n\n      // remove from fitties array\n      fitties = fitties.filter(function (_) {\n        return _.element !== f.element;\n      });\n\n      // stop observing DOM\n      if (f.observeMutations) f.observer.disconnect();\n\n      // reset the CSS properties we changes\n      f.element.style.whiteSpace = f.originalStyle.whiteSpace;\n      f.element.style.display = f.originalStyle.display;\n      f.element.style.fontSize = f.originalStyle.fontSize;\n    };\n  };\n\n  // add a new fitty, does not redraw said fitty\n  var subscribe = function subscribe(f) {\n    return function () {\n      if (f.active) return;\n      f.active = true;\n      requestRedraw();\n    };\n  };\n\n  // remove an existing fitty\n  var unsubscribe = function unsubscribe(f) {\n    return function () {\n      return f.active = false;\n    };\n  };\n\n  var observeMutations = function observeMutations(f) {\n\n    // no observing?\n    if (!f.observeMutations) return;\n\n    // start observing mutations\n    f.observer = new MutationObserver(fit(f, DrawState.DIRTY_CONTENT));\n\n    // start observing\n    f.observer.observe(f.element, f.observeMutations);\n  };\n\n  // default mutation observer settings\n  var mutationObserverDefaultSetting = {\n    subtree: true,\n    childList: true,\n    characterData: true\n  };\n\n  // default fitty options\n  var defaultOptions = {\n    minSize: 16,\n    maxSize: 512,\n    multiLine: true,\n    observeMutations: 'MutationObserver' in w ? mutationObserverDefaultSetting : false\n  };\n\n  // array of elements in, fitty instances out\n  function fittyCreate(elements, options) {\n\n    // set options object\n    var fittyOptions = _extends({}, defaultOptions, options);\n\n    // create fitties\n    var publicFitties = elements.map(function (element) {\n\n      // create fitty instance\n      var f = _extends({}, fittyOptions, {\n\n        // internal options for this fitty\n        element: element,\n        active: true\n      });\n\n      // initialise this fitty\n      init(f);\n\n      // expose API\n      return {\n        element: element,\n        fit: fit(f, DrawState.DIRTY),\n        unfreeze: subscribe(f),\n        freeze: unsubscribe(f),\n        unsubscribe: destroy(f)\n      };\n    });\n\n    // call redraw on newly initiated fitties\n    requestRedraw();\n\n    // expose fitties\n    return publicFitties;\n  }\n\n  // fitty creation function\n  function fitty(target) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\n    // if target is a string\n    return typeof target === 'string' ?\n\n    // treat it as a querySelector\n    fittyCreate(toArray(document.querySelectorAll(target)), options) :\n\n    // create single fitty\n    fittyCreate([target], options)[0];\n  }\n\n  // handles viewport changes, redraws all fitties, but only does so after a timeout\n  var resizeDebounce = null;\n  var onWindowResized = function onWindowResized() {\n    w.clearTimeout(resizeDebounce);\n    resizeDebounce = w.setTimeout(redrawAll(DrawState.DIRTY_LAYOUT), fitty.observeWindowDelay);\n  };\n\n  // define observe window property, so when we set it to true or false events are automatically added and removed\n  var events = ['resize', 'orientationchange'];\n  Object.defineProperty(fitty, 'observeWindow', {\n    set: function set(enabled) {\n      var method = (enabled ? 'add' : 'remove') + 'EventListener';\n      events.forEach(function (e) {\n        w[method](e, onWindowResized);\n      });\n    }\n  });\n\n  // fitty global properties (by setting observeWindow to true the events above get added)\n  fitty.observeWindow = true;\n  fitty.observeWindowDelay = 100;\n\n  // public fit all method, will force redraw no matter what\n  fitty.fitAll = redrawAll(DrawState.DIRTY);\n\n  // export our fitty function, we don't want to keep it to our selves\n  return fitty;\n}(typeof window === 'undefined' ? null : window);","import { extend, queryAll, closest, getMimeTypeFromFile, encodeRFC3986URI } from '../utils/util.js'\nimport { isMobile } from '../utils/device.js'\n\nimport fitty from 'fitty';\n\n/**\n * Handles loading, unloading and playback of slide\n * content such as images, videos and iframes.\n */\nexport default class SlideContent {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.startEmbeddedIframe = this.startEmbeddedIframe.bind( this );\n\n\t}\n\n\t/**\n\t * Should the given element be preloaded?\n\t * Decides based on local element attributes and global config.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tshouldPreload( element ) {\n\n\t\t// Prefer an explicit global preload setting\n\t\tlet preload = this.Reveal.getConfig().preloadIframes;\n\n\t\t// If no global setting is available, fall back on the element's\n\t\t// own preload setting\n\t\tif( typeof preload !== 'boolean' ) {\n\t\t\tpreload = element.hasAttribute( 'data-preload' );\n\t\t}\n\n\t\treturn preload;\n\t}\n\n\t/**\n\t * Called when the given slide is within the configured view\n\t * distance. Shows the slide element and loads any content\n\t * that is set to load lazily (data-src).\n\t *\n\t * @param {HTMLElement} slide Slide to show\n\t */\n\tload( slide, options = {} ) {\n\n\t\t// Show the slide element\n\t\tslide.style.display = this.Reveal.getConfig().display;\n\n\t\t// Media elements with data-src attributes\n\t\tqueryAll( slide, 'img[data-src], video[data-src], audio[data-src], iframe[data-src]' ).forEach( element => {\n\t\t\tif( element.tagName !== 'IFRAME' || this.shouldPreload( element ) ) {\n\t\t\t\telement.setAttribute( 'src', element.getAttribute( 'data-src' ) );\n\t\t\t\telement.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\telement.removeAttribute( 'data-src' );\n\t\t\t}\n\t\t} );\n\n\t\t// Media elements with <source> children\n\t\tqueryAll( slide, 'video, audio' ).forEach( media => {\n\t\t\tlet sources = 0;\n\n\t\t\tqueryAll( media, 'source[data-src]' ).forEach( source => {\n\t\t\t\tsource.setAttribute( 'src', source.getAttribute( 'data-src' ) );\n\t\t\t\tsource.removeAttribute( 'data-src' );\n\t\t\t\tsource.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\tsources += 1;\n\t\t\t} );\n\n\t\t\t// Enable inline video playback in mobile Safari\n\t\t\tif( isMobile && media.tagName === 'VIDEO' ) {\n\t\t\t\tmedia.setAttribute( 'playsinline', '' );\n\t\t\t}\n\n\t\t\t// If we rewrote sources for this video/audio element, we need\n\t\t\t// to manually tell it to load from its new origin\n\t\t\tif( sources > 0 ) {\n\t\t\t\tmedia.load();\n\t\t\t}\n\t\t} );\n\n\n\t\t// Show the corresponding background element\n\t\tlet background = slide.slideBackgroundElement;\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'block';\n\n\t\t\tlet backgroundContent = slide.slideBackgroundContentElement;\n\t\t\tlet backgroundIframe = slide.getAttribute( 'data-background-iframe' );\n\n\t\t\t// If the background contains media, load it\n\t\t\tif( background.hasAttribute( 'data-loaded' ) === false ) {\n\t\t\t\tbackground.setAttribute( 'data-loaded', 'true' );\n\n\t\t\t\tlet backgroundImage = slide.getAttribute( 'data-background-image' ),\n\t\t\t\t\tbackgroundVideo = slide.getAttribute( 'data-background-video' ),\n\t\t\t\t\tbackgroundVideoLoop = slide.hasAttribute( 'data-background-video-loop' ),\n\t\t\t\t\tbackgroundVideoMuted = slide.hasAttribute( 'data-background-video-muted' );\n\n\t\t\t\t// Images\n\t\t\t\tif( backgroundImage ) {\n\t\t\t\t\t// base64\n\t\t\t\t\tif(  /^data:/.test( backgroundImage.trim() ) ) {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = `url(${backgroundImage.trim()})`;\n\t\t\t\t\t}\n\t\t\t\t\t// URL(s)\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = backgroundImage.split( ',' ).map( background => {\n\t\t\t\t\t\t\t// Decode URL(s) that are already encoded first\n\t\t\t\t\t\t\tlet decoded = decodeURI(background.trim());\n\t\t\t\t\t\t\treturn `url(${encodeRFC3986URI(decoded)})`;\n\t\t\t\t\t\t}).join( ',' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Videos\n\t\t\t\telse if ( backgroundVideo && !this.Reveal.isSpeakerNotes() ) {\n\t\t\t\t\tlet video = document.createElement( 'video' );\n\n\t\t\t\t\tif( backgroundVideoLoop ) {\n\t\t\t\t\t\tvideo.setAttribute( 'loop', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\tif( backgroundVideoMuted ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Enable inline playback in mobile Safari\n\t\t\t\t\t//\n\t\t\t\t\t// Mute is required for video to play when using\n\t\t\t\t\t// swipe gestures to navigate since they don't\n\t\t\t\t\t// count as direct user actions :'(\n\t\t\t\t\tif( isMobile ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t\tvideo.setAttribute( 'playsinline', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support comma separated lists of video sources\n\t\t\t\t\tbackgroundVideo.split( ',' ).forEach( source => {\n\t\t\t\t\t\tlet type = getMimeTypeFromFile( source );\n\t\t\t\t\t\tif( type ) {\n\t\t\t\t\t\t\tvideo.innerHTML += `<source src=\"${source}\" type=\"${type}\">`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tvideo.innerHTML += `<source src=\"${source}\">`;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\n\t\t\t\t\tbackgroundContent.appendChild( video );\n\t\t\t\t}\n\t\t\t\t// Iframes\n\t\t\t\telse if( backgroundIframe && options.excludeIframes !== true ) {\n\t\t\t\t\tlet iframe = document.createElement( 'iframe' );\n\t\t\t\t\tiframe.setAttribute( 'allowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'mozallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'webkitallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'allow', 'autoplay' );\n\n\t\t\t\t\tiframe.setAttribute( 'data-src', backgroundIframe );\n\n\t\t\t\t\tiframe.style.width  = '100%';\n\t\t\t\t\tiframe.style.height = '100%';\n\t\t\t\t\tiframe.style.maxHeight = '100%';\n\t\t\t\t\tiframe.style.maxWidth = '100%';\n\n\t\t\t\t\tbackgroundContent.appendChild( iframe );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start loading preloadable iframes\n\t\t\tlet backgroundIframeElement = backgroundContent.querySelector( 'iframe[data-src]' );\n\t\t\tif( backgroundIframeElement ) {\n\n\t\t\t\t// Check if this iframe is eligible to be preloaded\n\t\t\t\tif( this.shouldPreload( background ) && !/autoplay=(1|true|yes)/gi.test( backgroundIframe ) ) {\n\t\t\t\t\tif( backgroundIframeElement.getAttribute( 'src' ) !== backgroundIframe ) {\n\t\t\t\t\t\tbackgroundIframeElement.setAttribute( 'src', backgroundIframe );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.layout( slide );\n\n\t}\n\n\t/**\n\t * Applies JS-dependent layout helpers for the scope.\n\t */\n\tlayout( scopeElement ) {\n\n\t\t// Autosize text with the r-fit-text class based on the\n\t\t// size of its container. This needs to happen after the\n\t\t// slide is visible in order to measure the text.\n\t\tArray.from( scopeElement.querySelectorAll( '.r-fit-text' ) ).forEach( element => {\n\t\t\tfitty( element, {\n\t\t\t\tminSize: 24,\n\t\t\t\tmaxSize: this.Reveal.getConfig().height * 0.8,\n\t\t\t\tobserveMutations: false,\n\t\t\t\tobserveWindow: false\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unloads and hides the given slide. This is called when the\n\t * slide is moved outside of the configured view distance.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tunload( slide ) {\n\n\t\t// Hide the slide element\n\t\tslide.style.display = 'none';\n\n\t\t// Hide the corresponding background element\n\t\tlet background = this.Reveal.getSlideBackground( slide );\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'none';\n\n\t\t\t// Unload any background iframes\n\t\t\tqueryAll( background, 'iframe[src]' ).forEach( element => {\n\t\t\t\telement.removeAttribute( 'src' );\n\t\t\t} );\n\t\t}\n\n\t\t// Reset lazy-loaded media elements with src attributes\n\t\tqueryAll( slide, 'video[data-lazy-loaded][src], audio[data-lazy-loaded][src], iframe[data-lazy-loaded][src]' ).forEach( element => {\n\t\t\telement.setAttribute( 'data-src', element.getAttribute( 'src' ) );\n\t\t\telement.removeAttribute( 'src' );\n\t\t} );\n\n\t\t// Reset lazy-loaded media elements with <source> children\n\t\tqueryAll( slide, 'video[data-lazy-loaded] source[src], audio source[src]' ).forEach( source => {\n\t\t\tsource.setAttribute( 'data-src', source.getAttribute( 'src' ) );\n\t\t\tsource.removeAttribute( 'src' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Enforces origin-specific format rules for embedded media.\n\t */\n\tformatEmbeddedContent() {\n\n\t\tlet _appendParamToIframeSource = ( sourceAttribute, sourceURL, param ) => {\n\t\t\tqueryAll( this.Reveal.getSlidesElement(), 'iframe['+ sourceAttribute +'*=\"'+ sourceURL +'\"]' ).forEach( el => {\n\t\t\t\tlet src = el.getAttribute( sourceAttribute );\n\t\t\t\tif( src && src.indexOf( param ) === -1 ) {\n\t\t\t\t\tel.setAttribute( sourceAttribute, src + ( !/\\?/.test( src ) ? '?' : '&' ) + param );\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// YouTube frames must include \"?enablejsapi=1\"\n\t\t_appendParamToIframeSource( 'src', 'youtube.com/embed/', 'enablejsapi=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'youtube.com/embed/', 'enablejsapi=1' );\n\n\t\t// Vimeo frames must include \"?api=1\"\n\t\t_appendParamToIframeSource( 'src', 'player.vimeo.com/', 'api=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'player.vimeo.com/', 'api=1' );\n\n\t}\n\n\t/**\n\t * Start playback of any embedded content inside of\n\t * the given element.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstartEmbeddedContent( element ) {\n\n\t\tif( element && !this.Reveal.isSpeakerNotes() ) {\n\n\t\t\t// Restart GIFs\n\t\t\tqueryAll( element, 'img[src$=\".gif\"]' ).forEach( el => {\n\t\t\t\t// Setting the same unchanged source like this was confirmed\n\t\t\t\t// to work in Chrome, FF & Safari\n\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'src' ) );\n\t\t\t} );\n\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = el.hasAttribute( 'data-autoplay' ) || !!closest( el, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\tif( autoplay && typeof el.play === 'function' ) {\n\n\t\t\t\t\t// If the media is ready, start playback\n\t\t\t\t\tif( el.readyState > 1 ) {\n\t\t\t\t\t\tthis.startEmbeddedMedia( { target: el } );\n\t\t\t\t\t}\n\t\t\t\t\t// Mobile devices never fire a loaded event so instead\n\t\t\t\t\t// of waiting, we initiate playback\n\t\t\t\t\telse if( isMobile ) {\n\t\t\t\t\t\tlet promise = el.play();\n\n\t\t\t\t\t\t// If autoplay does not work, ensure that the controls are visible so\n\t\t\t\t\t\t// that the viewer can start the media on their own\n\t\t\t\t\t\tif( promise && typeof promise.catch === 'function' && el.controls === false ) {\n\t\t\t\t\t\t\tpromise.catch( () => {\n\t\t\t\t\t\t\t\tel.controls = true;\n\n\t\t\t\t\t\t\t\t// Once the video does start playing, hide the controls again\n\t\t\t\t\t\t\t\tel.addEventListener( 'play', () => {\n\t\t\t\t\t\t\t\t\tel.controls = false;\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// If the media isn't loaded, wait before playing\n\t\t\t\t\telse {\n\t\t\t\t\t\tel.removeEventListener( 'loadeddata', this.startEmbeddedMedia ); // remove first to avoid dupes\n\t\t\t\t\t\tel.addEventListener( 'loadeddata', this.startEmbeddedMedia );\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Normal iframes\n\t\t\tqueryAll( element, 'iframe[src]' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.startEmbeddedIframe( { target: el } );\n\t\t\t} );\n\n\t\t\t// Lazy loading iframes\n\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif( el.getAttribute( 'src' ) !== el.getAttribute( 'data-src' ) ) {\n\t\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe ); // remove first to avoid dupes\n\t\t\t\t\tel.addEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'data-src' ) );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Starts playing an embedded video/audio element after\n\t * it has finished loading.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedMedia( event ) {\n\n\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\tif( isAttachedToDOM && isVisible ) {\n\t\t\tevent.target.currentTime = 0;\n\t\t\tevent.target.play();\n\t\t}\n\n\t\tevent.target.removeEventListener( 'loadeddata', this.startEmbeddedMedia );\n\n\t}\n\n\t/**\n\t * \"Starts\" the content of an embedded iframe using the\n\t * postMessage API.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedIframe( event ) {\n\n\t\tlet iframe = event.target;\n\n\t\tif( iframe && iframe.contentWindow ) {\n\n\t\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\t\tif( isAttachedToDOM && isVisible ) {\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = iframe.hasAttribute( 'data-autoplay' ) || !!closest( iframe, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\t// YouTube postMessage API\n\t\t\t\tif( /youtube\\.com\\/embed\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Vimeo postMessage API\n\t\t\t\telse if( /player\\.vimeo\\.com\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"method\":\"play\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Generic postMessage API\n\t\t\t\telse {\n\t\t\t\t\tiframe.contentWindow.postMessage( 'slide:start', '*' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Stop playback of any embedded content inside of\n\t * the targeted slide.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstopEmbeddedContent( element, options = {} ) {\n\n\t\toptions = extend( {\n\t\t\t// Defaults\n\t\t\tunloadIframes: true\n\t\t}, options );\n\n\t\tif( element && element.parentNode ) {\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && typeof el.pause === 'function' ) {\n\t\t\t\t\tel.setAttribute('data-paused-by-reveal', '');\n\t\t\t\t\tel.pause();\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Generic postMessage API for non-lazy loaded iframes\n\t\t\tqueryAll( element, 'iframe' ).forEach( el => {\n\t\t\t\tif( el.contentWindow ) el.contentWindow.postMessage( 'slide:stop', '*' );\n\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t});\n\n\t\t\t// YouTube postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"youtube.com/embed/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Vimeo postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"player.vimeo.com/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"method\":\"pause\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif( options.unloadIframes === true ) {\n\t\t\t\t// Unload lazy-loaded iframes\n\t\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\t\t// Only removing the src doesn't actually unload the frame\n\t\t\t\t\t// in all browsers (Firefox) so we set it to blank first\n\t\t\t\t\tel.setAttribute( 'src', 'about:blank' );\n\t\t\t\t\tel.removeAttribute( 'src' );\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t}\n\n}\n","/**\n * Handles the display of reveal.js' optional slide number.\n */\nexport default class SlideNumber {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'slide-number';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tlet slideNumberDisplay = 'none';\n\t\tif( config.slideNumber && !this.Reveal.isPrintingPDF() ) {\n\t\t\tif( config.showSlideNumber === 'all' ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t\telse if( config.showSlideNumber === 'speaker' && this.Reveal.isSpeakerNotes() ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t}\n\n\t\tthis.element.style.display = slideNumberDisplay;\n\n\t}\n\n\t/**\n\t * Updates the slide number to match the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update slide number if enabled\n\t\tif( this.Reveal.getConfig().slideNumber && this.element ) {\n\t\t\tthis.element.innerHTML = this.getSlideNumber();\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns the HTML string corresponding to the current slide\n\t * number, including formatting.\n\t */\n\tgetSlideNumber( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet value;\n\t\tlet format = 'h.v';\n\n\t\tif ( typeof config.slideNumber === 'function' ) {\n\t\t\tvalue = config.slideNumber( slide );\n\t\t} else {\n\t\t\t// Check if a custom number format is available\n\t\t\tif( typeof config.slideNumber === 'string' ) {\n\t\t\t\tformat = config.slideNumber;\n\t\t\t}\n\n\t\t\t// If there are ONLY vertical slides in this deck, always use\n\t\t\t// a flattened slide number\n\t\t\tif( !/c/.test( format ) && this.Reveal.getHorizontalSlides().length === 1 ) {\n\t\t\t\tformat = 'c';\n\t\t\t}\n\n\t\t\t// Offset the current slide number by 1 to make it 1-indexed\n\t\t\tlet horizontalOffset = slide && slide.dataset.visibility === 'uncounted' ? 0 : 1;\n\n\t\t\tvalue = [];\n\t\t\tswitch( format ) {\n\t\t\t\tcase 'c':\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'c/t':\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset, '/', this.Reveal.getTotalSlides() );\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet indices = this.Reveal.getIndices( slide );\n\t\t\t\t\tvalue.push( indices.h + horizontalOffset );\n\t\t\t\t\tlet sep = format === 'h/v' ? '/' : '.';\n\t\t\t\t\tif( this.Reveal.isVerticalSlide( slide ) ) value.push( sep, indices.v + 1 );\n\t\t\t}\n\t\t}\n\n\t\tlet url = '#' + this.Reveal.location.getHash( slide );\n\t\treturn this.formatNumber( value[0], value[1], value[2], url );\n\n\t}\n\n\t/**\n\t * Applies HTML formatting to a slide number before it's\n\t * written to the DOM.\n\t *\n\t * @param {number} a Current slide\n\t * @param {string} delimiter Character to separate slide numbers\n\t * @param {(number|*)} b Total slides\n\t * @param {HTMLElement} [url='#'+locationHash()] The url to link to\n\t * @return {string} HTML string fragment\n\t */\n\tformatNumber( a, delimiter, b, url = '#' + this.Reveal.location.getHash() ) {\n\n\t\tif( typeof b === 'number' && !isNaN( b ) ) {\n\t\t\treturn  `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t<span class=\"slide-number-delimiter\">${delimiter}</span>\n\t\t\t\t\t<span class=\"slide-number-b\">${b}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\t\telse {\n\t\t\treturn `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","/**\n * Makes it possible to jump to a slide by entering its\n * slide number or id.\n */\nexport default class JumpToSlide {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onInput = this.onInput.bind( this );\n\t\tthis.onBlur = this.onBlur.bind( this );\n\t\tthis.onKeyDown = this.onKeyDown.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'jump-to-slide';\n\n    this.jumpInput = document.createElement( 'input' );\n    this.jumpInput.type = 'text';\n    this.jumpInput.className = 'jump-to-slide-input';\n    this.jumpInput.placeholder = 'Jump to slide';\n\t\tthis.jumpInput.addEventListener( 'input', this.onInput );\n\t\tthis.jumpInput.addEventListener( 'keydown', this.onKeyDown );\n\t\tthis.jumpInput.addEventListener( 'blur', this.onBlur );\n\n    this.element.appendChild( this.jumpInput );\n\n\t}\n\n\tshow() {\n\n\t\tthis.indicesOnShow = this.Reveal.getIndices();\n\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\t\tthis.jumpInput.focus();\n\n\t}\n\n\thide() {\n\n\t\tif( this.isVisible() ) {\n\t\t\tthis.element.remove();\n\t\t\tthis.jumpInput.value = '';\n\n\t\t\tclearTimeout( this.jumpTimeout );\n\t\t\tdelete this.jumpTimeout;\n\t\t}\n\n\t}\n\n\tisVisible() {\n\n\t\treturn !!this.element.parentNode;\n\n\t}\n\n\t/**\n\t * Parses the current input and jumps to the given slide.\n\t */\n\tjump() {\n\n\t\tclearTimeout( this.jumpTimeout );\n\t\tdelete this.jumpTimeout;\n\n\t\tconst query = this.jumpInput.value.trim( '' );\n\t\tlet indices = this.Reveal.location.getIndicesFromHash( query, { oneBasedIndex: true } );\n\n\t\t// If no valid index was found and the input query is a\n\t\t// string, fall back on a simple search\n\t\tif( !indices && /\\S+/i.test( query ) && query.length > 1 ) {\n\t\t\tindices = this.search( query );\n\t\t}\n\n\t\tif( indices && query !== '' ) {\n\t\t\tthis.Reveal.slide( indices.h, indices.v, indices.f );\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.slide( this.indicesOnShow.h, this.indicesOnShow.v, this.indicesOnShow.f );\n\t\t\treturn false;\n\t\t}\n\n\t}\n\n\tjumpAfter( delay ) {\n\n\t\tclearTimeout( this.jumpTimeout );\n\t\tthis.jumpTimeout = setTimeout( () => this.jump(), delay );\n\n\t}\n\n\t/**\n\t * A lofi search that looks for the given query in all\n\t * of our slides and returns the first match.\n\t */\n\tsearch( query ) {\n\n\t\tconst regex = new RegExp( '\\\\b' + query.trim() + '\\\\b', 'i' );\n\n\t\tconst slide = this.Reveal.getSlides().find( ( slide ) => {\n\t\t\treturn regex.test( slide.innerText );\n\t\t} );\n\n\t\tif( slide ) {\n\t\t\treturn this.Reveal.getIndices( slide );\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Reverts back to the slide we were on when jump to slide was\n\t * invoked.\n\t */\n\tcancel() {\n\n\t\tthis.Reveal.slide( this.indicesOnShow.h, this.indicesOnShow.v, this.indicesOnShow.f );\n\t\tthis.hide();\n\n\t}\n\n\tconfirm() {\n\n\t\tthis.jump();\n\t\tthis.hide();\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.jumpInput.removeEventListener( 'input', this.onInput );\n\t\tthis.jumpInput.removeEventListener( 'keydown', this.onKeyDown );\n\t\tthis.jumpInput.removeEventListener( 'blur', this.onBlur );\n\n\t\tthis.element.remove();\n\n\t}\n\n\tonKeyDown( event ) {\n\n\t\tif( event.keyCode === 13 ) {\n\t\t\tthis.confirm();\n\t\t}\n\t\telse if( event.keyCode === 27 ) {\n\t\t\tthis.cancel();\n\n\t\t\tevent.stopImmediatePropagation();\n\t\t}\n\n\t}\n\n\tonInput( event ) {\n\n\t\tthis.jumpAfter( 200 );\n\n\t}\n\n\tonBlur() {\n\n\t\tsetTimeout( () => this.hide(), 1 );\n\n\t}\n\n}","/**\n * Converts various color input formats to an {r:0,g:0,b:0} object.\n *\n * @param {string} color The string representation of a color\n * @example\n * colorToRgb('#000');\n * @example\n * colorToRgb('#000000');\n * @example\n * colorToRgb('rgb(0,0,0)');\n * @example\n * colorToRgb('rgba(0,0,0)');\n *\n * @return {{r: number, g: number, b: number, [a]: number}|null}\n */\nexport const colorToRgb = ( color ) => {\n\n\tlet hex3 = color.match( /^#([0-9a-f]{3})$/i );\n\tif( hex3 && hex3[1] ) {\n\t\thex3 = hex3[1];\n\t\treturn {\n\t\t\tr: parseInt( hex3.charAt( 0 ), 16 ) * 0x11,\n\t\t\tg: parseInt( hex3.charAt( 1 ), 16 ) * 0x11,\n\t\t\tb: parseInt( hex3.charAt( 2 ), 16 ) * 0x11\n\t\t};\n\t}\n\n\tlet hex6 = color.match( /^#([0-9a-f]{6})$/i );\n\tif( hex6 && hex6[1] ) {\n\t\thex6 = hex6[1];\n\t\treturn {\n\t\t\tr: parseInt( hex6.slice( 0, 2 ), 16 ),\n\t\t\tg: parseInt( hex6.slice( 2, 4 ), 16 ),\n\t\t\tb: parseInt( hex6.slice( 4, 6 ), 16 )\n\t\t};\n\t}\n\n\tlet rgb = color.match( /^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i );\n\tif( rgb ) {\n\t\treturn {\n\t\t\tr: parseInt( rgb[1], 10 ),\n\t\t\tg: parseInt( rgb[2], 10 ),\n\t\t\tb: parseInt( rgb[3], 10 )\n\t\t};\n\t}\n\n\tlet rgba = color.match( /^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\,\\s*([\\d]+|[\\d]*.[\\d]+)\\s*\\)$/i );\n\tif( rgba ) {\n\t\treturn {\n\t\t\tr: parseInt( rgba[1], 10 ),\n\t\t\tg: parseInt( rgba[2], 10 ),\n\t\t\tb: parseInt( rgba[3], 10 ),\n\t\t\ta: parseFloat( rgba[4] )\n\t\t};\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Calculates brightness on a scale of 0-255.\n *\n * @param {string} color See colorToRgb for supported formats.\n * @see {@link colorToRgb}\n */\nexport const colorBrightness = ( color ) => {\n\n\tif( typeof color === 'string' ) color = colorToRgb( color );\n\n\tif( color ) {\n\t\treturn ( color.r * 299 + color.g * 587 + color.b * 114 ) / 1000;\n\t}\n\n\treturn null;\n\n}","import { queryAll } from '../utils/util.js'\nimport { colorToRgb, colorBrightness } from '../utils/color.js'\n\n/**\n * Creates and updates slide backgrounds.\n */\nexport default class Backgrounds {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'backgrounds';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Creates the slide background elements and appends them\n\t * to the background container. One element is created per\n\t * slide no matter if the given slide has visible background.\n\t */\n\tcreate() {\n\n\t\t// Clear prior backgrounds\n\t\tthis.element.innerHTML = '';\n\t\tthis.element.classList.add( 'no-transition' );\n\n\t\t// Iterate over all horizontal slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( slideh => {\n\n\t\t\tlet backgroundStack = this.createBackground( slideh, this.element );\n\n\t\t\t// Iterate over all vertical slides\n\t\t\tqueryAll( slideh, 'section' ).forEach( slidev => {\n\n\t\t\t\tthis.createBackground( slidev, backgroundStack );\n\n\t\t\t\tbackgroundStack.classList.add( 'stack' );\n\n\t\t\t} );\n\n\t\t} );\n\n\t\t// Add parallax background if specified\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tthis.element.style.backgroundImage = 'url(\"' + this.Reveal.getConfig().parallaxBackgroundImage + '\")';\n\t\t\tthis.element.style.backgroundSize = this.Reveal.getConfig().parallaxBackgroundSize;\n\t\t\tthis.element.style.backgroundRepeat = this.Reveal.getConfig().parallaxBackgroundRepeat;\n\t\t\tthis.element.style.backgroundPosition = this.Reveal.getConfig().parallaxBackgroundPosition;\n\n\t\t\t// Make sure the below properties are set on the element - these properties are\n\t\t\t// needed for proper transitions to be set on the element via CSS. To remove\n\t\t\t// annoying background slide-in effect when the presentation starts, apply\n\t\t\t// these properties after short time delay\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.add( 'has-parallax-background' );\n\t\t\t}, 1 );\n\n\t\t}\n\t\telse {\n\n\t\t\tthis.element.style.backgroundImage = '';\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'has-parallax-background' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a background for the given slide.\n\t *\n\t * @param {HTMLElement} slide\n\t * @param {HTMLElement} container The element that the background\n\t * should be appended to\n\t * @return {HTMLElement} New background div\n\t */\n\tcreateBackground( slide, container ) {\n\n\t\t// Main slide background element\n\t\tlet element = document.createElement( 'div' );\n\t\telement.className = 'slide-background ' + slide.className.replace( /present|past|future/, '' );\n\n\t\t// Inner background element that wraps images/videos/iframes\n\t\tlet contentElement = document.createElement( 'div' );\n\t\tcontentElement.className = 'slide-background-content';\n\n\t\telement.appendChild( contentElement );\n\t\tcontainer.appendChild( element );\n\n\t\tslide.slideBackgroundElement = element;\n\t\tslide.slideBackgroundContentElement = contentElement;\n\n\t\t// Syncs the background to reflect all current background settings\n\t\tthis.sync( slide );\n\n\t\treturn element;\n\n\t}\n\n\t/**\n\t * Renders all of the visual properties of a slide background\n\t * based on the various background attributes.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tsync( slide ) {\n\n\t\tconst element = slide.slideBackgroundElement,\n\t\t\tcontentElement = slide.slideBackgroundContentElement;\n\n\t\tconst data = {\n\t\t\tbackground: slide.getAttribute( 'data-background' ),\n\t\t\tbackgroundSize: slide.getAttribute( 'data-background-size' ),\n\t\t\tbackgroundImage: slide.getAttribute( 'data-background-image' ),\n\t\t\tbackgroundVideo: slide.getAttribute( 'data-background-video' ),\n\t\t\tbackgroundIframe: slide.getAttribute( 'data-background-iframe' ),\n\t\t\tbackgroundColor: slide.getAttribute( 'data-background-color' ),\n\t\t\tbackgroundGradient: slide.getAttribute( 'data-background-gradient' ),\n\t\t\tbackgroundRepeat: slide.getAttribute( 'data-background-repeat' ),\n\t\t\tbackgroundPosition: slide.getAttribute( 'data-background-position' ),\n\t\t\tbackgroundTransition: slide.getAttribute( 'data-background-transition' ),\n\t\t\tbackgroundOpacity: slide.getAttribute( 'data-background-opacity' ),\n\t\t};\n\n\t\tconst dataPreload = slide.hasAttribute( 'data-preload' );\n\n\t\t// Reset the prior background state in case this is not the\n\t\t// initial sync\n\t\tslide.classList.remove( 'has-dark-background' );\n\t\tslide.classList.remove( 'has-light-background' );\n\n\t\telement.removeAttribute( 'data-loaded' );\n\t\telement.removeAttribute( 'data-background-hash' );\n\t\telement.removeAttribute( 'data-background-size' );\n\t\telement.removeAttribute( 'data-background-transition' );\n\t\telement.style.backgroundColor = '';\n\n\t\tcontentElement.style.backgroundSize = '';\n\t\tcontentElement.style.backgroundRepeat = '';\n\t\tcontentElement.style.backgroundPosition = '';\n\t\tcontentElement.style.backgroundImage = '';\n\t\tcontentElement.style.opacity = '';\n\t\tcontentElement.innerHTML = '';\n\n\t\tif( data.background ) {\n\t\t\t// Auto-wrap image urls in url(...)\n\t\t\tif( /^(http|file|\\/\\/)/gi.test( data.background ) || /\\.(svg|png|jpg|jpeg|gif|bmp|webp)([?#\\s]|$)/gi.test( data.background ) ) {\n\t\t\t\tslide.setAttribute( 'data-background-image', data.background );\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.background = data.background;\n\t\t\t}\n\t\t}\n\n\t\t// Create a hash for this combination of background settings.\n\t\t// This is used to determine when two slide backgrounds are\n\t\t// the same.\n\t\tif( data.background || data.backgroundColor || data.backgroundGradient || data.backgroundImage || data.backgroundVideo || data.backgroundIframe ) {\n\t\t\telement.setAttribute( 'data-background-hash', data.background +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundSize +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundImage +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundVideo +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundIframe +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundColor +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundGradient +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundRepeat +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundPosition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundTransition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundOpacity );\n\t\t}\n\n\t\t// Additional and optional background properties\n\t\tif( data.backgroundSize ) element.setAttribute( 'data-background-size', data.backgroundSize );\n\t\tif( data.backgroundColor ) element.style.backgroundColor = data.backgroundColor;\n\t\tif( data.backgroundGradient ) element.style.backgroundImage = data.backgroundGradient;\n\t\tif( data.backgroundTransition ) element.setAttribute( 'data-background-transition', data.backgroundTransition );\n\n\t\tif( dataPreload ) element.setAttribute( 'data-preload', '' );\n\n\t\t// Background image options are set on the content wrapper\n\t\tif( data.backgroundSize ) contentElement.style.backgroundSize = data.backgroundSize;\n\t\tif( data.backgroundRepeat ) contentElement.style.backgroundRepeat = data.backgroundRepeat;\n\t\tif( data.backgroundPosition ) contentElement.style.backgroundPosition = data.backgroundPosition;\n\t\tif( data.backgroundOpacity ) contentElement.style.opacity = data.backgroundOpacity;\n\n\t\t// If this slide has a background color, we add a class that\n\t\t// signals if it is light or dark. If the slide has no background\n\t\t// color, no class will be added\n\t\tlet contrastColor = data.backgroundColor;\n\n\t\t// If no bg color was found, or it cannot be converted by colorToRgb, check the computed background\n\t\tif( !contrastColor || !colorToRgb( contrastColor ) ) {\n\t\t\tlet computedBackgroundStyle = window.getComputedStyle( element );\n\t\t\tif( computedBackgroundStyle && computedBackgroundStyle.backgroundColor ) {\n\t\t\t\tcontrastColor = computedBackgroundStyle.backgroundColor;\n\t\t\t}\n\t\t}\n\n\t\tif( contrastColor ) {\n\t\t\tconst rgb = colorToRgb( contrastColor );\n\n\t\t\t// Ignore fully transparent backgrounds. Some browsers return\n\t\t\t// rgba(0,0,0,0) when reading the computed background color of\n\t\t\t// an element with no background\n\t\t\tif( rgb && rgb.a !== 0 ) {\n\t\t\t\tif( colorBrightness( contrastColor ) < 128 ) {\n\t\t\t\t\tslide.classList.add( 'has-dark-background' );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslide.classList.add( 'has-light-background' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the background elements to reflect the current\n\t * slide.\n\t *\n\t * @param {boolean} includeAll If true, the backgrounds of\n\t * all vertical slides (not just the present) will be updated.\n\t */\n\tupdate( includeAll = false ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tlet currentBackground = null;\n\n\t\t// Reverse past/future classes when in RTL mode\n\t\tlet horizontalPast = this.Reveal.getConfig().rtl ? 'future' : 'past',\n\t\t\thorizontalFuture = this.Reveal.getConfig().rtl ? 'past' : 'future';\n\n\t\t// Update the classes of all backgrounds to match the\n\t\t// states of their slides (past/present/future)\n\t\tArray.from( this.element.childNodes ).forEach( ( backgroundh, h ) => {\n\n\t\t\tbackgroundh.classList.remove( 'past', 'present', 'future' );\n\n\t\t\tif( h < indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalPast );\n\t\t\t}\n\t\t\telse if ( h > indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalFuture );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundh.classList.add( 'present' );\n\n\t\t\t\t// Store a reference to the current background element\n\t\t\t\tcurrentBackground = backgroundh;\n\t\t\t}\n\n\t\t\tif( includeAll || h === indices.h ) {\n\t\t\t\tqueryAll( backgroundh, '.slide-background' ).forEach( ( backgroundv, v ) => {\n\n\t\t\t\t\tbackgroundv.classList.remove( 'past', 'present', 'future' );\n\n\t\t\t\t\tif( v < indices.v ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'past' );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( v > indices.v ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'future' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundv.classList.add( 'present' );\n\n\t\t\t\t\t\t// Only if this is the present horizontal and vertical slide\n\t\t\t\t\t\tif( h === indices.h ) currentBackground = backgroundv;\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t}\n\n\t\t} );\n\n\t\t// Stop content inside of previous backgrounds\n\t\tif( this.previousBackground ) {\n\n\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( this.previousBackground, { unloadIframes: !this.Reveal.slideContent.shouldPreload( this.previousBackground ) } );\n\n\t\t}\n\n\t\t// Start content in the current background\n\t\tif( currentBackground ) {\n\n\t\t\tthis.Reveal.slideContent.startEmbeddedContent( currentBackground );\n\n\t\t\tlet currentBackgroundContent = currentBackground.querySelector( '.slide-background-content' );\n\t\t\tif( currentBackgroundContent ) {\n\n\t\t\t\tlet backgroundImageURL = currentBackgroundContent.style.backgroundImage || '';\n\n\t\t\t\t// Restart GIFs (doesn't work in Firefox)\n\t\t\t\tif( /\\.gif/i.test( backgroundImageURL ) ) {\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = '';\n\t\t\t\t\twindow.getComputedStyle( currentBackgroundContent ).opacity;\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = backgroundImageURL;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Don't transition between identical backgrounds. This\n\t\t\t// prevents unwanted flicker.\n\t\t\tlet previousBackgroundHash = this.previousBackground ? this.previousBackground.getAttribute( 'data-background-hash' ) : null;\n\t\t\tlet currentBackgroundHash = currentBackground.getAttribute( 'data-background-hash' );\n\t\t\tif( currentBackgroundHash && currentBackgroundHash === previousBackgroundHash && currentBackground !== this.previousBackground ) {\n\t\t\t\tthis.element.classList.add( 'no-transition' );\n\t\t\t}\n\n\t\t\tthis.previousBackground = currentBackground;\n\n\t\t}\n\n\t\t// If there's a background brightness flag for this slide,\n\t\t// bubble it to the .reveal container\n\t\tif( currentSlide ) {\n\t\t\t[ 'has-light-background', 'has-dark-background' ].forEach( classToBubble => {\n\t\t\t\tif( currentSlide.classList.contains( classToBubble ) ) {\n\t\t\t\t\tthis.Reveal.getRevealElement().classList.add( classToBubble );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.getRevealElement().classList.remove( classToBubble );\n\t\t\t\t}\n\t\t\t}, this );\n\t\t}\n\n\t\t// Allow the first background to apply without transition\n\t\tsetTimeout( () => {\n\t\t\tthis.element.classList.remove( 'no-transition' );\n\t\t}, 1 );\n\n\t}\n\n\t/**\n\t * Updates the position of the parallax background based\n\t * on the current slide index.\n\t */\n\tupdateParallax() {\n\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tlet horizontalSlides = this.Reveal.getHorizontalSlides(),\n\t\t\t\tverticalSlides = this.Reveal.getVerticalSlides();\n\n\t\t\tlet backgroundSize = this.element.style.backgroundSize.split( ' ' ),\n\t\t\t\tbackgroundWidth, backgroundHeight;\n\n\t\t\tif( backgroundSize.length === 1 ) {\n\t\t\t\tbackgroundWidth = backgroundHeight = parseInt( backgroundSize[0], 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundWidth = parseInt( backgroundSize[0], 10 );\n\t\t\t\tbackgroundHeight = parseInt( backgroundSize[1], 10 );\n\t\t\t}\n\n\t\t\tlet slideWidth = this.element.offsetWidth,\n\t\t\t\thorizontalSlideCount = horizontalSlides.length,\n\t\t\t\thorizontalOffsetMultiplier,\n\t\t\t\thorizontalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundHorizontal === 'number' ) {\n\t\t\t\thorizontalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundHorizontal;\n\t\t\t}\n\t\t\telse {\n\t\t\t\thorizontalOffsetMultiplier = horizontalSlideCount > 1 ? ( backgroundWidth - slideWidth ) / ( horizontalSlideCount-1 ) : 0;\n\t\t\t}\n\n\t\t\thorizontalOffset = horizontalOffsetMultiplier * indices.h * -1;\n\n\t\t\tlet slideHeight = this.element.offsetHeight,\n\t\t\t\tverticalSlideCount = verticalSlides.length,\n\t\t\t\tverticalOffsetMultiplier,\n\t\t\t\tverticalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundVertical === 'number' ) {\n\t\t\t\tverticalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundVertical;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tverticalOffsetMultiplier = ( backgroundHeight - slideHeight ) / ( verticalSlideCount-1 );\n\t\t\t}\n\n\t\t\tverticalOffset = verticalSlideCount > 0 ?  verticalOffsetMultiplier * indices.v : 0;\n\n\t\t\tthis.element.style.backgroundPosition = horizontalOffset + 'px ' + -verticalOffset + 'px';\n\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}\n","\nexport const SLIDES_SELECTOR = '.slides section';\nexport const HORIZONTAL_SLIDES_SELECTOR = '.slides>section';\nexport const VERTICAL_SLIDES_SELECTOR = '.slides>section.present>section';\n\n// Methods that may not be invoked via the postMessage API\nexport const POST_MESSAGE_METHOD_BLACKLIST = /registerPlugin|registerKeyboardShortcut|addKeyBinding|addEventListener|showPreview/;\n\n// Regex for retrieving the fragment style from a class attribute\nexport const FRAGMENT_STYLE_REGEX = /fade-(down|up|right|left|out|in-then-out|in-then-semi-out)|semi-fade-out|current-visible|shrink|grow/;","import { queryAll, extend, createStyleSheet, matches, closest } from '../utils/util.js'\nimport { FRAGMENT_STYLE_REGEX } from '../utils/constants.js'\n\n// Counter used to generate unique IDs for auto-animated elements\nlet autoAnimateCounter = 0;\n\n/**\n * Automatically animates matching elements across\n * slides with the [data-auto-animate] attribute.\n */\nexport default class AutoAnimate {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Runs an auto-animation between the given slides.\n\t *\n\t * @param  {HTMLElement} fromSlide\n\t * @param  {HTMLElement} toSlide\n\t */\n\trun( fromSlide, toSlide ) {\n\n\t\t// Clean up after prior animations\n\t\tthis.reset();\n\n\t\tlet allSlides = this.Reveal.getSlides();\n\t\tlet toSlideIndex = allSlides.indexOf( toSlide );\n\t\tlet fromSlideIndex = allSlides.indexOf( fromSlide );\n\n\t\t// Ensure that both slides are auto-animate targets with the same data-auto-animate-id value\n\t\t// (including null if absent on both) and that data-auto-animate-restart isn't set on the\n\t\t// physically latter slide (independent of slide direction)\n\t\tif( fromSlide.hasAttribute( 'data-auto-animate' ) && toSlide.hasAttribute( 'data-auto-animate' )\n\t\t\t\t&& fromSlide.getAttribute( 'data-auto-animate-id' ) === toSlide.getAttribute( 'data-auto-animate-id' ) \n\t\t\t\t&& !( toSlideIndex > fromSlideIndex ? toSlide : fromSlide ).hasAttribute( 'data-auto-animate-restart' ) ) {\n\n\t\t\t// Create a new auto-animate sheet\n\t\t\tthis.autoAnimateStyleSheet = this.autoAnimateStyleSheet || createStyleSheet();\n\n\t\t\tlet animationOptions = this.getAutoAnimateOptions( toSlide );\n\n\t\t\t// Set our starting state\n\t\t\tfromSlide.dataset.autoAnimate = 'pending';\n\t\t\ttoSlide.dataset.autoAnimate = 'pending';\n\n\t\t\t// Flag the navigation direction, needed for fragment buildup\n\t\t\tanimationOptions.slideDirection = toSlideIndex > fromSlideIndex ? 'forward' : 'backward';\n\n\t\t\t// If the from-slide is hidden because it has moved outside\n\t\t\t// the view distance, we need to temporarily show it while\n\t\t\t// measuring\n\t\t\tlet fromSlideIsHidden = fromSlide.style.display === 'none';\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = this.Reveal.getConfig().display;\n\n\t\t\t// Inject our auto-animate styles for this transition\n\t\t\tlet css = this.getAutoAnimatableElements( fromSlide, toSlide ).map( elements => {\n\t\t\t\treturn this.autoAnimateElements( elements.from, elements.to, elements.options || {}, animationOptions, autoAnimateCounter++ );\n\t\t\t} );\n\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = 'none';\n\n\t\t\t// Animate unmatched elements, if enabled\n\t\t\tif( toSlide.dataset.autoAnimateUnmatched !== 'false' && this.Reveal.getConfig().autoAnimateUnmatched === true ) {\n\n\t\t\t\t// Our default timings for unmatched elements\n\t\t\t\tlet defaultUnmatchedDuration = animationOptions.duration * 0.8,\n\t\t\t\t\tdefaultUnmatchedDelay = animationOptions.duration * 0.2;\n\n\t\t\t\tthis.getUnmatchedAutoAnimateElements( toSlide ).forEach( unmatchedElement => {\n\n\t\t\t\t\tlet unmatchedOptions = this.getAutoAnimateOptions( unmatchedElement, animationOptions );\n\t\t\t\t\tlet id = 'unmatched';\n\n\t\t\t\t\t// If there is a duration or delay set specifically for this\n\t\t\t\t\t// element our unmatched elements should adhere to those\n\t\t\t\t\tif( unmatchedOptions.duration !== animationOptions.duration || unmatchedOptions.delay !== animationOptions.delay ) {\n\t\t\t\t\t\tid = 'unmatched-' + autoAnimateCounter++;\n\t\t\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"${id}\"] { transition: opacity ${unmatchedOptions.duration}s ease ${unmatchedOptions.delay}s; }` );\n\t\t\t\t\t}\n\n\t\t\t\t\tunmatchedElement.dataset.autoAnimateTarget = id;\n\n\t\t\t\t}, this );\n\n\t\t\t\t// Our default transition for unmatched elements\n\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"unmatched\"] { transition: opacity ${defaultUnmatchedDuration}s ease ${defaultUnmatchedDelay}s; }` );\n\n\t\t\t}\n\n\t\t\t// Setting the whole chunk of CSS at once is the most\n\t\t\t// efficient way to do this. Using sheet.insertRule\n\t\t\t// is multiple factors slower.\n\t\t\tthis.autoAnimateStyleSheet.innerHTML = css.join( '' );\n\n\t\t\t// Start the animation next cycle\n\t\t\trequestAnimationFrame( () => {\n\t\t\t\tif( this.autoAnimateStyleSheet ) {\n\t\t\t\t\t// This forces our newly injected styles to be applied in Firefox\n\t\t\t\t\tgetComputedStyle( this.autoAnimateStyleSheet ).fontWeight;\n\n\t\t\t\t\ttoSlide.dataset.autoAnimate = 'running';\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'autoanimate',\n\t\t\t\tdata: {\n\t\t\t\t\tfromSlide,\n\t\t\t\t\ttoSlide,\n\t\t\t\t\tsheet: this.autoAnimateStyleSheet\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Rolls back all changes that we've made to the DOM so\n\t * that as part of animating.\n\t */\n\treset() {\n\n\t\t// Reset slides\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate]:not([data-auto-animate=\"\"])' ).forEach( element => {\n\t\t\telement.dataset.autoAnimate = '';\n\t\t} );\n\n\t\t// Reset elements\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate-target]' ).forEach( element => {\n\t\t\tdelete element.dataset.autoAnimateTarget;\n\t\t} );\n\n\t\t// Remove the animation sheet\n\t\tif( this.autoAnimateStyleSheet && this.autoAnimateStyleSheet.parentNode ) {\n\t\t\tthis.autoAnimateStyleSheet.parentNode.removeChild( this.autoAnimateStyleSheet );\n\t\t\tthis.autoAnimateStyleSheet = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a FLIP animation where the `to` element starts out\n\t * in the `from` element position and animates to its original\n\t * state.\n\t *\n\t * @param {HTMLElement} from\n\t * @param {HTMLElement} to\n\t * @param {Object} elementOptions Options for this element pair\n\t * @param {Object} animationOptions Options set at the slide level\n\t * @param {String} id Unique ID that we can use to identify this\n\t * auto-animate element in the DOM\n\t */\n\tautoAnimateElements( from, to, elementOptions, animationOptions, id ) {\n\n\t\t// 'from' elements are given a data-auto-animate-target with no value,\n\t\t// 'to' elements are are given a data-auto-animate-target with an ID\n\t\tfrom.dataset.autoAnimateTarget = '';\n\t\tto.dataset.autoAnimateTarget = id;\n\n\t\t// Each element may override any of the auto-animate options\n\t\t// like transition easing, duration and delay via data-attributes\n\t\tlet options = this.getAutoAnimateOptions( to, animationOptions );\n\n\t\t// If we're using a custom element matcher the element options\n\t\t// may contain additional transition overrides\n\t\tif( typeof elementOptions.delay !== 'undefined' ) options.delay = elementOptions.delay;\n\t\tif( typeof elementOptions.duration !== 'undefined' ) options.duration = elementOptions.duration;\n\t\tif( typeof elementOptions.easing !== 'undefined' ) options.easing = elementOptions.easing;\n\n\t\tlet fromProps = this.getAutoAnimatableProperties( 'from', from, elementOptions ),\n\t\t\ttoProps = this.getAutoAnimatableProperties( 'to', to, elementOptions );\n\n\t\t// Maintain fragment visibility for matching elements when\n\t\t// we're navigating forwards, this way the viewer won't need\n\t\t// to step through the same fragments twice\n\t\tif( to.classList.contains( 'fragment' ) ) {\n\n\t\t\t// Don't auto-animate the opacity of fragments to avoid\n\t\t\t// conflicts with fragment animations\n\t\t\tdelete toProps.styles['opacity'];\n\n\t\t\tif( from.classList.contains( 'fragment' ) ) {\n\n\t\t\t\tlet fromFragmentStyle = ( from.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\n\t\t\t\tlet toFragmentStyle = ( to.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\n\n\t\t\t\t// Only skip the fragment if the fragment animation style\n\t\t\t\t// remains unchanged\n\t\t\t\tif( fromFragmentStyle === toFragmentStyle && animationOptions.slideDirection === 'forward' ) {\n\t\t\t\t\tto.classList.add( 'visible', 'disabled' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// If translation and/or scaling are enabled, css transform\n\t\t// the 'to' element so that it matches the position and size\n\t\t// of the 'from' element\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\n\t\t\tlet presentationScale = this.Reveal.getScale();\n\n\t\t\tlet delta = {\n\t\t\t\tx: ( fromProps.x - toProps.x ) / presentationScale,\n\t\t\t\ty: ( fromProps.y - toProps.y ) / presentationScale,\n\t\t\t\tscaleX: fromProps.width / toProps.width,\n\t\t\t\tscaleY: fromProps.height / toProps.height\n\t\t\t};\n\n\t\t\t// Limit decimal points to avoid 0.0001px blur and stutter\n\t\t\tdelta.x = Math.round( delta.x * 1000 ) / 1000;\n\t\t\tdelta.y = Math.round( delta.y * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\n\t\t\tlet translate = elementOptions.translate !== false && ( delta.x !== 0 || delta.y !== 0 ),\n\t\t\t\tscale = elementOptions.scale !== false && ( delta.scaleX !== 0 || delta.scaleY !== 0 );\n\n\t\t\t// No need to transform if nothing's changed\n\t\t\tif( translate || scale ) {\n\n\t\t\t\tlet transform = [];\n\n\t\t\t\tif( translate ) transform.push( `translate(${delta.x}px, ${delta.y}px)` );\n\t\t\t\tif( scale ) transform.push( `scale(${delta.scaleX}, ${delta.scaleY})` );\n\n\t\t\t\tfromProps.styles['transform'] = transform.join( ' ' );\n\t\t\t\tfromProps.styles['transform-origin'] = 'top left';\n\n\t\t\t\ttoProps.styles['transform'] = 'none';\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Delete all unchanged 'to' styles\n\t\tfor( let propertyName in toProps.styles ) {\n\t\t\tconst toValue = toProps.styles[propertyName];\n\t\t\tconst fromValue = fromProps.styles[propertyName];\n\n\t\t\tif( toValue === fromValue ) {\n\t\t\t\tdelete toProps.styles[propertyName];\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// If these property values were set via a custom matcher providing\n\t\t\t\t// an explicit 'from' and/or 'to' value, we always inject those values.\n\t\t\t\tif( toValue.explicitValue === true ) {\n\t\t\t\t\ttoProps.styles[propertyName] = toValue.value;\n\t\t\t\t}\n\n\t\t\t\tif( fromValue.explicitValue === true ) {\n\t\t\t\t\tfromProps.styles[propertyName] = fromValue.value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet css = '';\n\n\t\tlet toStyleProperties = Object.keys( toProps.styles );\n\n\t\t// Only create animate this element IF at least one style\n\t\t// property has changed\n\t\tif( toStyleProperties.length > 0 ) {\n\n\t\t\t// Instantly move to the 'from' state\n\t\t\tfromProps.styles['transition'] = 'none';\n\n\t\t\t// Animate towards the 'to' state\n\t\t\ttoProps.styles['transition'] = `all ${options.duration}s ${options.easing} ${options.delay}s`;\n\t\t\ttoProps.styles['transition-property'] = toStyleProperties.join( ', ' );\n\t\t\ttoProps.styles['will-change'] = toStyleProperties.join( ', ' );\n\n\t\t\t// Build up our custom CSS. We need to override inline styles\n\t\t\t// so we need to make our styles vErY IMPORTANT!1!!\n\t\t\tlet fromCSS = Object.keys( fromProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + fromProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tlet toCSS = Object.keys( toProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + toProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tcss = \t'[data-auto-animate-target=\"'+ id +'\"] {'+ fromCSS +'}' +\n\t\t\t\t\t'[data-auto-animate=\"running\"] [data-auto-animate-target=\"'+ id +'\"] {'+ toCSS +'}';\n\n\t\t}\n\n\t\treturn css;\n\n\t}\n\n\t/**\n\t * Returns the auto-animate options for the given element.\n\t *\n\t * @param {HTMLElement} element Element to pick up options\n\t * from, either a slide or an animation target\n\t * @param {Object} [inheritedOptions] Optional set of existing\n\t * options\n\t */\n\tgetAutoAnimateOptions( element, inheritedOptions ) {\n\n\t\tlet options = {\n\t\t\teasing: this.Reveal.getConfig().autoAnimateEasing,\n\t\t\tduration: this.Reveal.getConfig().autoAnimateDuration,\n\t\t\tdelay: 0\n\t\t};\n\n\t\toptions = extend( options, inheritedOptions );\n\n\t\t// Inherit options from parent elements\n\t\tif( element.parentNode ) {\n\t\t\tlet autoAnimatedParent = closest( element.parentNode, '[data-auto-animate-target]' );\n\t\t\tif( autoAnimatedParent ) {\n\t\t\t\toptions = this.getAutoAnimateOptions( autoAnimatedParent, options );\n\t\t\t}\n\t\t}\n\n\t\tif( element.dataset.autoAnimateEasing ) {\n\t\t\toptions.easing = element.dataset.autoAnimateEasing;\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDuration ) {\n\t\t\toptions.duration = parseFloat( element.dataset.autoAnimateDuration );\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDelay ) {\n\t\t\toptions.delay = parseFloat( element.dataset.autoAnimateDelay );\n\t\t}\n\n\t\treturn options;\n\n\t}\n\n\t/**\n\t * Returns an object containing all of the properties\n\t * that can be auto-animated for the given element and\n\t * their current computed values.\n\t *\n\t * @param {String} direction 'from' or 'to'\n\t */\n\tgetAutoAnimatableProperties( direction, element, elementOptions ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\tlet properties = { styles: [] };\n\n\t\t// Position and size\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\t\t\tlet bounds;\n\n\t\t\t// Custom auto-animate may optionally return a custom tailored\n\t\t\t// measurement function\n\t\t\tif( typeof elementOptions.measure === 'function' ) {\n\t\t\t\tbounds = elementOptions.measure( element );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( config.center ) {\n\t\t\t\t\t// More precise, but breaks when used in combination\n\t\t\t\t\t// with zoom for scaling the deck ¯\\_(ツ)_/¯\n\t\t\t\t\tbounds = element.getBoundingClientRect();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet scale = this.Reveal.getScale();\n\t\t\t\t\tbounds = {\n\t\t\t\t\t\tx: element.offsetLeft * scale,\n\t\t\t\t\t\ty: element.offsetTop * scale,\n\t\t\t\t\t\twidth: element.offsetWidth * scale,\n\t\t\t\t\t\theight: element.offsetHeight * scale\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tproperties.x = bounds.x;\n\t\t\tproperties.y = bounds.y;\n\t\t\tproperties.width = bounds.width;\n\t\t\tproperties.height = bounds.height;\n\t\t}\n\n\t\tconst computedStyles = getComputedStyle( element );\n\n\t\t// CSS styles\n\t\t( elementOptions.styles || config.autoAnimateStyles ).forEach( style => {\n\t\t\tlet value;\n\n\t\t\t// `style` is either the property name directly, or an object\n\t\t\t// definition of a style property\n\t\t\tif( typeof style === 'string' ) style = { property: style };\n\n\t\t\tif( typeof style.from !== 'undefined' && direction === 'from' ) {\n\t\t\t\tvalue = { value: style.from, explicitValue: true };\n\t\t\t}\n\t\t\telse if( typeof style.to !== 'undefined' && direction === 'to' ) {\n\t\t\t\tvalue = { value: style.to, explicitValue: true };\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Use a unitless value for line-height so that it inherits properly\n\t\t\t\tif( style.property === 'line-height' ) {\n\t\t\t\t\tvalue = parseFloat( computedStyles['line-height'] ) / parseFloat( computedStyles['font-size'] );\n\t\t\t\t}\n\n\t\t\t\tif( isNaN(value) ) {\n\t\t\t\t\tvalue = computedStyles[style.property];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif( value !== '' ) {\n\t\t\t\tproperties.styles[style.property] = value;\n\t\t\t}\n\t\t} );\n\n\t\treturn properties;\n\n\t}\n\n\t/**\n\t * Get a list of all element pairs that we can animate\n\t * between the given slides.\n\t *\n\t * @param {HTMLElement} fromSlide\n\t * @param {HTMLElement} toSlide\n\t *\n\t * @return {Array} Each value is an array where [0] is\n\t * the element we're animating from and [1] is the\n\t * element we're animating to\n\t */\n\tgetAutoAnimatableElements( fromSlide, toSlide ) {\n\n\t\tlet matcher = typeof this.Reveal.getConfig().autoAnimateMatcher === 'function' ? this.Reveal.getConfig().autoAnimateMatcher : this.getAutoAnimatePairs;\n\n\t\tlet pairs = matcher.call( this, fromSlide, toSlide );\n\n\t\tlet reserved = [];\n\n\t\t// Remove duplicate pairs\n\t\treturn pairs.filter( ( pair, index ) => {\n\t\t\tif( reserved.indexOf( pair.to ) === -1 ) {\n\t\t\t\treserved.push( pair.to );\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Identifies matching elements between slides.\n\t *\n\t * You can specify a custom matcher function by using\n\t * the `autoAnimateMatcher` config option.\n\t */\n\tgetAutoAnimatePairs( fromSlide, toSlide ) {\n\n\t\tlet pairs = [];\n\n\t\tconst codeNodes = 'pre';\n\t\tconst textNodes = 'h1, h2, h3, h4, h5, h6, p, li';\n\t\tconst mediaNodes = 'img, video, iframe';\n\n\t\t// Explicit matches via data-id\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, '[data-id]', node => {\n\t\t\treturn node.nodeName + ':::' + node.getAttribute( 'data-id' );\n\t\t} );\n\n\t\t// Text\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, textNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.innerText;\n\t\t} );\n\n\t\t// Media\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, mediaNodes, node => {\n\t\t\treturn node.nodeName + ':::' + ( node.getAttribute( 'src' ) || node.getAttribute( 'data-src' ) );\n\t\t} );\n\n\t\t// Code\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, codeNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.innerText;\n\t\t} );\n\n\t\tpairs.forEach( pair => {\n\t\t\t// Disable scale transformations on text nodes, we transition\n\t\t\t// each individual text property instead\n\t\t\tif( matches( pair.from, textNodes ) ) {\n\t\t\t\tpair.options = { scale: false };\n\t\t\t}\n\t\t\t// Animate individual lines of code\n\t\t\telse if( matches( pair.from, codeNodes ) ) {\n\n\t\t\t\t// Transition the code block's width and height instead of scaling\n\t\t\t\t// to prevent its content from being squished\n\t\t\t\tpair.options = { scale: false, styles: [ 'width', 'height' ] };\n\n\t\t\t\t// Lines of code\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-code', node => {\n\t\t\t\t\treturn node.textContent;\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t\t// Line numbers\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-numbers[data-line-number]', node => {\n\t\t\t\t\treturn node.getAttribute( 'data-line-number' );\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [ 'width' ],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\treturn pairs;\n\n\t}\n\n\t/**\n\t * Helper method which returns a bounding box based on\n\t * the given elements offset coordinates.\n\t *\n\t * @param {HTMLElement} element\n\t * @return {Object} x, y, width, height\n\t */\n\tgetLocalBoundingBox( element ) {\n\n\t\tconst presentationScale = this.Reveal.getScale();\n\n\t\treturn {\n\t\t\tx: Math.round( ( element.offsetLeft * presentationScale ) * 100 ) / 100,\n\t\t\ty: Math.round( ( element.offsetTop * presentationScale ) * 100 ) / 100,\n\t\t\twidth: Math.round( ( element.offsetWidth * presentationScale ) * 100 ) / 100,\n\t\t\theight: Math.round( ( element.offsetHeight * presentationScale ) * 100 ) / 100\n\t\t};\n\n\t}\n\n\t/**\n\t * Finds matching elements between two slides.\n\t *\n\t * @param {Array} pairs            \tList of pairs to push matches to\n\t * @param {HTMLElement} fromScope   Scope within the from element exists\n\t * @param {HTMLElement} toScope     Scope within the to element exists\n\t * @param {String} selector         CSS selector of the element to match\n\t * @param {Function} serializer     A function that accepts an element and returns\n\t *                                  a stringified ID based on its contents\n\t * @param {Object} animationOptions Optional config options for this pair\n\t */\n\tfindAutoAnimateMatches( pairs, fromScope, toScope, selector, serializer, animationOptions ) {\n\n\t\tlet fromMatches = {};\n\t\tlet toMatches = {};\n\n\t\t[].slice.call( fromScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\tif( typeof key === 'string' && key.length ) {\n\t\t\t\tfromMatches[key] = fromMatches[key] || [];\n\t\t\t\tfromMatches[key].push( element );\n\t\t\t}\n\t\t} );\n\n\t\t[].slice.call( toScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\ttoMatches[key] = toMatches[key] || [];\n\t\t\ttoMatches[key].push( element );\n\n\t\t\tlet fromElement;\n\n\t\t\t// Retrieve the 'from' element\n\t\t\tif( fromMatches[key] ) {\n\t\t\t\tconst primaryIndex = toMatches[key].length - 1;\n\t\t\t\tconst secondaryIndex = fromMatches[key].length - 1;\n\n\t\t\t\t// If there are multiple identical from elements, retrieve\n\t\t\t\t// the one at the same index as our to-element.\n\t\t\t\tif( fromMatches[key][ primaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ primaryIndex ];\n\t\t\t\t\tfromMatches[key][ primaryIndex ] = null;\n\t\t\t\t}\n\t\t\t\t// If there are no matching from-elements at the same index,\n\t\t\t\t// use the last one.\n\t\t\t\telse if( fromMatches[key][ secondaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ secondaryIndex ];\n\t\t\t\t\tfromMatches[key][ secondaryIndex ] = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we've got a matching pair, push it to the list of pairs\n\t\t\tif( fromElement ) {\n\t\t\t\tpairs.push({\n\t\t\t\t\tfrom: fromElement,\n\t\t\t\t\tto: element,\n\t\t\t\t\toptions: animationOptions\n\t\t\t\t});\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns a all elements within the given scope that should\n\t * be considered unmatched in an auto-animate transition. If\n\t * fading of unmatched elements is turned on, these elements\n\t * will fade when going between auto-animate slides.\n\t *\n\t * Note that parents of auto-animate targets are NOT considered\n\t * unmatched since fading them would break the auto-animation.\n\t *\n\t * @param {HTMLElement} rootElement\n\t * @return {Array}\n\t */\n\tgetUnmatchedAutoAnimateElements( rootElement ) {\n\n\t\treturn [].slice.call( rootElement.children ).reduce( ( result, element ) => {\n\n\t\t\tconst containsAnimatedElements = element.querySelector( '[data-auto-animate-target]' );\n\n\t\t\t// The element is unmatched if\n\t\t\t// - It is not an auto-animate target\n\t\t\t// - It does not contain any auto-animate targets\n\t\t\tif( !element.hasAttribute( 'data-auto-animate-target' ) && !containsAnimatedElements ) {\n\t\t\t\tresult.push( element );\n\t\t\t}\n\n\t\t\tif( element.querySelector( '[data-auto-animate-target]' ) ) {\n\t\t\t\tresult = result.concat( this.getUnmatchedAutoAnimateElements( element ) );\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}, [] );\n\n\t}\n\n}\n","import { extend, queryAll } from '../utils/util.js'\n\n/**\n * Handles sorting and navigation of slide fragments.\n * Fragments are elements within a slide that are\n * revealed/animated incrementally.\n */\nexport default class Fragments {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.fragments === false ) {\n\t\t\tthis.disable();\n\t\t}\n\t\telse if( oldConfig.fragments === false ) {\n\t\t\tthis.enable();\n\t\t}\n\n\t}\n\n\t/**\n\t * If fragments are disabled in the deck, they should all be\n\t * visible rather than stepped through.\n\t */\n\tdisable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.add( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Reverse of #disable(). Only called if fragments have\n\t * previously been disabled.\n\t */\n\tenable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.remove( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns an object describing the available fragment\n\t * directions.\n\t *\n\t * @return {{prev: boolean, next: boolean}}\n\t */\n\tavailableRoutes() {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\t\t\tlet fragments = currentSlide.querySelectorAll( '.fragment:not(.disabled)' );\n\t\t\tlet hiddenFragments = currentSlide.querySelectorAll( '.fragment:not(.disabled):not(.visible)' );\n\n\t\t\treturn {\n\t\t\t\tprev: fragments.length - hiddenFragments.length > 0,\n\t\t\t\tnext: !!hiddenFragments.length\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\treturn { prev: false, next: false };\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a sorted fragments list, ordered by an increasing\n\t * \"data-fragment-index\" attribute.\n\t *\n\t * Fragments will be revealed in the order that they are returned by\n\t * this function, so you can use the index attributes to control the\n\t * order of fragment appearance.\n\t *\n\t * To maintain a sensible default fragment order, fragments are presumed\n\t * to be passed in document order. This function adds a \"fragment-index\"\n\t * attribute to each node if such an attribute is not already present,\n\t * and sets that attribute to an integer value which is the position of\n\t * the fragment within the fragments list.\n\t *\n\t * @param {object[]|*} fragments\n\t * @param {boolean} grouped If true the returned array will contain\n\t * nested arrays for all fragments with the same index\n\t * @return {object[]} sorted Sorted array of fragments\n\t */\n\tsort( fragments, grouped = false ) {\n\n\t\tfragments = Array.from( fragments );\n\n\t\tlet ordered = [],\n\t\t\tunordered = [],\n\t\t\tsorted = [];\n\n\t\t// Group ordered and unordered elements\n\t\tfragments.forEach( fragment => {\n\t\t\tif( fragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\tlet index = parseInt( fragment.getAttribute( 'data-fragment-index' ), 10 );\n\n\t\t\t\tif( !ordered[index] ) {\n\t\t\t\t\tordered[index] = [];\n\t\t\t\t}\n\n\t\t\t\tordered[index].push( fragment );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tunordered.push( [ fragment ] );\n\t\t\t}\n\t\t} );\n\n\t\t// Append fragments without explicit indices in their\n\t\t// DOM order\n\t\tordered = ordered.concat( unordered );\n\n\t\t// Manually count the index up per group to ensure there\n\t\t// are no gaps\n\t\tlet index = 0;\n\n\t\t// Push all fragments in their sorted order to an array,\n\t\t// this flattens the groups\n\t\tordered.forEach( group => {\n\t\t\tgroup.forEach( fragment => {\n\t\t\t\tsorted.push( fragment );\n\t\t\t\tfragment.setAttribute( 'data-fragment-index', index );\n\t\t\t} );\n\n\t\t\tindex ++;\n\t\t} );\n\n\t\treturn grouped === true ? ordered : sorted;\n\n\t}\n\n\t/**\n\t * Sorts and formats all of fragments in the\n\t * presentation.\n\t */\n\tsortAll() {\n\n\t\tthis.Reveal.getHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tlet verticalSlides = queryAll( horizontalSlide, 'section' );\n\t\t\tverticalSlides.forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tthis.sort( verticalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t\t}, this );\n\n\t\t\tif( verticalSlides.length === 0 ) this.sort( horizontalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Refreshes the fragments on the current slide so that they\n\t * have the appropriate classes (.visible + .current-fragment).\n\t *\n\t * @param {number} [index] The index of the current fragment\n\t * @param {array} [fragments] Array containing all fragments\n\t * in the current slide\n\t *\n\t * @return {{shown: array, hidden: array}}\n\t */\n\tupdate( index, fragments ) {\n\n\t\tlet changedFragments = {\n\t\t\tshown: [],\n\t\t\thidden: []\n\t\t};\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tfragments = fragments || this.sort( currentSlide.querySelectorAll( '.fragment' ) );\n\n\t\t\tif( fragments.length ) {\n\n\t\t\t\tlet maxIndex = 0;\n\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet currentFragment = this.sort( currentSlide.querySelectorAll( '.fragment.visible' ) ).pop();\n\t\t\t\t\tif( currentFragment ) {\n\t\t\t\t\t\tindex = parseInt( currentFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tArray.from( fragments ).forEach( ( el, i ) => {\n\n\t\t\t\t\tif( el.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\t\ti = parseInt( el.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t\t}\n\n\t\t\t\t\tmaxIndex = Math.max( maxIndex, i );\n\n\t\t\t\t\t// Visible fragments\n\t\t\t\t\tif( i <= index ) {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.add( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( i === index ) {\n\t\t\t\t\t\t\t// Announce the fragments one by one to the Screen Reader\n\t\t\t\t\t\t\tthis.Reveal.announceStatus( this.Reveal.getStatusText( el ) );\n\n\t\t\t\t\t\t\tel.classList.add( 'current-fragment' );\n\t\t\t\t\t\t\tthis.Reveal.slideContent.startEmbeddedContent( el );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif( !wasVisible ) {\n\t\t\t\t\t\t\tchangedFragments.shown.push( el )\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'visible',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Hidden fragments\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.remove( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( wasVisible ) {\n\t\t\t\t\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( el );\n\t\t\t\t\t\t\tchangedFragments.hidden.push( el );\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'hidden',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\t// Write the current fragment index to the slide <section>.\n\t\t\t\t// This can be used by end users to apply styles based on\n\t\t\t\t// the current fragment index.\n\t\t\t\tindex = typeof index === 'number' ? index : -1;\n\t\t\t\tindex = Math.max( Math.min( index, maxIndex ), -1 );\n\t\t\t\tcurrentSlide.setAttribute( 'data-fragment', index );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn changedFragments;\n\n\t}\n\n\t/**\n\t * Formats the fragments on the given slide so that they have\n\t * valid indices. Call this if fragments are changed in the DOM\n\t * after reveal.js has already initialized.\n\t *\n\t * @param {HTMLElement} slide\n\t * @return {Array} a list of the HTML fragments that were synced\n\t */\n\tsync( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\treturn this.sort( slide.querySelectorAll( '.fragment' ) );\n\n\t}\n\n\t/**\n\t * Navigate to the specified slide fragment.\n\t *\n\t * @param {?number} index The index of the fragment that\n\t * should be shown, -1 means all are invisible\n\t * @param {number} offset Integer offset to apply to the\n\t * fragment index\n\t *\n\t * @return {boolean} true if a change was made in any\n\t * fragments visibility as part of this call\n\t */\n\tgoto( index, offset = 0 ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tlet fragments = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled)' ) );\n\t\t\tif( fragments.length ) {\n\n\t\t\t\t// If no index is specified, find the current\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet lastVisibleFragment = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled).visible' ) ).pop();\n\n\t\t\t\t\tif( lastVisibleFragment ) {\n\t\t\t\t\t\tindex = parseInt( lastVisibleFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tindex = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply the offset if there is one\n\t\t\t\tindex += offset;\n\n\t\t\t\tlet changedFragments = this.update( index, fragments );\n\n\t\t\t\tif( changedFragments.hidden.length ) {\n\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\ttype: 'fragmenthidden',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tfragment: changedFragments.hidden[0],\n\t\t\t\t\t\t\tfragments: changedFragments.hidden\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif( changedFragments.shown.length ) {\n\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\ttype: 'fragmentshown',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tfragment: changedFragments.shown[0],\n\t\t\t\t\t\t\tfragments: changedFragments.shown\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis.Reveal.controls.update();\n\t\t\t\tthis.Reveal.progress.update();\n\n\t\t\t\tif( this.Reveal.getConfig().fragmentInURL ) {\n\t\t\t\t\tthis.Reveal.location.writeURL();\n\t\t\t\t}\n\n\t\t\t\treturn !!( changedFragments.shown.length || changedFragments.hidden.length );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Navigate to the next slide fragment.\n\t *\n\t * @return {boolean} true if there was a next fragment,\n\t * false otherwise\n\t */\n\tnext() {\n\n\t\treturn this.goto( null, 1 );\n\n\t}\n\n\t/**\n\t * Navigate to the previous slide fragment.\n\t *\n\t * @return {boolean} true if there was a previous fragment,\n\t * false otherwise\n\t */\n\tprev() {\n\n\t\treturn this.goto( null, -1 );\n\n\t}\n\n}","import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { extend, queryAll, transformElement } from '../utils/util.js'\n\n/**\n * Handles all logic related to the overview mode\n * (birds-eye view of all slides).\n */\nexport default class Overview {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.active = false;\n\n\t\tthis.onSlideClicked = this.onSlideClicked.bind( this );\n\n\t}\n\n\t/**\n\t * Displays the overview of slides (quick nav) by scaling\n\t * down and arranging all slide elements.\n\t */\n\tactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview && !this.isActive() ) {\n\n\t\t\tthis.active = true;\n\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview' );\n\n\t\t\t// Don't auto-slide while in overview mode\n\t\t\tthis.Reveal.cancelAutoSlide();\n\n\t\t\t// Move the backgrounds element into the slide container to\n\t\t\t// that the same scaling is applied\n\t\t\tthis.Reveal.getSlidesElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clicking on an overview slide navigates to it\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\tif( !slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tslide.addEventListener( 'click', this.onSlideClicked, true );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Calculate slide sizes\n\t\t\tconst margin = 70;\n\t\t\tconst slideSize = this.Reveal.getComputedSlideSize();\n\t\t\tthis.overviewSlideWidth = slideSize.width + margin;\n\t\t\tthis.overviewSlideHeight = slideSize.height + margin;\n\n\t\t\t// Reverse in RTL mode\n\t\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\t\tthis.overviewSlideWidth = -this.overviewSlideWidth;\n\t\t\t}\n\n\t\t\tthis.Reveal.updateSlidesVisibility();\n\n\t\t\tthis.layout();\n\t\t\tthis.update();\n\n\t\t\tthis.Reveal.layout();\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\t// Notify observers of the overview showing\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewshown',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Uses CSS transforms to position all slides in a grid for\n\t * display inside of the overview mode.\n\t */\n\tlayout() {\n\n\t\t// Layout slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( ( hslide, h ) => {\n\t\t\thslide.setAttribute( 'data-index-h', h );\n\t\t\ttransformElement( hslide, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tif( hslide.classList.contains( 'stack' ) ) {\n\n\t\t\t\tqueryAll( hslide, 'section' ).forEach( ( vslide, v ) => {\n\t\t\t\t\tvslide.setAttribute( 'data-index-h', h );\n\t\t\t\t\tvslide.setAttribute( 'data-index-v', v );\n\n\t\t\t\t\ttransformElement( vslide, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t\t} );\n\n\t\t\t}\n\t\t} );\n\n\t\t// Layout slide backgrounds\n\t\tArray.from( this.Reveal.getBackgroundsElement().childNodes ).forEach( ( hbackground, h ) => {\n\t\t\ttransformElement( hbackground, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tqueryAll( hbackground, '.slide-background' ).forEach( ( vbackground, v ) => {\n\t\t\t\ttransformElement( vbackground, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Moves the overview viewport to the current slides.\n\t * Called each time the current slide changes.\n\t */\n\tupdate() {\n\n\t\tconst vmin = Math.min( window.innerWidth, window.innerHeight );\n\t\tconst scale = Math.max( vmin / 5, 150 ) / vmin;\n\t\tconst indices = this.Reveal.getIndices();\n\n\t\tthis.Reveal.transformSlides( {\n\t\t\toverview: [\n\t\t\t\t'scale('+ scale +')',\n\t\t\t\t'translateX('+ ( -indices.h * this.overviewSlideWidth ) +'px)',\n\t\t\t\t'translateY('+ ( -indices.v * this.overviewSlideHeight ) +'px)'\n\t\t\t].join( ' ' )\n\t\t} );\n\n\t}\n\n\t/**\n\t * Exits the slide overview and enters the currently\n\t * active slide.\n\t */\n\tdeactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview ) {\n\n\t\t\tthis.active = false;\n\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview' );\n\n\t\t\t// Temporarily add a class so that transitions can do different things\n\t\t\t// depending on whether they are exiting/entering overview, or just\n\t\t\t// moving from slide to slide\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview-deactivating' );\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview-deactivating' );\n\t\t\t}, 1 );\n\n\t\t\t// Move the background element back out\n\t\t\tthis.Reveal.getRevealElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clean up changes made to slides\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\ttransformElement( slide, '' );\n\n\t\t\t\tslide.removeEventListener( 'click', this.onSlideClicked, true );\n\t\t\t} );\n\n\t\t\t// Clean up changes made to backgrounds\n\t\t\tqueryAll( this.Reveal.getBackgroundsElement(), '.slide-background' ).forEach( background => {\n\t\t\t\ttransformElement( background, '' );\n\t\t\t} );\n\n\t\t\tthis.Reveal.transformSlides( { overview: '' } );\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\tthis.Reveal.slide( indices.h, indices.v );\n\t\t\tthis.Reveal.layout();\n\t\t\tthis.Reveal.cueAutoSlide();\n\n\t\t\t// Notify observers of the overview hiding\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewhidden',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the slide overview mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * overview is open, false means it's closed.\n\t */\n\ttoggle( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? this.activate() : this.deactivate();\n\t\t}\n\t\telse {\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the overview is currently active.\n\t *\n\t * @return {Boolean} true if the overview is active,\n\t * false otherwise\n\t */\n\tisActive() {\n\n\t\treturn this.active;\n\n\t}\n\n\t/**\n\t * Invoked when a slide is and we're in the overview.\n\t *\n\t * @param {object} event\n\t */\n\tonSlideClicked( event ) {\n\n\t\tif( this.isActive() ) {\n\t\t\tevent.preventDefault();\n\n\t\t\tlet element = event.target;\n\n\t\t\twhile( element && !element.nodeName.match( /section/gi ) ) {\n\t\t\t\telement = element.parentNode;\n\t\t\t}\n\n\t\t\tif( element && !element.classList.contains( 'disabled' ) ) {\n\n\t\t\t\tthis.deactivate();\n\n\t\t\t\tif( element.nodeName.match( /section/gi ) ) {\n\t\t\t\t\tlet h = parseInt( element.getAttribute( 'data-index-h' ), 10 ),\n\t\t\t\t\t\tv = parseInt( element.getAttribute( 'data-index-v' ), 10 );\n\n\t\t\t\t\tthis.Reveal.slide( h, v );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n}","import { enterFullscreen } from '../utils/util.js'\n\n/**\n * Handles all reveal.js keyboard interactions.\n */\nexport default class Keyboard {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// A key:value map of keyboard keys and descriptions of\n\t\t// the actions they trigger\n\t\tthis.shortcuts = {};\n\n\t\t// Holds custom key code mappings\n\t\tthis.bindings = {};\n\n\t\tthis.onDocumentKeyDown = this.onDocumentKeyDown.bind( this );\n\t\tthis.onDocumentKeyPress = this.onDocumentKeyPress.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.navigationMode === 'linear' ) {\n\t\t\tthis.shortcuts['&#8594;  ,  &#8595;  ,  SPACE  ,  N  ,  L  ,  J'] = 'Next slide';\n\t\t\tthis.shortcuts['&#8592;  ,  &#8593;  ,  P  ,  H  ,  K']           = 'Previous slide';\n\t\t}\n\t\telse {\n\t\t\tthis.shortcuts['N  ,  SPACE']   = 'Next slide';\n\t\t\tthis.shortcuts['P  ,  Shift SPACE']             = 'Previous slide';\n\t\t\tthis.shortcuts['&#8592;  ,  H'] = 'Navigate left';\n\t\t\tthis.shortcuts['&#8594;  ,  L'] = 'Navigate right';\n\t\t\tthis.shortcuts['&#8593;  ,  K'] = 'Navigate up';\n\t\t\tthis.shortcuts['&#8595;  ,  J'] = 'Navigate down';\n\t\t}\n\n\t\tthis.shortcuts['Alt + &#8592;/&#8593/&#8594;/&#8595;']        = 'Navigate without fragments';\n\t\tthis.shortcuts['Shift + &#8592;/&#8593/&#8594;/&#8595;']      = 'Jump to first/last slide';\n\t\tthis.shortcuts['B  ,  .']                       = 'Pause';\n\t\tthis.shortcuts['F']                             = 'Fullscreen';\n\t\tthis.shortcuts['G']                             = 'Jump to slide';\n\t\tthis.shortcuts['ESC, O']                        = 'Slide overview';\n\n\t}\n\n\t/**\n\t * Starts listening for keyboard events.\n\t */\n\tbind() {\n\n\t\tdocument.addEventListener( 'keydown', this.onDocumentKeyDown, false );\n\t\tdocument.addEventListener( 'keypress', this.onDocumentKeyPress, false );\n\n\t}\n\n\t/**\n\t * Stops listening for keyboard events.\n\t */\n\tunbind() {\n\n\t\tdocument.removeEventListener( 'keydown', this.onDocumentKeyDown, false );\n\t\tdocument.removeEventListener( 'keypress', this.onDocumentKeyPress, false );\n\n\t}\n\n\t/**\n\t * Add a custom key binding with optional description to\n\t * be added to the help screen.\n\t */\n\taddKeyBinding( binding, callback ) {\n\n\t\tif( typeof binding === 'object' && binding.keyCode ) {\n\t\t\tthis.bindings[binding.keyCode] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: binding.key,\n\t\t\t\tdescription: binding.description\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tthis.bindings[binding] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: null,\n\t\t\t\tdescription: null\n\t\t\t};\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes the specified custom key binding.\n\t */\n\tremoveKeyBinding( keyCode ) {\n\n\t\tdelete this.bindings[keyCode];\n\n\t}\n\n\t/**\n\t * Programmatically triggers a keyboard event\n\t *\n\t * @param {int} keyCode\n\t */\n\ttriggerKey( keyCode ) {\n\n\t\tthis.onDocumentKeyDown( { keyCode } );\n\n\t}\n\n\t/**\n\t * Registers a new shortcut to include in the help overlay\n\t *\n\t * @param {String} key\n\t * @param {String} value\n\t */\n\tregisterKeyboardShortcut( key, value ) {\n\n\t\tthis.shortcuts[key] = value;\n\n\t}\n\n\tgetShortcuts() {\n\n\t\treturn this.shortcuts;\n\n\t}\n\n\tgetBindings() {\n\n\t\treturn this.bindings;\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keypress' event.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentKeyPress( event ) {\n\n\t\t// Check if the pressed key is question mark\n\t\tif( event.shiftKey && event.charCode === 63 ) {\n\t\t\tthis.Reveal.toggleHelp();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keydown' event.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentKeyDown( event ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// If there's a condition specified and it returns false,\n\t\t// ignore this event\n\t\tif( typeof config.keyboardCondition === 'function' && config.keyboardCondition(event) === false ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// If keyboardCondition is set, only capture keyboard events\n\t\t// for embedded decks when they are focused\n\t\tif( config.keyboardCondition === 'focused' && !this.Reveal.isFocused() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Shorthand\n\t\tlet keyCode = event.keyCode;\n\n\t\t// Remember if auto-sliding was paused so we can toggle it\n\t\tlet autoSlideWasPaused = !this.Reveal.isAutoSliding();\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\t// Is there a focused element that could be using the keyboard?\n\t\tlet activeElementIsCE = document.activeElement && document.activeElement.isContentEditable === true;\n\t\tlet activeElementIsInput = document.activeElement && document.activeElement.tagName && /input|textarea/i.test( document.activeElement.tagName );\n\t\tlet activeElementIsNotes = document.activeElement && document.activeElement.className && /speaker-notes/i.test( document.activeElement.className);\n\n\t\t// Whitelist certain modifiers for slide navigation shortcuts\n\t\tlet isNavigationKey = [32, 37, 38, 39, 40, 78, 80].indexOf( event.keyCode ) !== -1;\n\n\t\t// Prevent all other events when a modifier is pressed\n\t\tlet unusedModifier = \t!( isNavigationKey && event.shiftKey || event.altKey ) &&\n\t\t\t\t\t\t\t\t( event.shiftKey || event.altKey || event.ctrlKey || event.metaKey );\n\n\t\t// Disregard the event if there's a focused element or a\n\t\t// keyboard modifier key is present\n\t\tif( activeElementIsCE || activeElementIsInput || activeElementIsNotes || unusedModifier ) return;\n\n\t\t// While paused only allow resume keyboard events; 'b', 'v', '.'\n\t\tlet resumeKeyCodes = [66,86,190,191];\n\t\tlet key;\n\n\t\t// Custom key bindings for togglePause should be able to resume\n\t\tif( typeof config.keyboard === 'object' ) {\n\t\t\tfor( key in config.keyboard ) {\n\t\t\t\tif( config.keyboard[key] === 'togglePause' ) {\n\t\t\t\t\tresumeKeyCodes.push( parseInt( key, 10 ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( this.Reveal.isPaused() && resumeKeyCodes.indexOf( keyCode ) === -1 ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Use linear navigation if we're configured to OR if\n\t\t// the presentation is one-dimensional\n\t\tlet useLinearMode = config.navigationMode === 'linear' || !this.Reveal.hasHorizontalSlides() || !this.Reveal.hasVerticalSlides();\n\n\t\tlet triggered = false;\n\n\t\t// 1. User defined key bindings\n\t\tif( typeof config.keyboard === 'object' ) {\n\n\t\t\tfor( key in config.keyboard ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet value = config.keyboard[ key ];\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof value === 'function' ) {\n\t\t\t\t\t\tvalue.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof value === 'string' && typeof this.Reveal[ value ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ value ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// 2. Registered custom key bindings\n\t\tif( triggered === false ) {\n\n\t\t\tfor( key in this.bindings ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet action = this.bindings[ key ].callback;\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof action === 'function' ) {\n\t\t\t\t\t\taction.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof action === 'string' && typeof this.Reveal[ action ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ action ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// 3. System defined key bindings\n\t\tif( triggered === false ) {\n\n\t\t\t// Assume true and try to prove false\n\t\t\ttriggered = true;\n\n\t\t\t// P, PAGE UP\n\t\t\tif( keyCode === 80 || keyCode === 33 ) {\n\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// N, PAGE DOWN\n\t\t\telse if( keyCode === 78 || keyCode === 34 ) {\n\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// H, LEFT\n\t\t\telse if( keyCode === 72 || keyCode === 37 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.left({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// L, RIGHT\n\t\t\telse if( keyCode === 76 || keyCode === 39 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.right({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// K, UP\n\t\t\telse if( keyCode === 75 || keyCode === 38 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.up({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// J, DOWN\n\t\t\telse if( keyCode === 74 || keyCode === 40 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, Number.MAX_VALUE );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.down({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// HOME\n\t\t\telse if( keyCode === 36 ) {\n\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t}\n\t\t\t// END\n\t\t\telse if( keyCode === 35 ) {\n\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t}\n\t\t\t// SPACE\n\t\t\telse if( keyCode === 32 ) {\n\t\t\t\tif( this.Reveal.overview.isActive() ) {\n\t\t\t\t\tthis.Reveal.overview.deactivate();\n\t\t\t\t}\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// TWO-SPOT, SEMICOLON, B, V, PERIOD, LOGITECH PRESENTER TOOLS \"BLACK SCREEN\" BUTTON\n\t\t\telse if( keyCode === 58 || keyCode === 59 || keyCode === 66 || keyCode === 86 || keyCode === 190 || keyCode === 191 ) {\n\t\t\t\tthis.Reveal.togglePause();\n\t\t\t}\n\t\t\t// F\n\t\t\telse if( keyCode === 70 ) {\n\t\t\t\tenterFullscreen( config.embedded ? this.Reveal.getViewportElement() : document.documentElement );\n\t\t\t}\n\t\t\t// A\n\t\t\telse if( keyCode === 65 ) {\n\t\t\t\tif ( config.autoSlideStoppable ) {\n\t\t\t\t\tthis.Reveal.toggleAutoSlide( autoSlideWasPaused );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// G\n\t\t\telse if( keyCode === 71 ) {\n\t\t\t\tif ( config.jumpToSlide ) {\n\t\t\t\t\tthis.Reveal.toggleJumpToSlide();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttriggered = false;\n\t\t\t}\n\n\t\t}\n\n\t\t// If the input resulted in a triggered action we should prevent\n\t\t// the browsers default behavior\n\t\tif( triggered ) {\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\t\t// ESC or O key\n\t\telse if( keyCode === 27 || keyCode === 79 ) {\n\t\t\tif( this.Reveal.closeOverlay() === false ) {\n\t\t\t\tthis.Reveal.overview.toggle();\n\t\t\t}\n\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\n\t\t// If auto-sliding is enabled we need to cue up\n\t\t// another timeout\n\t\tthis.Reveal.cueAutoSlide();\n\n\t}\n\n}","/**\n * Reads and writes the URL based on reveal.js' current state.\n */\nexport default class Location {\n\n\t// The minimum number of milliseconds that must pass between\n\t// calls to history.replaceState\n\tMAX_REPLACE_STATE_FREQUENCY = 1000\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Delays updates to the URL due to a Chrome thumbnailer bug\n\t\tthis.writeURLTimeout = 0;\n\n\t\tthis.replaceStateTimestamp = 0;\n\n\t\tthis.onWindowHashChange = this.onWindowHashChange.bind( this );\n\n\t}\n\n\tbind() {\n\n\t\twindow.addEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\tunbind() {\n\n\t\twindow.removeEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\t/**\n\t * Returns the slide indices for the given hash link.\n\t *\n\t * @param {string} [hash] the hash string that we want to\n\t * find the indices for\n\t *\n\t * @returns slide indices or null\n\t */\n\tgetIndicesFromHash( hash=window.location.hash, options={} ) {\n\n\t\t// Attempt to parse the hash as either an index or name\n\t\tlet name = hash.replace( /^#\\/?/, '' );\n\t\tlet bits = name.split( '/' );\n\n\t\t// If the first bit is not fully numeric and there is a name we\n\t\t// can assume that this is a named link\n\t\tif( !/^[0-9]*$/.test( bits[0] ) && name.length ) {\n\t\t\tlet element;\n\n\t\t\tlet f;\n\n\t\t\t// Parse named links with fragments (#/named-link/2)\n\t\t\tif( /\\/[-\\d]+$/g.test( name ) ) {\n\t\t\t\tf = parseInt( name.split( '/' ).pop(), 10 );\n\t\t\t\tf = isNaN(f) ? undefined : f;\n\t\t\t\tname = name.split( '/' ).shift();\n\t\t\t}\n\n\t\t\t// Ensure the named link is a valid HTML ID attribute\n\t\t\ttry {\n\t\t\t\telement = document.getElementById( decodeURIComponent( name ) );\n\t\t\t}\n\t\t\tcatch ( error ) { }\n\n\t\t\tif( element ) {\n\t\t\t\treturn { ...this.Reveal.getIndices( element ), f };\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst config = this.Reveal.getConfig();\n\t\t\tlet hashIndexBase = config.hashOneBasedIndex || options.oneBasedIndex ? 1 : 0;\n\n\t\t\t// Read the index components of the hash\n\t\t\tlet h = ( parseInt( bits[0], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tv = ( parseInt( bits[1], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tf;\n\n\t\t\tif( config.fragmentInURL ) {\n\t\t\t\tf = parseInt( bits[2], 10 );\n\t\t\t\tif( isNaN( f ) ) {\n\t\t\t\t\tf = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn { h, v, f };\n\t\t}\n\n\t\t// The hash couldn't be parsed or no matching named link was found\n\t\treturn null\n\n\t}\n\n\t/**\n\t * Reads the current URL (hash) and navigates accordingly.\n\t */\n\treadURL() {\n\n\t\tconst currentIndices = this.Reveal.getIndices();\n\t\tconst newIndices = this.getIndicesFromHash();\n\n\t\tif( newIndices ) {\n\t\t\tif( ( newIndices.h !== currentIndices.h || newIndices.v !== currentIndices.v || newIndices.f !== undefined ) ) {\n\t\t\t\t\tthis.Reveal.slide( newIndices.h, newIndices.v, newIndices.f );\n\t\t\t}\n\t\t}\n\t\t// If no new indices are available, we're trying to navigate to\n\t\t// a slide hash that does not exist\n\t\telse {\n\t\t\tthis.Reveal.slide( currentIndices.h || 0, currentIndices.v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the page URL (hash) to reflect the current\n\t * state.\n\t *\n\t * @param {number} delay The time in ms to wait before\n\t * writing the hash\n\t */\n\twriteURL( delay ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\n\t\t// Make sure there's never more than one timeout running\n\t\tclearTimeout( this.writeURLTimeout );\n\n\t\t// If a delay is specified, timeout this call\n\t\tif( typeof delay === 'number' ) {\n\t\t\tthis.writeURLTimeout = setTimeout( this.writeURL, delay );\n\t\t}\n\t\telse if( currentSlide ) {\n\n\t\t\tlet hash = this.getHash();\n\n\t\t\t// If we're configured to push to history OR the history\n\t\t\t// API is not available.\n\t\t\tif( config.history ) {\n\t\t\t\twindow.location.hash = hash;\n\t\t\t}\n\t\t\t// If we're configured to reflect the current slide in the\n\t\t\t// URL without pushing to history.\n\t\t\telse if( config.hash ) {\n\t\t\t\t// If the hash is empty, don't add it to the URL\n\t\t\t\tif( hash === '/' ) {\n\t\t\t\t\tthis.debouncedReplaceState( window.location.pathname + window.location.search );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.debouncedReplaceState( '#' + hash );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// UPDATE: The below nuking of all hash changes breaks\n\t\t\t// anchors on pages where reveal.js is running. Removed\n\t\t\t// in 4.0. Why was it here in the first place? ¯\\_(ツ)_/¯\n\t\t\t//\n\t\t\t// If history and hash are both disabled, a hash may still\n\t\t\t// be added to the URL by clicking on a href with a hash\n\t\t\t// target. Counter this by always removing the hash.\n\t\t\t// else {\n\t\t\t// \twindow.history.replaceState( null, null, window.location.pathname + window.location.search );\n\t\t\t// }\n\n\t\t}\n\n\t}\n\n\treplaceState( url ) {\n\n\t\twindow.history.replaceState( null, null, url );\n\t\tthis.replaceStateTimestamp = Date.now();\n\n\t}\n\n\tdebouncedReplaceState( url ) {\n\n\t\tclearTimeout( this.replaceStateTimeout );\n\n\t\tif( Date.now() - this.replaceStateTimestamp > this.MAX_REPLACE_STATE_FREQUENCY ) {\n\t\t\tthis.replaceState( url );\n\t\t}\n\t\telse {\n\t\t\tthis.replaceStateTimeout = setTimeout( () => this.replaceState( url ), this.MAX_REPLACE_STATE_FREQUENCY );\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a hash URL that will resolve to the given slide location.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to link to\n\t */\n\tgetHash( slide ) {\n\n\t\tlet url = '/';\n\n\t\t// Attempt to create a named link based on the slide's ID\n\t\tlet s = slide || this.Reveal.getCurrentSlide();\n\t\tlet id = s ? s.getAttribute( 'id' ) : null;\n\t\tif( id ) {\n\t\t\tid = encodeURIComponent( id );\n\t\t}\n\n\t\tlet index = this.Reveal.getIndices( slide );\n\t\tif( !this.Reveal.getConfig().fragmentInURL ) {\n\t\t\tindex.f = undefined;\n\t\t}\n\n\t\t// If the current slide has an ID, use that as a named link,\n\t\t// but we don't support named links with a fragment index\n\t\tif( typeof id === 'string' && id.length ) {\n\t\t\turl = '/' + id;\n\n\t\t\t// If there is also a fragment, append that at the end\n\t\t\t// of the named link, like: #/named-link/2\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\t\t// Otherwise use the /h/v index\n\t\telse {\n\t\t\tlet hashIndexBase = this.Reveal.getConfig().hashOneBasedIndex ? 1 : 0;\n\t\t\tif( index.h > 0 || index.v > 0 || index.f >= 0 ) url += index.h + hashIndexBase;\n\t\t\tif( index.v > 0 || index.f >= 0 ) url += '/' + (index.v + hashIndexBase );\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\n\t\treturn url;\n\n\t}\n\n\t/**\n\t * Handler for the window level 'hashchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tonWindowHashChange( event ) {\n\n\t\tthis.readURL();\n\n\t}\n\n}","import { queryAll } from '../utils/util.js'\nimport { isAndroid } from '../utils/device.js'\n\n/**\n * Manages our presentation controls. This includes both\n * the built-in control arrows as well as event monitoring\n * of any elements within the presentation with either of the\n * following helper classes:\n * - .navigate-up\n * - .navigate-right\n * - .navigate-down\n * - .navigate-left\n * - .navigate-next\n * - .navigate-prev\n */\nexport default class Controls {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onNavigateLeftClicked = this.onNavigateLeftClicked.bind( this );\n\t\tthis.onNavigateRightClicked = this.onNavigateRightClicked.bind( this );\n\t\tthis.onNavigateUpClicked = this.onNavigateUpClicked.bind( this );\n\t\tthis.onNavigateDownClicked = this.onNavigateDownClicked.bind( this );\n\t\tthis.onNavigatePrevClicked = this.onNavigatePrevClicked.bind( this );\n\t\tthis.onNavigateNextClicked = this.onNavigateNextClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tconst rtl = this.Reveal.getConfig().rtl;\n\t\tconst revealElement = this.Reveal.getRevealElement();\n\n\t\tthis.element = document.createElement( 'aside' );\n\t\tthis.element.className = 'controls';\n\t\tthis.element.innerHTML =\n\t\t\t`<button class=\"navigate-left\" aria-label=\"${ rtl ? 'next slide' : 'previous slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-right\" aria-label=\"${ rtl ? 'previous slide' : 'next slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-up\" aria-label=\"above slide\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-down\" aria-label=\"below slide\"><div class=\"controls-arrow\"></div></button>`;\n\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\t// There can be multiple instances of controls throughout the page\n\t\tthis.controlsLeft = queryAll( revealElement, '.navigate-left' );\n\t\tthis.controlsRight = queryAll( revealElement, '.navigate-right' );\n\t\tthis.controlsUp = queryAll( revealElement, '.navigate-up' );\n\t\tthis.controlsDown = queryAll( revealElement, '.navigate-down' );\n\t\tthis.controlsPrev = queryAll( revealElement, '.navigate-prev' );\n\t\tthis.controlsNext = queryAll( revealElement, '.navigate-next' );\n\n\t\t// The left, right and down arrows in the standard reveal.js controls\n\t\tthis.controlsRightArrow = this.element.querySelector( '.navigate-right' );\n\t\tthis.controlsLeftArrow = this.element.querySelector( '.navigate-left' );\n\t\tthis.controlsDownArrow = this.element.querySelector( '.navigate-down' );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.controls ? 'block' : 'none';\n\n\t\tthis.element.setAttribute( 'data-controls-layout', config.controlsLayout );\n\t\tthis.element.setAttribute( 'data-controls-back-arrows', config.controlsBackArrows );\n\n\t}\n\n\tbind() {\n\n\t\t// Listen to both touch and click events, in case the device\n\t\t// supports both\n\t\tlet pointerEvents = [ 'touchstart', 'click' ];\n\n\t\t// Only support touch for Android, fixes double navigations in\n\t\t// stock browser\n\t\tif( isAndroid ) {\n\t\t\tpointerEvents = [ 'touchstart' ];\n\t\t}\n\n\t\tpointerEvents.forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.addEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.addEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.addEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.addEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.addEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.addEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t} );\n\n\t}\n\n\tunbind() {\n\n\t\t[ 'touchstart', 'click' ].forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.removeEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.removeEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.removeEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.removeEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.removeEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.removeEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates the state of all control/navigation arrows.\n\t */\n\tupdate() {\n\n\t\tlet routes = this.Reveal.availableRoutes();\n\n\t\t// Remove the 'enabled' class from all directions\n\t\t[...this.controlsLeft, ...this.controlsRight, ...this.controlsUp, ...this.controlsDown, ...this.controlsPrev, ...this.controlsNext].forEach( node => {\n\t\t\tnode.classList.remove( 'enabled', 'fragmented' );\n\n\t\t\t// Set 'disabled' attribute on all directions\n\t\t\tnode.setAttribute( 'disabled', 'disabled' );\n\t\t} );\n\n\t\t// Add the 'enabled' class to the available routes; remove 'disabled' attribute to enable buttons\n\t\tif( routes.left ) this.controlsLeft.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right ) this.controlsRight.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.up ) this.controlsUp.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.down ) this.controlsDown.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Prev/next buttons\n\t\tif( routes.left || routes.up ) this.controlsPrev.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right || routes.down ) this.controlsNext.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Highlight fragment directions\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide ) {\n\n\t\t\tlet fragmentsRoutes = this.Reveal.fragments.availableRoutes();\n\n\t\t\t// Always apply fragment decorator to prev/next buttons\n\t\t\tif( fragmentsRoutes.prev ) this.controlsPrev.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\tif( fragmentsRoutes.next ) this.controlsNext.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t\t// Apply fragment decorators to directional buttons based on\n\t\t\t// what slide axis they are in\n\t\t\tif( this.Reveal.isVerticalSlide( currentSlide ) ) {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsUp.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsDown.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsLeft.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsRight.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\n\t\t}\n\n\t\tif( this.Reveal.getConfig().controlsTutorial ) {\n\n\t\t\tlet indices = this.Reveal.getIndices();\n\n\t\t\t// Highlight control arrows with an animation to ensure\n\t\t\t// that the viewer knows how to navigate\n\t\t\tif( !this.Reveal.hasNavigatedVertically() && routes.down ) {\n\t\t\t\tthis.controlsDownArrow.classList.add( 'highlight' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.controlsDownArrow.classList.remove( 'highlight' );\n\n\t\t\t\tif( this.Reveal.getConfig().rtl ) {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.left && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.right && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdestroy() {\n\n\t\tthis.unbind();\n\t\tthis.element.remove();\n\n\t}\n\n\t/**\n\t * Event handlers for navigation control buttons.\n\t */\n\tonNavigateLeftClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.prev();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.left();\n\t\t}\n\n\t}\n\n\tonNavigateRightClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.next();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.right();\n\t\t}\n\n\t}\n\n\tonNavigateUpClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.up();\n\n\t}\n\n\tonNavigateDownClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.down();\n\n\t}\n\n\tonNavigatePrevClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.prev();\n\n\t}\n\n\tonNavigateNextClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.next();\n\n\t}\n\n\n}","/**\n * Creates a visual progress bar for the presentation.\n */\nexport default class Progress {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onProgressClicked = this.onProgressClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'progress';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\tthis.bar = document.createElement( 'span' );\n\t\tthis.element.appendChild( this.bar );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.progress ? 'block' : 'none';\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.addEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tif ( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.removeEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the progress bar to reflect the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update progress if enabled\n\t\tif( this.Reveal.getConfig().progress && this.bar ) {\n\n\t\t\tlet scale = this.Reveal.getProgress();\n\n\t\t\t// Don't fill the progress bar if there's only one slide\n\t\t\tif( this.Reveal.getTotalSlides() < 2 ) {\n\t\t\t\tscale = 0;\n\t\t\t}\n\n\t\t\tthis.bar.style.transform = 'scaleX('+ scale +')';\n\n\t\t}\n\n\t}\n\n\tgetMaxWidth() {\n\n\t\treturn this.Reveal.getRevealElement().offsetWidth;\n\n\t}\n\n\t/**\n\t * Clicking on the progress bar results in a navigation to the\n\t * closest approximate horizontal slide using this equation:\n\t *\n\t * ( clickX / presentationWidth ) * numberOfSlides\n\t *\n\t * @param {object} event\n\t */\n\tonProgressClicked( event ) {\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\tevent.preventDefault();\n\n\t\tlet slides = this.Reveal.getSlides();\n\t\tlet slidesTotal = slides.length;\n\t\tlet slideIndex = Math.floor( ( event.clientX / this.getMaxWidth() ) * slidesTotal );\n\n\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\tslideIndex = slidesTotal - slideIndex;\n\t\t}\n\n\t\tlet targetIndices = this.Reveal.getIndices(slides[slideIndex]);\n\t\tthis.Reveal.slide( targetIndices.h, targetIndices.v );\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","/**\n * Handles hiding of the pointer/cursor when inactive.\n */\nexport default class Pointer {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Throttles mouse wheel navigation\n\t\tthis.lastMouseWheelStep = 0;\n\n\t\t// Is the mouse pointer currently hidden from view\n\t\tthis.cursorHidden = false;\n\n\t\t// Timeout used to determine when the cursor is inactive\n\t\tthis.cursorInactiveTimeout = 0;\n\n\t\tthis.onDocumentCursorActive = this.onDocumentCursorActive.bind( this );\n\t\tthis.onDocumentMouseScroll = this.onDocumentMouseScroll.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.mouseWheel ) {\n\t\t\tdocument.addEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false ); // FF\n\t\t\tdocument.addEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\n\t\t}\n\t\telse {\n\t\t\tdocument.removeEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false ); // FF\n\t\t\tdocument.removeEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\n\t\t}\n\n\t\t// Auto-hide the mouse pointer when its inactive\n\t\tif( config.hideInactiveCursor ) {\n\t\t\tdocument.addEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.addEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\t\telse {\n\t\t\tthis.showCursor();\n\n\t\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Shows the mouse pointer after it has been hidden with\n\t * #hideCursor.\n\t */\n\tshowCursor() {\n\n\t\tif( this.cursorHidden ) {\n\t\t\tthis.cursorHidden = false;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = '';\n\t\t}\n\n\t}\n\n\t/**\n\t * Hides the mouse pointer when it's on top of the .reveal\n\t * container.\n\t */\n\thideCursor() {\n\n\t\tif( this.cursorHidden === false ) {\n\t\t\tthis.cursorHidden = true;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = 'none';\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.showCursor();\n\n\t\tdocument.removeEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false );\n\t\tdocument.removeEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\n\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\n\t}\n\n\t/**\n\t * Called whenever there is mouse input at the document level\n\t * to determine if the cursor is active or not.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentCursorActive( event ) {\n\n\t\tthis.showCursor();\n\n\t\tclearTimeout( this.cursorInactiveTimeout );\n\n\t\tthis.cursorInactiveTimeout = setTimeout( this.hideCursor.bind( this ), this.Reveal.getConfig().hideCursorTime );\n\n\t}\n\n\t/**\n\t * Handles mouse wheel scrolling, throttled to avoid skipping\n\t * multiple slides.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentMouseScroll( event ) {\n\n\t\tif( Date.now() - this.lastMouseWheelStep > 1000 ) {\n\n\t\t\tthis.lastMouseWheelStep = Date.now();\n\n\t\t\tlet delta = event.detail || -event.wheelDelta;\n\t\t\tif( delta > 0 ) {\n\t\t\t\tthis.Reveal.next();\n\t\t\t}\n\t\t\telse if( delta < 0 ) {\n\t\t\t\tthis.Reveal.prev();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}","/**\n * Loads a JavaScript file from the given URL and executes it.\n *\n * @param {string} url Address of the .js file to load\n * @param {function} callback Method to invoke when the script\n * has loaded and executed\n */\nexport const loadScript = ( url, callback ) => {\n\n\tconst script = document.createElement( 'script' );\n\tscript.type = 'text/javascript';\n\tscript.async = false;\n\tscript.defer = false;\n\tscript.src = url;\n\n\tif( typeof callback === 'function' ) {\n\n\t\t// Success callback\n\t\tscript.onload = script.onreadystatechange = event => {\n\t\t\tif( event.type === 'load' || /loaded|complete/.test( script.readyState ) ) {\n\n\t\t\t\t// Kill event listeners\n\t\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\t\tcallback();\n\n\t\t\t}\n\t\t};\n\n\t\t// Error callback\n\t\tscript.onerror = err => {\n\n\t\t\t// Kill event listeners\n\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\tcallback( new Error( 'Failed loading script: ' + script.src + '\\n' + err ) );\n\n\t\t};\n\n\t}\n\n\t// Append the script at the end of <head>\n\tconst head = document.querySelector( 'head' );\n\thead.insertBefore( script, head.lastChild );\n\n}","import { loadScript } from '../utils/loader.js'\n\n/**\n * Manages loading and registering of reveal.js plugins.\n */\nexport default class Plugins {\n\n\tconstructor( reveal ) {\n\n\t\tthis.Reveal = reveal;\n\n\t\t// Flags our current state (idle -> loading -> loaded)\n\t\tthis.state = 'idle';\n\n\t\t// An id:instance map of currently registered plugins\n\t\tthis.registeredPlugins = {};\n\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n\t/**\n\t * Loads reveal.js dependencies, registers and\n\t * initializes plugins.\n\t *\n\t * Plugins are direct references to a reveal.js plugin\n\t * object that we register and initialize after any\n\t * synchronous dependencies have loaded.\n\t *\n\t * Dependencies are defined via the 'dependencies' config\n\t * option and will be loaded prior to starting reveal.js.\n\t * Some dependencies may have an 'async' flag, if so they\n\t * will load after reveal.js has been started up.\n\t */\n\tload( plugins, dependencies ) {\n\n\t\tthis.state = 'loading';\n\n\t\tplugins.forEach( this.registerPlugin.bind( this ) );\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet scripts = [],\n\t\t\t\tscriptsToLoad = 0;\n\n\t\t\tdependencies.forEach( s => {\n\t\t\t\t// Load if there's no condition or the condition is truthy\n\t\t\t\tif( !s.condition || s.condition() ) {\n\t\t\t\t\tif( s.async ) {\n\t\t\t\t\t\tthis.asyncDependencies.push( s );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tscripts.push( s );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif( scripts.length ) {\n\t\t\t\tscriptsToLoad = scripts.length;\n\n\t\t\t\tconst scriptLoadedCallback = (s) => {\n\t\t\t\t\tif( s && typeof s.callback === 'function' ) s.callback();\n\n\t\t\t\t\tif( --scriptsToLoad === 0 ) {\n\t\t\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Load synchronous scripts\n\t\t\t\tscripts.forEach( s => {\n\t\t\t\t\tif( typeof s.id === 'string' ) {\n\t\t\t\t\t\tthis.registerPlugin( s );\n\t\t\t\t\t\tscriptLoadedCallback( s );\n\t\t\t\t\t}\n\t\t\t\t\telse if( typeof s.src === 'string' ) {\n\t\t\t\t\t\tloadScript( s.src, () => scriptLoadedCallback(s) );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tconsole.warn( 'Unrecognized plugin format', s );\n\t\t\t\t\t\tscriptLoadedCallback();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Initializes our plugins and waits for them to be ready\n\t * before proceeding.\n\t */\n\tinitPlugins() {\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet pluginValues = Object.values( this.registeredPlugins );\n\t\t\tlet pluginsToInitialize = pluginValues.length;\n\n\t\t\t// If there are no plugins, skip this step\n\t\t\tif( pluginsToInitialize === 0 ) {\n\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t}\n\t\t\t// ... otherwise initialize plugins\n\t\t\telse {\n\n\t\t\t\tlet initNextPlugin;\n\n\t\t\t\tlet afterPlugInitialized = () => {\n\t\t\t\t\tif( --pluginsToInitialize === 0 ) {\n\t\t\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tinitNextPlugin();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tlet i = 0;\n\n\t\t\t\t// Initialize plugins serially\n\t\t\t\tinitNextPlugin = () => {\n\n\t\t\t\t\tlet plugin = pluginValues[i++];\n\n\t\t\t\t\t// If the plugin has an 'init' method, invoke it\n\t\t\t\t\tif( typeof plugin.init === 'function' ) {\n\t\t\t\t\t\tlet promise = plugin.init( this.Reveal );\n\n\t\t\t\t\t\t// If the plugin returned a Promise, wait for it\n\t\t\t\t\t\tif( promise && typeof promise.then === 'function' ) {\n\t\t\t\t\t\t\tpromise.then( afterPlugInitialized );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tinitNextPlugin();\n\n\t\t\t}\n\n\t\t} )\n\n\t}\n\n\t/**\n\t * Loads all async reveal.js dependencies.\n\t */\n\tloadAsync() {\n\n\t\tthis.state = 'loaded';\n\n\t\tif( this.asyncDependencies.length ) {\n\t\t\tthis.asyncDependencies.forEach( s => {\n\t\t\t\tloadScript( s.src, s.callback );\n\t\t\t} );\n\t\t}\n\n\t\treturn Promise.resolve();\n\n\t}\n\n\t/**\n\t * Registers a new plugin with this reveal.js instance.\n\t *\n\t * reveal.js waits for all registered plugins to initialize\n\t * before considering itself ready, as long as the plugin\n\t * is registered before calling `Reveal.initialize()`.\n\t */\n\tregisterPlugin( plugin ) {\n\n\t\t// Backwards compatibility to make reveal.js ~3.9.0\n\t\t// plugins work with reveal.js 4.0.0\n\t\tif( arguments.length === 2 && typeof arguments[0] === 'string' ) {\n\t\t\tplugin = arguments[1];\n\t\t\tplugin.id = arguments[0];\n\t\t}\n\t\t// Plugin can optionally be a function which we call\n\t\t// to create an instance of the plugin\n\t\telse if( typeof plugin === 'function' ) {\n\t\t\tplugin = plugin();\n\t\t}\n\n\t\tlet id = plugin.id;\n\n\t\tif( typeof id !== 'string' ) {\n\t\t\tconsole.warn( 'Unrecognized plugin format; can\\'t find plugin.id', plugin );\n\t\t}\n\t\telse if( this.registeredPlugins[id] === undefined ) {\n\t\t\tthis.registeredPlugins[id] = plugin;\n\n\t\t\t// If a plugin is registered after reveal.js is loaded,\n\t\t\t// initialize it right away\n\t\t\tif( this.state === 'loaded' && typeof plugin.init === 'function' ) {\n\t\t\t\tplugin.init( this.Reveal );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconsole.warn( 'reveal.js: \"'+ id +'\" plugin has already been registered' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if a specific plugin has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\thasPlugin( id ) {\n\n\t\treturn !!this.registeredPlugins[id];\n\n\t}\n\n\t/**\n\t * Returns the specific plugin instance, if a plugin\n\t * with the given ID has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\tgetPlugin( id ) {\n\n\t\treturn this.registeredPlugins[id];\n\n\t}\n\n\tgetRegisteredPlugins() {\n\n\t\treturn this.registeredPlugins;\n\n\t}\n\n\tdestroy() {\n\n\t\tObject.values( this.registeredPlugins ).forEach( plugin => {\n\t\t\tif( typeof plugin.destroy === 'function' ) {\n\t\t\t\tplugin.destroy();\n\t\t\t}\n\t\t} );\n\n\t\tthis.registeredPlugins = {};\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n}\n","import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { queryAll, createStyleSheet } from '../utils/util.js'\n\n/**\n * Setups up our presentation for printing/exporting to PDF.\n */\nexport default class Print {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Configures the presentation for printing to a static\n\t * PDF.\n\t */\n\tasync setupPDF() {\n\n\t\tconst config = this.Reveal.getConfig();\n\t\tconst slides = queryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR )\n\n\t\t// Compute slide numbers now, before we start duplicating slides\n\t\tconst injectPageNumbers = config.slideNumber && /all|print/i.test( config.showSlideNumber );\n\n\t\tconst slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\n\n\t\t// Dimensions of the PDF pages\n\t\tconst pageWidth = Math.floor( slideSize.width * ( 1 + config.margin ) ),\n\t\t\tpageHeight = Math.floor( slideSize.height * ( 1 + config.margin ) );\n\n\t\t// Dimensions of slides within the pages\n\t\tconst slideWidth = slideSize.width,\n\t\t\tslideHeight = slideSize.height;\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\t// Let the browser know what page size we want to print\n\t\tcreateStyleSheet( '@page{size:'+ pageWidth +'px '+ pageHeight +'px; margin: 0px;}' );\n\n\t\t// Limit the size of certain elements to the dimensions of the slide\n\t\tcreateStyleSheet( '.reveal section>img, .reveal section>video, .reveal section>iframe{max-width: '+ slideWidth +'px; max-height:'+ slideHeight +'px}' );\n\n\t\tdocument.documentElement.classList.add( 'print-pdf' );\n\t\tdocument.body.style.width = pageWidth + 'px';\n\t\tdocument.body.style.height = pageHeight + 'px';\n\n\t\tconst viewportElement = document.querySelector( '.reveal-viewport' );\n\t\tlet presentationBackground;\n\t\tif( viewportElement ) {\n\t\t\tconst viewportStyles = window.getComputedStyle( viewportElement );\n\t\t\tif( viewportStyles && viewportStyles.background ) {\n\t\t\t\tpresentationBackground = viewportStyles.background;\n\t\t\t}\n\t\t}\n\n\t\t// Make sure stretch elements fit on slide\n\t\tawait new Promise( requestAnimationFrame );\n\t\tthis.Reveal.layoutSlideContents( slideWidth, slideHeight );\n\n\t\t// Batch scrollHeight access to prevent layout thrashing\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tconst slideScrollHeights = slides.map( slide => slide.scrollHeight );\n\n\t\tconst pages = [];\n\t\tconst pageContainer = slides[0].parentNode;\n\t\tlet slideNumber = 1;\n\n\t\t// Slide and slide background layout\n\t\tslides.forEach( function( slide, index ) {\n\n\t\t\t// Vertical stacks are not centred since their section\n\t\t\t// children will be\n\t\t\tif( slide.classList.contains( 'stack' ) === false ) {\n\t\t\t\t// Center the slide inside of the page, giving the slide some margin\n\t\t\t\tlet left = ( pageWidth - slideWidth ) / 2;\n\t\t\t\tlet top = ( pageHeight - slideHeight ) / 2;\n\n\t\t\t\tconst contentHeight = slideScrollHeights[ index ];\n\t\t\t\tlet numberOfPages = Math.max( Math.ceil( contentHeight / pageHeight ), 1 );\n\n\t\t\t\t// Adhere to configured pages per slide limit\n\t\t\t\tnumberOfPages = Math.min( numberOfPages, config.pdfMaxPagesPerSlide );\n\n\t\t\t\t// Center slides vertically\n\t\t\t\tif( numberOfPages === 1 && config.center || slide.classList.contains( 'center' ) ) {\n\t\t\t\t\ttop = Math.max( ( pageHeight - contentHeight ) / 2, 0 );\n\t\t\t\t}\n\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\n\t\t\t\t// so that no page ever flows onto another\n\t\t\t\tconst page = document.createElement( 'div' );\n\t\t\t\tpages.push( page );\n\n\t\t\t\tpage.className = 'pdf-page';\n\t\t\t\tpage.style.height = ( ( pageHeight + config.pdfPageHeightOffset ) * numberOfPages ) + 'px';\n\n\t\t\t\t// Copy the presentation-wide background to each individual\n\t\t\t\t// page when printing\n\t\t\t\tif( presentationBackground ) {\n\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t}\n\n\t\t\t\tpage.appendChild( slide );\n\n\t\t\t\t// Position the slide inside of the page\n\t\t\t\tslide.style.left = left + 'px';\n\t\t\t\tslide.style.top = top + 'px';\n\t\t\t\tslide.style.width = slideWidth + 'px';\n\n\t\t\t\tthis.Reveal.slideContent.layout( slide );\n\n\t\t\t\tif( slide.slideBackgroundElement ) {\n\t\t\t\t\tpage.insertBefore( slide.slideBackgroundElement, slide );\n\t\t\t\t}\n\n\t\t\t\t// Inject notes if `showNotes` is enabled\n\t\t\t\tif( config.showNotes ) {\n\n\t\t\t\t\t// Are there notes for this slide?\n\t\t\t\t\tconst notes = this.Reveal.getSlideNotes( slide );\n\t\t\t\t\tif( notes ) {\n\n\t\t\t\t\t\tconst notesSpacing = 8;\n\t\t\t\t\t\tconst notesLayout = typeof config.showNotes === 'string' ? config.showNotes : 'inline';\n\t\t\t\t\t\tconst notesElement = document.createElement( 'div' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes-pdf' );\n\t\t\t\t\t\tnotesElement.setAttribute( 'data-layout', notesLayout );\n\t\t\t\t\t\tnotesElement.innerHTML = notes;\n\n\t\t\t\t\t\tif( notesLayout === 'separate-page' ) {\n\t\t\t\t\t\t\tpages.push( notesElement );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tnotesElement.style.left = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.bottom = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.width = ( pageWidth - notesSpacing*2 ) + 'px';\n\t\t\t\t\t\t\tpage.appendChild( notesElement );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Inject page numbers if `slideNumbers` are enabled\n\t\t\t\tif( injectPageNumbers ) {\n\t\t\t\t\tconst numberElement = document.createElement( 'div' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number-pdf' );\n\t\t\t\t\tnumberElement.innerHTML = slideNumber++;\n\t\t\t\t\tpage.appendChild( numberElement );\n\t\t\t\t}\n\n\t\t\t\t// Copy page and show fragments one after another\n\t\t\t\tif( config.pdfSeparateFragments ) {\n\n\t\t\t\t\t// Each fragment 'group' is an array containing one or more\n\t\t\t\t\t// fragments. Multiple fragments that appear at the same time\n\t\t\t\t\t// are part of the same group.\n\t\t\t\t\tconst fragmentGroups = this.Reveal.fragments.sort( page.querySelectorAll( '.fragment' ), true );\n\n\t\t\t\t\tlet previousFragmentStep;\n\n\t\t\t\t\tfragmentGroups.forEach( function( fragments, index ) {\n\n\t\t\t\t\t\t// Remove 'current-fragment' from the previous group\n\t\t\t\t\t\tif( previousFragmentStep ) {\n\t\t\t\t\t\t\tpreviousFragmentStep.forEach( function( fragment ) {\n\t\t\t\t\t\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Show the fragments for the current index\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.add( 'visible', 'current-fragment' );\n\t\t\t\t\t\t}, this );\n\n\t\t\t\t\t\t// Create a separate page for the current fragment state\n\t\t\t\t\t\tconst clonedPage = page.cloneNode( true );\n\n\t\t\t\t\t\t// Inject unique page numbers for fragments\n\t\t\t\t\t\tif( injectPageNumbers ) {\n\t\t\t\t\t\t\tconst numberElement = clonedPage.querySelector( '.slide-number-pdf' );\n\t\t\t\t\t\t\tconst fragmentNumber = index + 1;\n\t\t\t\t\t\t\tnumberElement.innerHTML += '.' + fragmentNumber;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpages.push( clonedPage );\n\n\t\t\t\t\t\tpreviousFragmentStep = fragments;\n\n\t\t\t\t\t}, this );\n\n\t\t\t\t\t// Reset the first/original page so that all fragments are hidden\n\t\t\t\t\tfragmentGroups.forEach( function( fragments ) {\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\t\t\t\t// Show all fragments\n\t\t\t\telse {\n\t\t\t\t\tqueryAll( page, '.fragment:not(.fade-out)' ).forEach( function( fragment ) {\n\t\t\t\t\t\tfragment.classList.add( 'visible' );\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tpages.forEach( page => pageContainer.appendChild( page ) );\n\n\t\t// Re-run JS-based content layout after the slide is added to page DOM\n\t\tthis.Reveal.slideContent.layout( this.Reveal.getSlidesElement() );\n\n\t\t// Notify subscribers that the PDF layout is good to go\n\t\tthis.Reveal.dispatchEvent({ type: 'pdf-ready' });\n\n\t}\n\n\t/**\n\t * Checks if this instance is being used to print a PDF.\n\t */\n\tisPrintingPDF() {\n\n\t\treturn ( /print-pdf/gi ).test( window.location.search );\n\n\t}\n\n}\n","import { isAndroid } from '../utils/device.js'\nimport { matches } from '../utils/util.js'\n\nconst SWIPE_THRESHOLD = 40;\n\n/**\n * Controls all touch interactions and navigations for\n * a presentation.\n */\nexport default class Touch {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Holds information about the currently ongoing touch interaction\n\t\tthis.touchStartX = 0;\n\t\tthis.touchStartY = 0;\n\t\tthis.touchStartCount = 0;\n\t\tthis.touchCaptured = false;\n\n\t\tthis.onPointerDown = this.onPointerDown.bind( this );\n\t\tthis.onPointerMove = this.onPointerMove.bind( this );\n\t\tthis.onPointerUp = this.onPointerUp.bind( this );\n\t\tthis.onTouchStart = this.onTouchStart.bind( this );\n\t\tthis.onTouchMove = this.onTouchMove.bind( this );\n\t\tthis.onTouchEnd = this.onTouchEnd.bind( this );\n\n\t}\n\n\t/**\n\t *\n\t */\n\tbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\tif( 'onpointerdown' in window ) {\n\t\t\t// Use W3C pointer events\n\t\t\trevealElement.addEventListener( 'pointerdown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'pointermove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'pointerup', this.onPointerUp, false );\n\t\t}\n\t\telse if( window.navigator.msPointerEnabled ) {\n\t\t\t// IE 10 uses prefixed version of pointer events\n\t\t\trevealElement.addEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'MSPointerUp', this.onPointerUp, false );\n\t\t}\n\t\telse {\n\t\t\t// Fall back to touch events\n\t\t\trevealElement.addEventListener( 'touchstart', this.onTouchStart, false );\n\t\t\trevealElement.addEventListener( 'touchmove', this.onTouchMove, false );\n\t\t\trevealElement.addEventListener( 'touchend', this.onTouchEnd, false );\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t */\n\tunbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\trevealElement.removeEventListener( 'pointerdown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'pointermove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'pointerup', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'MSPointerUp', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'touchstart', this.onTouchStart, false );\n\t\trevealElement.removeEventListener( 'touchmove', this.onTouchMove, false );\n\t\trevealElement.removeEventListener( 'touchend', this.onTouchEnd, false );\n\n\t}\n\n\t/**\n\t * Checks if the target element prevents the triggering of\n\t * swipe navigation.\n\t */\n\tisSwipePrevented( target ) {\n\n\t\t// Prevent accidental swipes when scrubbing timelines\n\t\tif( matches( target, 'video, audio' ) ) return true;\n\n\t\twhile( target && typeof target.hasAttribute === 'function' ) {\n\t\t\tif( target.hasAttribute( 'data-prevent-swipe' ) ) return true;\n\t\t\ttarget = target.parentNode;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchstart' event, enables support for\n\t * swipe and pinch gestures.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchStart( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tthis.touchStartX = event.touches[0].clientX;\n\t\tthis.touchStartY = event.touches[0].clientY;\n\t\tthis.touchStartCount = event.touches.length;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchmove' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchMove( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// Each touch should only trigger one action\n\t\tif( !this.touchCaptured ) {\n\t\t\tthis.Reveal.onUserInput( event );\n\n\t\t\tlet currentX = event.touches[0].clientX;\n\t\t\tlet currentY = event.touches[0].clientY;\n\n\t\t\t// There was only one touch point, look for a swipe\n\t\t\tif( event.touches.length === 1 && this.touchStartCount !== 2 ) {\n\n\t\t\t\tlet availableRoutes = this.Reveal.availableRoutes({ includeFragments: true });\n\n\t\t\t\tlet deltaX = currentX - this.touchStartX,\n\t\t\t\t\tdeltaY = currentY - this.touchStartY;\n\n\t\t\t\tif( deltaX > SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.left();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaX < -SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.right();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY > SWIPE_THRESHOLD && availableRoutes.up ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.up();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY < -SWIPE_THRESHOLD && availableRoutes.down ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.down();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If we're embedded, only block touch events if they have\n\t\t\t\t// triggered an action\n\t\t\t\tif( config.embedded ) {\n\t\t\t\t\tif( this.touchCaptured || this.Reveal.isVerticalSlide() ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Not embedded? Block them all to avoid needless tossing\n\t\t\t\t// around of the viewport in iOS\n\t\t\t\telse {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\t// There's a bug with swiping on some Android devices unless\n\t\t// the default action is always prevented\n\t\telse if( isAndroid ) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the 'touchend' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchEnd( event ) {\n\n\t\tthis.touchCaptured = false;\n\n\t}\n\n\t/**\n\t * Convert pointer down to touch start.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerDown( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" ) {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchStart( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer move to touch move.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerMove( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchMove( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer up to touch end.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerUp( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchEnd( event );\n\t\t}\n\n\t}\n\n}","import { closest } from '../utils/util.js'\n\n/**\n * Manages focus when a presentation is embedded. This\n * helps us only capture keyboard from the presentation\n * a user is currently interacting with in a page where\n * multiple presentations are embedded.\n */\n\nconst STATE_FOCUS = 'focus';\nconst STATE_BLUR = 'blur';\n\nexport default class Focus {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onRevealPointerDown = this.onRevealPointerDown.bind( this );\n\t\tthis.onDocumentPointerDown = this.onDocumentPointerDown.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.embedded ) {\n\t\t\tthis.blur();\n\t\t}\n\t\telse {\n\t\t\tthis.focus();\n\t\t\tthis.unbind();\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().embedded ) {\n\t\t\tthis.Reveal.getRevealElement().addEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tthis.Reveal.getRevealElement().removeEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\n\t}\n\n\tfocus() {\n\n\t\tif( this.state !== STATE_FOCUS ) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'focused' );\n\t\t\tdocument.addEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_FOCUS;\n\n\t}\n\n\tblur() {\n\n\t\tif( this.state !== STATE_BLUR ) {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\t\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_BLUR;\n\n\t}\n\n\tisFocused() {\n\n\t\treturn this.state === STATE_FOCUS;\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\n\t}\n\n\tonRevealPointerDown( event ) {\n\n\t\tthis.focus();\n\n\t}\n\n\tonDocumentPointerDown( event ) {\n\n\t\tlet revealElement = closest( event.target, '.reveal' );\n\t\tif( !revealElement || revealElement !== this.Reveal.getRevealElement() ) {\n\t\t\tthis.blur();\n\t\t}\n\n\t}\n\n}","/**\n * Handles the showing of speaker notes\n */\nexport default class Notes {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'speaker-notes';\n\t\tthis.element.setAttribute( 'data-prevent-swipe', '' );\n\t\tthis.element.setAttribute( 'tabindex', '0' );\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.showNotes ) {\n\t\t\tthis.element.setAttribute( 'data-layout', typeof config.showNotes === 'string' ? config.showNotes : 'inline' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Pick up notes from the current slide and display them\n\t * to the viewer.\n\t *\n\t * @see {@link config.showNotes}\n\t */\n\tupdate() {\n\n\t\tif( this.Reveal.getConfig().showNotes && this.element && this.Reveal.getCurrentSlide() && !this.Reveal.print.isPrintingPDF() ) {\n\n\t\t\tthis.element.innerHTML = this.getSlideNotes() || '<span class=\"notes-placeholder\">No notes on this slide.</span>';\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the visibility of the speaker notes sidebar that\n\t * is used to share annotated slides. The notes sidebar is\n\t * only visible if showNotes is true and there are notes on\n\t * one or more slides in the deck.\n\t */\n\tupdateVisibility() {\n\n\t\tif( this.Reveal.getConfig().showNotes && this.hasNotes() && !this.Reveal.print.isPrintingPDF() ) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'show-notes' );\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'show-notes' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if there are speaker notes for ANY slide in the\n\t * presentation.\n\t */\n\thasNotes() {\n\n\t\treturn this.Reveal.getSlidesElement().querySelectorAll( '[data-notes], aside.notes' ).length > 0;\n\n\t}\n\n\t/**\n\t * Checks if this presentation is running inside of the\n\t * speaker notes window.\n\t *\n\t * @return {boolean}\n\t */\n\tisSpeakerNotesWindow() {\n\n\t\treturn !!window.location.search.match( /receiver/gi );\n\n\t}\n\n\t/**\n\t * Retrieves the speaker notes from a slide. Notes can be\n\t * defined in two ways:\n\t * 1. As a data-notes attribute on the slide <section>\n\t * 2. With <aside class=\"notes\"> elements inside the slide\n\t *\n\t * @param {HTMLElement} [slide=currentSlide]\n\t * @return {(string|null)}\n\t */\n\tgetSlideNotes( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\t// Notes can be specified via the data-notes attribute...\n\t\tif( slide.hasAttribute( 'data-notes' ) ) {\n\t\t\treturn slide.getAttribute( 'data-notes' );\n\t\t}\n\n\t\t// ... or using <aside class=\"notes\"> elements\n\t\tlet notesElements = slide.querySelectorAll( 'aside.notes' );\n\t\tif( notesElements ) {\n\t\t\treturn Array.from(notesElements).map( notesElement => notesElement.innerHTML ).join( '\\n' );\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","/**\n * UI component that lets the use control auto-slide\n * playback via play/pause.\n */\nexport default class Playback {\n\n\t/**\n\t * @param {HTMLElement} container The component will append\n\t * itself to this\n\t * @param {function} progressCheck A method which will be\n\t * called frequently to get the current playback progress on\n\t * a range of 0-1\n\t */\n\tconstructor( container, progressCheck ) {\n\n\t\t// Cosmetics\n\t\tthis.diameter = 100;\n\t\tthis.diameter2 = this.diameter/2;\n\t\tthis.thickness = 6;\n\n\t\t// Flags if we are currently playing\n\t\tthis.playing = false;\n\n\t\t// Current progress on a 0-1 range\n\t\tthis.progress = 0;\n\n\t\t// Used to loop the animation smoothly\n\t\tthis.progressOffset = 1;\n\n\t\tthis.container = container;\n\t\tthis.progressCheck = progressCheck;\n\n\t\tthis.canvas = document.createElement( 'canvas' );\n\t\tthis.canvas.className = 'playback';\n\t\tthis.canvas.width = this.diameter;\n\t\tthis.canvas.height = this.diameter;\n\t\tthis.canvas.style.width = this.diameter2 + 'px';\n\t\tthis.canvas.style.height = this.diameter2 + 'px';\n\t\tthis.context = this.canvas.getContext( '2d' );\n\n\t\tthis.container.appendChild( this.canvas );\n\n\t\tthis.render();\n\n\t}\n\n\tsetPlaying( value ) {\n\n\t\tconst wasPlaying = this.playing;\n\n\t\tthis.playing = value;\n\n\t\t// Start repainting if we weren't already\n\t\tif( !wasPlaying && this.playing ) {\n\t\t\tthis.animate();\n\t\t}\n\t\telse {\n\t\t\tthis.render();\n\t\t}\n\n\t}\n\n\tanimate() {\n\n\t\tconst progressBefore = this.progress;\n\n\t\tthis.progress = this.progressCheck();\n\n\t\t// When we loop, offset the progress so that it eases\n\t\t// smoothly rather than immediately resetting\n\t\tif( progressBefore > 0.8 && this.progress < 0.2 ) {\n\t\t\tthis.progressOffset = this.progress;\n\t\t}\n\n\t\tthis.render();\n\n\t\tif( this.playing ) {\n\t\t\trequestAnimationFrame( this.animate.bind( this ) );\n\t\t}\n\n\t}\n\n\t/**\n\t * Renders the current progress and playback state.\n\t */\n\trender() {\n\n\t\tlet progress = this.playing ? this.progress : 0,\n\t\t\tradius = ( this.diameter2 ) - this.thickness,\n\t\t\tx = this.diameter2,\n\t\t\ty = this.diameter2,\n\t\t\ticonSize = 28;\n\n\t\t// Ease towards 1\n\t\tthis.progressOffset += ( 1 - this.progressOffset ) * 0.1;\n\n\t\tconst endAngle = ( - Math.PI / 2 ) + ( progress * ( Math.PI * 2 ) );\n\t\tconst startAngle = ( - Math.PI / 2 ) + ( this.progressOffset * ( Math.PI * 2 ) );\n\n\t\tthis.context.save();\n\t\tthis.context.clearRect( 0, 0, this.diameter, this.diameter );\n\n\t\t// Solid background color\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius + 4, 0, Math.PI * 2, false );\n\t\tthis.context.fillStyle = 'rgba( 0, 0, 0, 0.4 )';\n\t\tthis.context.fill();\n\n\t\t// Draw progress track\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius, 0, Math.PI * 2, false );\n\t\tthis.context.lineWidth = this.thickness;\n\t\tthis.context.strokeStyle = 'rgba( 255, 255, 255, 0.2 )';\n\t\tthis.context.stroke();\n\n\t\tif( this.playing ) {\n\t\t\t// Draw progress on top of track\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.arc( x, y, radius, startAngle, endAngle, false );\n\t\t\tthis.context.lineWidth = this.thickness;\n\t\t\tthis.context.strokeStyle = '#fff';\n\t\t\tthis.context.stroke();\n\t\t}\n\n\t\tthis.context.translate( x - ( iconSize / 2 ), y - ( iconSize / 2 ) );\n\n\t\t// Draw play/pause icons\n\t\tif( this.playing ) {\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fillRect( 0, 0, iconSize / 2 - 4, iconSize );\n\t\t\tthis.context.fillRect( iconSize / 2 + 4, 0, iconSize / 2 - 4, iconSize );\n\t\t}\n\t\telse {\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.translate( 4, 0 );\n\t\t\tthis.context.moveTo( 0, 0 );\n\t\t\tthis.context.lineTo( iconSize - 4, iconSize / 2 );\n\t\t\tthis.context.lineTo( 0, iconSize );\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fill();\n\t\t}\n\n\t\tthis.context.restore();\n\n\t}\n\n\ton( type, listener ) {\n\t\tthis.canvas.addEventListener( type, listener, false );\n\t}\n\n\toff( type, listener ) {\n\t\tthis.canvas.removeEventListener( type, listener, false );\n\t}\n\n\tdestroy() {\n\n\t\tthis.playing = false;\n\n\t\tif( this.canvas.parentNode ) {\n\t\t\tthis.container.removeChild( this.canvas );\n\t\t}\n\n\t}\n\n}","/**\n * The default reveal.js config object.\n */\nexport default {\n\n\t// The \"normal\" size of the presentation, aspect ratio will be preserved\n\t// when the presentation is scaled to fit different resolutions\n\twidth: 960,\n\theight: 700,\n\n\t// Factor of the display size that should remain empty around the content\n\tmargin: 0.04,\n\n\t// Bounds for smallest/largest possible scale to apply to content\n\tminScale: 0.2,\n\tmaxScale: 2.0,\n\n\t// Display presentation control arrows\n\tcontrols: true,\n\n\t// Help the user learn the controls by providing hints, for example by\n\t// bouncing the down arrow when they first encounter a vertical slide\n\tcontrolsTutorial: true,\n\n\t// Determines where controls appear, \"edges\" or \"bottom-right\"\n\tcontrolsLayout: 'bottom-right',\n\n\t// Visibility rule for backwards navigation arrows; \"faded\", \"hidden\"\n\t// or \"visible\"\n\tcontrolsBackArrows: 'faded',\n\n\t// Display a presentation progress bar\n\tprogress: true,\n\n\t// Display the page number of the current slide\n\t// - true:    Show slide number\n\t// - false:   Hide slide number\n\t//\n\t// Can optionally be set as a string that specifies the number formatting:\n\t// - \"h.v\":\t  Horizontal . vertical slide number (default)\n\t// - \"h/v\":\t  Horizontal / vertical slide number\n\t// - \"c\":\t  Flattened slide number\n\t// - \"c/t\":\t  Flattened slide number / total slides\n\t//\n\t// Alternatively, you can provide a function that returns the slide\n\t// number for the current slide. The function should take in a slide\n\t// object and return an array with one string [slideNumber] or\n\t// three strings [n1,delimiter,n2]. See #formatSlideNumber().\n\tslideNumber: false,\n\n\t// Can be used to limit the contexts in which the slide number appears\n\t// - \"all\":      Always show the slide number\n\t// - \"print\":    Only when printing to PDF\n\t// - \"speaker\":  Only in the speaker view\n\tshowSlideNumber: 'all',\n\n\t// Use 1 based indexing for # links to match slide number (default is zero\n\t// based)\n\thashOneBasedIndex: false,\n\n\t// Add the current slide number to the URL hash so that reloading the\n\t// page/copying the URL will return you to the same slide\n\thash: false,\n\n\t// Flags if we should monitor the hash and change slides accordingly\n\trespondToHashChanges: true,\n\n\t// Enable support for jump-to-slide navigation shortcuts\n\tjumpToSlide: true,\n\n\t// Push each slide change to the browser history.  Implies `hash: true`\n\thistory: false,\n\n\t// Enable keyboard shortcuts for navigation\n\tkeyboard: true,\n\n\t// Optional function that blocks keyboard events when retuning false\n\t//\n\t// If you set this to 'focused', we will only capture keyboard events\n\t// for embedded decks when they are in focus\n\tkeyboardCondition: null,\n\n\t// Disables the default reveal.js slide layout (scaling and centering)\n\t// so that you can use custom CSS layout\n\tdisableLayout: false,\n\n\t// Enable the slide overview mode\n\toverview: true,\n\n\t// Vertical centering of slides\n\tcenter: true,\n\n\t// Enables touch navigation on devices with touch input\n\ttouch: true,\n\n\t// Loop the presentation\n\tloop: false,\n\n\t// Change the presentation direction to be RTL\n\trtl: false,\n\n\t// Changes the behavior of our navigation directions.\n\t//\n\t// \"default\"\n\t// Left/right arrow keys step between horizontal slides, up/down\n\t// arrow keys step between vertical slides. Space key steps through\n\t// all slides (both horizontal and vertical).\n\t//\n\t// \"linear\"\n\t// Removes the up/down arrows. Left/right arrows step through all\n\t// slides (both horizontal and vertical).\n\t//\n\t// \"grid\"\n\t// When this is enabled, stepping left/right from a vertical stack\n\t// to an adjacent vertical stack will land you at the same vertical\n\t// index.\n\t//\n\t// Consider a deck with six slides ordered in two vertical stacks:\n\t// 1.1    2.1\n\t// 1.2    2.2\n\t// 1.3    2.3\n\t//\n\t// If you're on slide 1.3 and navigate right, you will normally move\n\t// from 1.3 -> 2.1. If \"grid\" is used, the same navigation takes you\n\t// from 1.3 -> 2.3.\n\tnavigationMode: 'default',\n\n\t// Randomizes the order of slides each time the presentation loads\n\tshuffle: false,\n\n\t// Turns fragments on and off globally\n\tfragments: true,\n\n\t// Flags whether to include the current fragment in the URL,\n\t// so that reloading brings you to the same fragment position\n\tfragmentInURL: true,\n\n\t// Flags if the presentation is running in an embedded mode,\n\t// i.e. contained within a limited portion of the screen\n\tembedded: false,\n\n\t// Flags if we should show a help overlay when the question-mark\n\t// key is pressed\n\thelp: true,\n\n\t// Flags if it should be possible to pause the presentation (blackout)\n\tpause: true,\n\n\t// Flags if speaker notes should be visible to all viewers\n\tshowNotes: false,\n\n\t// Flags if slides with data-visibility=\"hidden\" should be kep visible\n\tshowHiddenSlides: false,\n\n\t// Global override for autoplaying embedded media (video/audio/iframe)\n\t// - null:   Media will only autoplay if data-autoplay is present\n\t// - true:   All media will autoplay, regardless of individual setting\n\t// - false:  No media will autoplay, regardless of individual setting\n\tautoPlayMedia: null,\n\n\t// Global override for preloading lazy-loaded iframes\n\t// - null:   Iframes with data-src AND data-preload will be loaded when within\n\t//           the viewDistance, iframes with only data-src will be loaded when visible\n\t// - true:   All iframes with data-src will be loaded when within the viewDistance\n\t// - false:  All iframes with data-src will be loaded only when visible\n\tpreloadIframes: null,\n\n\t// Can be used to globally disable auto-animation\n\tautoAnimate: true,\n\n\t// Optionally provide a custom element matcher that will be\n\t// used to dictate which elements we can animate between.\n\tautoAnimateMatcher: null,\n\n\t// Default settings for our auto-animate transitions, can be\n\t// overridden per-slide or per-element via data arguments\n\tautoAnimateEasing: 'ease',\n\tautoAnimateDuration: 1.0,\n\tautoAnimateUnmatched: true,\n\n\t// CSS properties that can be auto-animated. Position & scale\n\t// is matched separately so there's no need to include styles\n\t// like top/right/bottom/left, width/height or margin.\n\tautoAnimateStyles: [\n\t\t'opacity',\n\t\t'color',\n\t\t'background-color',\n\t\t'padding',\n\t\t'font-size',\n\t\t'line-height',\n\t\t'letter-spacing',\n\t\t'border-width',\n\t\t'border-color',\n\t\t'border-radius',\n\t\t'outline',\n\t\t'outline-offset'\n\t],\n\n\t// Controls automatic progression to the next slide\n\t// - 0:      Auto-sliding only happens if the data-autoslide HTML attribute\n\t//           is present on the current slide or fragment\n\t// - 1+:     All slides will progress automatically at the given interval\n\t// - false:  No auto-sliding, even if data-autoslide is present\n\tautoSlide: 0,\n\n\t// Stop auto-sliding after user input\n\tautoSlideStoppable: true,\n\n\t// Use this method for navigation when auto-sliding (defaults to navigateNext)\n\tautoSlideMethod: null,\n\n\t// Specify the average time in seconds that you think you will spend\n\t// presenting each slide. This is used to show a pacing timer in the\n\t// speaker view\n\tdefaultTiming: null,\n\n\t// Enable slide navigation via mouse wheel\n\tmouseWheel: false,\n\n\t// Opens links in an iframe preview overlay\n\t// Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link\n\t// individually\n\tpreviewLinks: false,\n\n\t// Exposes the reveal.js API through window.postMessage\n\tpostMessage: true,\n\n\t// Dispatches all reveal.js events to the parent window through postMessage\n\tpostMessageEvents: false,\n\n\t// Focuses body when page changes visibility to ensure keyboard shortcuts work\n\tfocusBodyOnPageVisibilityChange: true,\n\n\t// Transition style\n\ttransition: 'slide', // none/fade/slide/convex/concave/zoom\n\n\t// Transition speed\n\ttransitionSpeed: 'default', // default/fast/slow\n\n\t// Transition style for full page slide backgrounds\n\tbackgroundTransition: 'fade', // none/fade/slide/convex/concave/zoom\n\n\t// Parallax background image\n\tparallaxBackgroundImage: '', // CSS syntax, e.g. \"a.jpg\"\n\n\t// Parallax background size\n\tparallaxBackgroundSize: '', // CSS syntax, e.g. \"3000px 2000px\"\n\n\t// Parallax background repeat\n\tparallaxBackgroundRepeat: '', // repeat/repeat-x/repeat-y/no-repeat/initial/inherit\n\n\t// Parallax background position\n\tparallaxBackgroundPosition: '', // CSS syntax, e.g. \"top left\"\n\n\t// Amount of pixels to move the parallax background per slide step\n\tparallaxBackgroundHorizontal: null,\n\tparallaxBackgroundVertical: null,\n\n\t// The maximum number of pages a single slide can expand onto when printing\n\t// to PDF, unlimited by default\n\tpdfMaxPagesPerSlide: Number.POSITIVE_INFINITY,\n\n\t// Prints each fragment on a separate slide\n\tpdfSeparateFragments: true,\n\n\t// Offset used to reduce the height of content within exported PDF pages.\n\t// This exists to account for environment differences based on how you\n\t// print to PDF. CLI printing options, like phantomjs and wkpdf, can end\n\t// on precisely the total height of the document whereas in-browser\n\t// printing has to end one pixel before.\n\tpdfPageHeightOffset: -1,\n\n\t// Number of slides away from the current that are visible\n\tviewDistance: 3,\n\n\t// Number of slides away from the current that are visible on mobile\n\t// devices. It is advisable to set this to a lower number than\n\t// viewDistance in order to save resources.\n\tmobileViewDistance: 2,\n\n\t// The display mode that will be used to show slides\n\tdisplay: 'block',\n\n\t// Hide cursor if inactive\n\thideInactiveCursor: true,\n\n\t// Time before the cursor is hidden (in ms)\n\thideCursorTime: 5000,\n\n\t// Should we automatmically sort and set indices for fragments\n\t// at each sync? (See Reveal.sync)\n\tsortFragmentsOnSync: true,\n\n\t// Script dependencies to load\n\tdependencies: [],\n\n\t// Plugin objects to register and use for this presentation\n\tplugins: []\n\n}","import SlideContent from './controllers/slidecontent.js'\nimport SlideNumber from './controllers/slidenumber.js'\nimport JumpToSlide from './controllers/jumptoslide.js'\nimport Backgrounds from './controllers/backgrounds.js'\nimport AutoAnimate from './controllers/autoanimate.js'\nimport Fragments from './controllers/fragments.js'\nimport Overview from './controllers/overview.js'\nimport Keyboard from './controllers/keyboard.js'\nimport Location from './controllers/location.js'\nimport Controls from './controllers/controls.js'\nimport Progress from './controllers/progress.js'\nimport Pointer from './controllers/pointer.js'\nimport Plugins from './controllers/plugins.js'\nimport Print from './controllers/print.js'\nimport Touch from './controllers/touch.js'\nimport Focus from './controllers/focus.js'\nimport Notes from './controllers/notes.js'\nimport Playback from './components/playback.js'\nimport defaultConfig from './config.js'\nimport * as Util from './utils/util.js'\nimport * as Device from './utils/device.js'\nimport {\n\tSLIDES_SELECTOR,\n\tHORIZONTAL_SLIDES_SELECTOR,\n\tVERTICAL_SLIDES_SELECTOR,\n\tPOST_MESSAGE_METHOD_BLACKLIST\n} from './utils/constants.js'\n\n// The reveal.js version\nexport const VERSION = '4.5.0';\n\n/**\n * reveal.js\n * https://revealjs.com\n * MIT licensed\n *\n * Copyright (C) 2011-2022 Hakim El Hattab, https://hakim.se\n */\nexport default function( revealElement, options ) {\n\n\t// Support initialization with no args, one arg\n\t// [options] or two args [revealElement, options]\n\tif( arguments.length < 2 ) {\n\t\toptions = arguments[0];\n\t\trevealElement = document.querySelector( '.reveal' );\n\t}\n\n\tconst Reveal = {};\n\n\t// Configuration defaults, can be overridden at initialization time\n\tlet config = {},\n\n\t\t// Flags if reveal.js is loaded (has dispatched the 'ready' event)\n\t\tready = false,\n\n\t\t// The horizontal and vertical index of the currently active slide\n\t\tindexh,\n\t\tindexv,\n\n\t\t// The previous and current slide HTML elements\n\t\tpreviousSlide,\n\t\tcurrentSlide,\n\n\t\t// Remember which directions that the user has navigated towards\n\t\tnavigationHistory = {\n\t\t\thasNavigatedHorizontally: false,\n\t\t\thasNavigatedVertically: false\n\t\t},\n\n\t\t// Slides may have a data-state attribute which we pick up and apply\n\t\t// as a class to the body. This list contains the combined state of\n\t\t// all current slides.\n\t\tstate = [],\n\n\t\t// The current scale of the presentation (see width/height config)\n\t\tscale = 1,\n\n\t\t// CSS transform that is currently applied to the slides container,\n\t\t// split into two groups\n\t\tslidesTransform = { layout: '', overview: '' },\n\n\t\t// Cached references to DOM elements\n\t\tdom = {},\n\n\t\t// Flags if the interaction event listeners are bound\n\t\teventsAreBound = false,\n\n\t\t// The current slide transition state; idle or running\n\t\ttransition = 'idle',\n\n\t\t// The current auto-slide duration\n\t\tautoSlide = 0,\n\n\t\t// Auto slide properties\n\t\tautoSlidePlayer,\n\t\tautoSlideTimeout = 0,\n\t\tautoSlideStartTime = -1,\n\t\tautoSlidePaused = false,\n\n\t\t// Controllers for different aspects of our presentation. They're\n\t\t// all given direct references to this Reveal instance since there\n\t\t// may be multiple presentations running in parallel.\n\t\tslideContent = new SlideContent( Reveal ),\n\t\tslideNumber = new SlideNumber( Reveal ),\n\t\tjumpToSlide = new JumpToSlide( Reveal ),\n\t\tautoAnimate = new AutoAnimate( Reveal ),\n\t\tbackgrounds = new Backgrounds( Reveal ),\n\t\tfragments = new Fragments( Reveal ),\n\t\toverview = new Overview( Reveal ),\n\t\tkeyboard = new Keyboard( Reveal ),\n\t\tlocation = new Location( Reveal ),\n\t\tcontrols = new Controls( Reveal ),\n\t\tprogress = new Progress( Reveal ),\n\t\tpointer = new Pointer( Reveal ),\n\t\tplugins = new Plugins( Reveal ),\n\t\tprint = new Print( Reveal ),\n\t\tfocus = new Focus( Reveal ),\n\t\ttouch = new Touch( Reveal ),\n\t\tnotes = new Notes( Reveal );\n\n\t/**\n\t * Starts up the presentation.\n\t */\n\tfunction initialize( initOptions ) {\n\n\t\tif( !revealElement ) throw 'Unable to find presentation root (<div class=\"reveal\">).';\n\n\t\t// Cache references to key DOM elements\n\t\tdom.wrapper = revealElement;\n\t\tdom.slides = revealElement.querySelector( '.slides' );\n\n\t\tif( !dom.slides ) throw 'Unable to find slides container (<div class=\"slides\">).';\n\n\t\t// Compose our config object in order of increasing precedence:\n\t\t// 1. Default reveal.js options\n\t\t// 2. Options provided via Reveal.configure() prior to\n\t\t//    initialization\n\t\t// 3. Options passed to the Reveal constructor\n\t\t// 4. Options passed to Reveal.initialize\n\t\t// 5. Query params\n\t\tconfig = { ...defaultConfig, ...config, ...options, ...initOptions, ...Util.getQueryHash() };\n\n\t\tsetViewport();\n\n\t\t// Force a layout when the whole page, incl fonts, has loaded\n\t\twindow.addEventListener( 'load', layout, false );\n\n\t\t// Register plugins and load dependencies, then move on to #start()\n\t\tplugins.load( config.plugins, config.dependencies ).then( start );\n\n\t\treturn new Promise( resolve => Reveal.on( 'ready', resolve ) );\n\n\t}\n\n\t/**\n\t * Encase the presentation in a reveal.js viewport. The\n\t * extent of the viewport differs based on configuration.\n\t */\n\tfunction setViewport() {\n\n\t\t// Embedded decks use the reveal element as their viewport\n\t\tif( config.embedded === true ) {\n\t\t\tdom.viewport = Util.closest( revealElement, '.reveal-viewport' ) || revealElement;\n\t\t}\n\t\t// Full-page decks use the body as their viewport\n\t\telse {\n\t\t\tdom.viewport = document.body;\n\t\t\tdocument.documentElement.classList.add( 'reveal-full-page' );\n\t\t}\n\n\t\tdom.viewport.classList.add( 'reveal-viewport' );\n\n\t}\n\n\t/**\n\t * Starts up reveal.js by binding input events and navigating\n\t * to the current URL deeplink if there is one.\n\t */\n\tfunction start() {\n\n\t\tready = true;\n\n\t\t// Remove slides hidden with data-visibility\n\t\tremoveHiddenSlides();\n\n\t\t// Make sure we've got all the DOM elements we need\n\t\tsetupDOM();\n\n\t\t// Listen to messages posted to this window\n\t\tsetupPostMessage();\n\n\t\t// Prevent the slides from being scrolled out of view\n\t\tsetupScrollPrevention();\n\n\t\t// Adds bindings for fullscreen mode\n\t\tsetupFullscreen();\n\n\t\t// Resets all vertical slides so that only the first is visible\n\t\tresetVerticalSlides();\n\n\t\t// Updates the presentation to match the current configuration values\n\t\tconfigure();\n\n\t\t// Read the initial hash\n\t\tlocation.readURL();\n\n\t\t// Create slide backgrounds\n\t\tbackgrounds.update( true );\n\n\t\t// Notify listeners that the presentation is ready but use a 1ms\n\t\t// timeout to ensure it's not fired synchronously after #initialize()\n\t\tsetTimeout( () => {\n\t\t\t// Enable transitions now that we're loaded\n\t\t\tdom.slides.classList.remove( 'no-transition' );\n\n\t\t\tdom.wrapper.classList.add( 'ready' );\n\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'ready',\n\t\t\t\tdata: {\n\t\t\t\t\tindexh,\n\t\t\t\t\tindexv,\n\t\t\t\t\tcurrentSlide\n\t\t\t\t}\n\t\t\t});\n\t\t}, 1 );\n\n\t\t// Special setup and config is required when printing to PDF\n\t\tif( print.isPrintingPDF() ) {\n\t\t\tremoveEventListeners();\n\n\t\t\t// The document needs to have loaded for the PDF layout\n\t\t\t// measurements to be accurate\n\t\t\tif( document.readyState === 'complete' ) {\n\t\t\t\tprint.setupPDF();\n\t\t\t}\n\t\t\telse {\n\t\t\t\twindow.addEventListener( 'load', () => {\n\t\t\t\t\tprint.setupPDF();\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes all slides with data-visibility=\"hidden\". This\n\t * is done right before the rest of the presentation is\n\t * initialized.\n\t *\n\t * If you want to show all hidden slides, initialize\n\t * reveal.js with showHiddenSlides set to true.\n\t */\n\tfunction removeHiddenSlides() {\n\n\t\tif( !config.showHiddenSlides ) {\n\t\t\tUtil.queryAll( dom.wrapper, 'section[data-visibility=\"hidden\"]' ).forEach( slide => {\n\t\t\t\tslide.parentNode.removeChild( slide );\n\t\t\t} );\n\t\t}\n\n\t}\n\n\t/**\n\t * Finds and stores references to DOM elements which are\n\t * required by the presentation. If a required element is\n\t * not found, it is created.\n\t */\n\tfunction setupDOM() {\n\n\t\t// Prevent transitions while we're loading\n\t\tdom.slides.classList.add( 'no-transition' );\n\n\t\tif( Device.isMobile ) {\n\t\t\tdom.wrapper.classList.add( 'no-hover' );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.classList.remove( 'no-hover' );\n\t\t}\n\n\t\tbackgrounds.render();\n\t\tslideNumber.render();\n\t\tjumpToSlide.render();\n\t\tcontrols.render();\n\t\tprogress.render();\n\t\tnotes.render();\n\n\t\t// Overlay graphic which is displayed during the paused mode\n\t\tdom.pauseOverlay = Util.createSingletonNode( dom.wrapper, 'div', 'pause-overlay', config.controls ? '<button class=\"resume-button\">Resume presentation</button>' : null );\n\n\t\tdom.statusElement = createStatusElement();\n\n\t\tdom.wrapper.setAttribute( 'role', 'application' );\n\t}\n\n\t/**\n\t * Creates a hidden div with role aria-live to announce the\n\t * current slide content. Hide the div off-screen to make it\n\t * available only to Assistive Technologies.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction createStatusElement() {\n\n\t\tlet statusElement = dom.wrapper.querySelector( '.aria-status' );\n\t\tif( !statusElement ) {\n\t\t\tstatusElement = document.createElement( 'div' );\n\t\t\tstatusElement.style.position = 'absolute';\n\t\t\tstatusElement.style.height = '1px';\n\t\t\tstatusElement.style.width = '1px';\n\t\t\tstatusElement.style.overflow = 'hidden';\n\t\t\tstatusElement.style.clip = 'rect( 1px, 1px, 1px, 1px )';\n\t\t\tstatusElement.classList.add( 'aria-status' );\n\t\t\tstatusElement.setAttribute( 'aria-live', 'polite' );\n\t\t\tstatusElement.setAttribute( 'aria-atomic','true' );\n\t\t\tdom.wrapper.appendChild( statusElement );\n\t\t}\n\t\treturn statusElement;\n\n\t}\n\n\t/**\n\t * Announces the given text to screen readers.\n\t */\n\tfunction announceStatus( value ) {\n\n\t\tdom.statusElement.textContent = value;\n\n\t}\n\n\t/**\n\t * Converts the given HTML element into a string of text\n\t * that can be announced to a screen reader. Hidden\n\t * elements are excluded.\n\t */\n\tfunction getStatusText( node ) {\n\n\t\tlet text = '';\n\n\t\t// Text node\n\t\tif( node.nodeType === 3 ) {\n\t\t\ttext += node.textContent;\n\t\t}\n\t\t// Element node\n\t\telse if( node.nodeType === 1 ) {\n\n\t\t\tlet isAriaHidden = node.getAttribute( 'aria-hidden' );\n\t\t\tlet isDisplayHidden = window.getComputedStyle( node )['display'] === 'none';\n\t\t\tif( isAriaHidden !== 'true' && !isDisplayHidden ) {\n\n\t\t\t\tArray.from( node.childNodes ).forEach( child => {\n\t\t\t\t\ttext += getStatusText( child );\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t\ttext = text.trim();\n\n\t\treturn text === '' ? '' : text + ' ';\n\n\t}\n\n\t/**\n\t * This is an unfortunate necessity. Some actions – such as\n\t * an input field being focused in an iframe or using the\n\t * keyboard to expand text selection beyond the bounds of\n\t * a slide – can trigger our content to be pushed out of view.\n\t * This scrolling can not be prevented by hiding overflow in\n\t * CSS (we already do) so we have to resort to repeatedly\n\t * checking if the slides have been offset :(\n\t */\n\tfunction setupScrollPrevention() {\n\n\t\tsetInterval( () => {\n\t\t\tif( dom.wrapper.scrollTop !== 0 || dom.wrapper.scrollLeft !== 0 ) {\n\t\t\t\tdom.wrapper.scrollTop = 0;\n\t\t\t\tdom.wrapper.scrollLeft = 0;\n\t\t\t}\n\t\t}, 1000 );\n\n\t}\n\n\t/**\n\t * After entering fullscreen we need to force a layout to\n\t * get our presentations to scale correctly. This behavior\n\t * is inconsistent across browsers but a force layout seems\n\t * to normalize it.\n\t */\n\tfunction setupFullscreen() {\n\n\t\tdocument.addEventListener( 'fullscreenchange', onFullscreenChange );\n\t\tdocument.addEventListener( 'webkitfullscreenchange', onFullscreenChange );\n\n\t}\n\n\t/**\n\t * Registers a listener to postMessage events, this makes it\n\t * possible to call all reveal.js API methods from another\n\t * window. For example:\n\t *\n\t * revealWindow.postMessage( JSON.stringify({\n\t *   method: 'slide',\n\t *   args: [ 2 ]\n\t * }), '*' );\n\t */\n\tfunction setupPostMessage() {\n\n\t\tif( config.postMessage ) {\n\t\t\twindow.addEventListener( 'message', onPostMessage, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies the configuration settings from the config\n\t * object. May be called multiple times.\n\t *\n\t * @param {object} options\n\t */\n\tfunction configure( options ) {\n\n\t\tconst oldConfig = { ...config }\n\n\t\t// New config options may be passed when this method\n\t\t// is invoked through the API after initialization\n\t\tif( typeof options === 'object' ) Util.extend( config, options );\n\n\t\t// Abort if reveal.js hasn't finished loading, config\n\t\t// changes will be applied automatically once ready\n\t\tif( Reveal.isReady() ===  false ) return;\n\n\t\tconst numberOfSlides = dom.wrapper.querySelectorAll( SLIDES_SELECTOR ).length;\n\n\t\t// The transition is added as a class on the .reveal element\n\t\tdom.wrapper.classList.remove( oldConfig.transition );\n\t\tdom.wrapper.classList.add( config.transition );\n\n\t\tdom.wrapper.setAttribute( 'data-transition-speed', config.transitionSpeed );\n\t\tdom.wrapper.setAttribute( 'data-background-transition', config.backgroundTransition );\n\n\t\t// Expose our configured slide dimensions as custom props\n\t\tdom.viewport.style.setProperty( '--slide-width', config.width + 'px' );\n\t\tdom.viewport.style.setProperty( '--slide-height', config.height + 'px' );\n\n\t\tif( config.shuffle ) {\n\t\t\tshuffle();\n\t\t}\n\n\t\tUtil.toggleClass( dom.wrapper, 'embedded', config.embedded );\n\t\tUtil.toggleClass( dom.wrapper, 'rtl', config.rtl );\n\t\tUtil.toggleClass( dom.wrapper, 'center', config.center );\n\n\t\t// Exit the paused mode if it was configured off\n\t\tif( config.pause === false ) {\n\t\t\tresume();\n\t\t}\n\n\t\t// Iframe link previews\n\t\tif( config.previewLinks ) {\n\t\t\tenablePreviewLinks();\n\t\t\tdisablePreviewLinks( '[data-preview-link=false]' );\n\t\t}\n\t\telse {\n\t\t\tdisablePreviewLinks();\n\t\t\tenablePreviewLinks( '[data-preview-link]:not([data-preview-link=false])' );\n\t\t}\n\n\t\t// Reset all changes made by auto-animations\n\t\tautoAnimate.reset();\n\n\t\t// Remove existing auto-slide controls\n\t\tif( autoSlidePlayer ) {\n\t\t\tautoSlidePlayer.destroy();\n\t\t\tautoSlidePlayer = null;\n\t\t}\n\n\t\t// Generate auto-slide controls if needed\n\t\tif( numberOfSlides > 1 && config.autoSlide && config.autoSlideStoppable ) {\n\t\t\tautoSlidePlayer = new Playback( dom.wrapper, () => {\n\t\t\t\treturn Math.min( Math.max( ( Date.now() - autoSlideStartTime ) / autoSlide, 0 ), 1 );\n\t\t\t} );\n\n\t\t\tautoSlidePlayer.on( 'click', onAutoSlidePlayerClick );\n\t\t\tautoSlidePaused = false;\n\t\t}\n\n\t\t// Add the navigation mode to the DOM so we can adjust styling\n\t\tif( config.navigationMode !== 'default' ) {\n\t\t\tdom.wrapper.setAttribute( 'data-navigation-mode', config.navigationMode );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.removeAttribute( 'data-navigation-mode' );\n\t\t}\n\n\t\tnotes.configure( config, oldConfig );\n\t\tfocus.configure( config, oldConfig );\n\t\tpointer.configure( config, oldConfig );\n\t\tcontrols.configure( config, oldConfig );\n\t\tprogress.configure( config, oldConfig );\n\t\tkeyboard.configure( config, oldConfig );\n\t\tfragments.configure( config, oldConfig );\n\t\tslideNumber.configure( config, oldConfig );\n\n\t\tsync();\n\n\t}\n\n\t/**\n\t * Binds all event listeners.\n\t */\n\tfunction addEventListeners() {\n\n\t\teventsAreBound = true;\n\n\t\twindow.addEventListener( 'resize', onWindowResize, false );\n\n\t\tif( config.touch ) touch.bind();\n\t\tif( config.keyboard ) keyboard.bind();\n\t\tif( config.progress ) progress.bind();\n\t\tif( config.respondToHashChanges ) location.bind();\n\t\tcontrols.bind();\n\t\tfocus.bind();\n\n\t\tdom.slides.addEventListener( 'click', onSlidesClicked, false );\n\t\tdom.slides.addEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.addEventListener( 'click', resume, false );\n\n\t\tif( config.focusBodyOnPageVisibilityChange ) {\n\t\t\tdocument.addEventListener( 'visibilitychange', onPageVisibilityChange, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Unbinds all event listeners.\n\t */\n\tfunction removeEventListeners() {\n\n\t\teventsAreBound = false;\n\n\t\ttouch.unbind();\n\t\tfocus.unbind();\n\t\tkeyboard.unbind();\n\t\tcontrols.unbind();\n\t\tprogress.unbind();\n\t\tlocation.unbind();\n\n\t\twindow.removeEventListener( 'resize', onWindowResize, false );\n\n\t\tdom.slides.removeEventListener( 'click', onSlidesClicked, false );\n\t\tdom.slides.removeEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.removeEventListener( 'click', resume, false );\n\n\t}\n\n\t/**\n\t * Uninitializes reveal.js by undoing changes made to the\n\t * DOM and removing all event listeners.\n\t */\n\tfunction destroy() {\n\n\t\tremoveEventListeners();\n\t\tcancelAutoSlide();\n\t\tdisablePreviewLinks();\n\n\t\t// Destroy controllers\n\t\tnotes.destroy();\n\t\tfocus.destroy();\n\t\tplugins.destroy();\n\t\tpointer.destroy();\n\t\tcontrols.destroy();\n\t\tprogress.destroy();\n\t\tbackgrounds.destroy();\n\t\tslideNumber.destroy();\n\t\tjumpToSlide.destroy();\n\n\t\t// Remove event listeners\n\t\tdocument.removeEventListener( 'fullscreenchange', onFullscreenChange );\n\t\tdocument.removeEventListener( 'webkitfullscreenchange', onFullscreenChange );\n\t\tdocument.removeEventListener( 'visibilitychange', onPageVisibilityChange, false );\n\t\twindow.removeEventListener( 'message', onPostMessage, false );\n\t\twindow.removeEventListener( 'load', layout, false );\n\n\t\t// Undo DOM changes\n\t\tif( dom.pauseOverlay ) dom.pauseOverlay.remove();\n\t\tif( dom.statusElement ) dom.statusElement.remove();\n\n\t\tdocument.documentElement.classList.remove( 'reveal-full-page' );\n\n\t\tdom.wrapper.classList.remove( 'ready', 'center', 'has-horizontal-slides', 'has-vertical-slides' );\n\t\tdom.wrapper.removeAttribute( 'data-transition-speed' );\n\t\tdom.wrapper.removeAttribute( 'data-background-transition' );\n\n\t\tdom.viewport.classList.remove( 'reveal-viewport' );\n\t\tdom.viewport.style.removeProperty( '--slide-width' );\n\t\tdom.viewport.style.removeProperty( '--slide-height' );\n\n\t\tdom.slides.style.removeProperty( 'width' );\n\t\tdom.slides.style.removeProperty( 'height' );\n\t\tdom.slides.style.removeProperty( 'zoom' );\n\t\tdom.slides.style.removeProperty( 'left' );\n\t\tdom.slides.style.removeProperty( 'top' );\n\t\tdom.slides.style.removeProperty( 'bottom' );\n\t\tdom.slides.style.removeProperty( 'right' );\n\t\tdom.slides.style.removeProperty( 'transform' );\n\n\t\tArray.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) ).forEach( slide => {\n\t\t\tslide.style.removeProperty( 'display' );\n\t\t\tslide.style.removeProperty( 'top' );\n\t\t\tslide.removeAttribute( 'hidden' );\n\t\t\tslide.removeAttribute( 'aria-hidden' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Adds a listener to one of our custom reveal.js events,\n\t * like slidechanged.\n\t */\n\tfunction on( type, listener, useCapture ) {\n\n\t\trevealElement.addEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Unsubscribes from a reveal.js event.\n\t */\n\tfunction off( type, listener, useCapture ) {\n\n\t\trevealElement.removeEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Applies CSS transforms to the slides container. The container\n\t * is transformed from two separate sources: layout and the overview\n\t * mode.\n\t *\n\t * @param {object} transforms\n\t */\n\tfunction transformSlides( transforms ) {\n\n\t\t// Pick up new transforms from arguments\n\t\tif( typeof transforms.layout === 'string' ) slidesTransform.layout = transforms.layout;\n\t\tif( typeof transforms.overview === 'string' ) slidesTransform.overview = transforms.overview;\n\n\t\t// Apply the transforms to the slides container\n\t\tif( slidesTransform.layout ) {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.layout + ' ' + slidesTransform.overview );\n\t\t}\n\t\telse {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.overview );\n\t\t}\n\n\t}\n\n\t/**\n\t * Dispatches an event of the specified type from the\n\t * reveal DOM element.\n\t */\n\tfunction dispatchEvent({ target=dom.wrapper, type, data, bubbles=true }) {\n\n\t\tlet event = document.createEvent( 'HTMLEvents', 1, 2 );\n\t\tevent.initEvent( type, bubbles, true );\n\t\tUtil.extend( event, data );\n\t\ttarget.dispatchEvent( event );\n\n\t\tif( target === dom.wrapper ) {\n\t\t\t// If we're in an iframe, post each reveal.js event to the\n\t\t\t// parent window. Used by the notes plugin\n\t\t\tdispatchPostMessage( type );\n\t\t}\n\n\t\treturn event;\n\n\t}\n\n\t/**\n\t * Dispatched a postMessage of the given type from our window.\n\t */\n\tfunction dispatchPostMessage( type, data ) {\n\n\t\tif( config.postMessageEvents && window.parent !== window.self ) {\n\t\t\tlet message = {\n\t\t\t\tnamespace: 'reveal',\n\t\t\t\teventName: type,\n\t\t\t\tstate: getState()\n\t\t\t};\n\n\t\t\tUtil.extend( message, data );\n\n\t\t\twindow.parent.postMessage( JSON.stringify( message ), '*' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Bind preview frame links.\n\t *\n\t * @param {string} [selector=a] - selector for anchors\n\t */\n\tfunction enablePreviewLinks( selector = 'a' ) {\n\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\n\t\t\t\telement.addEventListener( 'click', onPreviewLinkClicked, false );\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unbind preview frame links.\n\t */\n\tfunction disablePreviewLinks( selector = 'a' ) {\n\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\n\t\t\t\telement.removeEventListener( 'click', onPreviewLinkClicked, false );\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Opens a preview window for the target URL.\n\t *\n\t * @param {string} url - url for preview iframe src\n\t */\n\tfunction showPreview( url ) {\n\n\t\tcloseOverlay();\n\n\t\tdom.overlay = document.createElement( 'div' );\n\t\tdom.overlay.classList.add( 'overlay' );\n\t\tdom.overlay.classList.add( 'overlay-preview' );\n\t\tdom.wrapper.appendChild( dom.overlay );\n\n\t\tdom.overlay.innerHTML =\n\t\t\t`<header>\n\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t<a class=\"external\" href=\"${url}\" target=\"_blank\"><span class=\"icon\"></span></a>\n\t\t\t</header>\n\t\t\t<div class=\"spinner\"></div>\n\t\t\t<div class=\"viewport\">\n\t\t\t\t<iframe src=\"${url}\"></iframe>\n\t\t\t\t<small class=\"viewport-inner\">\n\t\t\t\t\t<span class=\"x-frame-error\">Unable to load iframe. This is likely due to the site's policy (x-frame-options).</span>\n\t\t\t\t</small>\n\t\t\t</div>`;\n\n\t\tdom.overlay.querySelector( 'iframe' ).addEventListener( 'load', event => {\n\t\t\tdom.overlay.classList.add( 'loaded' );\n\t\t}, false );\n\n\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\n\t\t\tcloseOverlay();\n\t\t\tevent.preventDefault();\n\t\t}, false );\n\n\t\tdom.overlay.querySelector( '.external' ).addEventListener( 'click', event => {\n\t\t\tcloseOverlay();\n\t\t}, false );\n\n\t}\n\n\t/**\n\t * Open or close help overlay window.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * help is open, false means it's closed.\n\t */\n\tfunction toggleHelp( override ){\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? showHelp() : closeOverlay();\n\t\t}\n\t\telse {\n\t\t\tif( dom.overlay ) {\n\t\t\t\tcloseOverlay();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tshowHelp();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Opens an overlay window with help material.\n\t */\n\tfunction showHelp() {\n\n\t\tif( config.help ) {\n\n\t\t\tcloseOverlay();\n\n\t\t\tdom.overlay = document.createElement( 'div' );\n\t\t\tdom.overlay.classList.add( 'overlay' );\n\t\t\tdom.overlay.classList.add( 'overlay-help' );\n\t\t\tdom.wrapper.appendChild( dom.overlay );\n\n\t\t\tlet html = '<p class=\"title\">Keyboard Shortcuts</p><br/>';\n\n\t\t\tlet shortcuts = keyboard.getShortcuts(),\n\t\t\t\tbindings = keyboard.getBindings();\n\n\t\t\thtml += '<table><th>KEY</th><th>ACTION</th>';\n\t\t\tfor( let key in shortcuts ) {\n\t\t\t\thtml += `<tr><td>${key}</td><td>${shortcuts[ key ]}</td></tr>`;\n\t\t\t}\n\n\t\t\t// Add custom key bindings that have associated descriptions\n\t\t\tfor( let binding in bindings ) {\n\t\t\t\tif( bindings[binding].key && bindings[binding].description ) {\n\t\t\t\t\thtml += `<tr><td>${bindings[binding].key}</td><td>${bindings[binding].description}</td></tr>`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thtml += '</table>';\n\n\t\t\tdom.overlay.innerHTML = `\n\t\t\t\t<header>\n\t\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"viewport\">\n\t\t\t\t\t<div class=\"viewport-inner\">${html}</div>\n\t\t\t\t</div>\n\t\t\t`;\n\n\t\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\n\t\t\t\tcloseOverlay();\n\t\t\t\tevent.preventDefault();\n\t\t\t}, false );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Closes any currently open overlay.\n\t */\n\tfunction closeOverlay() {\n\n\t\tif( dom.overlay ) {\n\t\t\tdom.overlay.parentNode.removeChild( dom.overlay );\n\t\t\tdom.overlay = null;\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Applies JavaScript-controlled layout rules to the\n\t * presentation.\n\t */\n\tfunction layout() {\n\n\t\tif( dom.wrapper && !print.isPrintingPDF() ) {\n\n\t\t\tif( !config.disableLayout ) {\n\n\t\t\t\t// On some mobile devices '100vh' is taller than the visible\n\t\t\t\t// viewport which leads to part of the presentation being\n\t\t\t\t// cut off. To work around this we define our own '--vh' custom\n\t\t\t\t// property where 100x adds up to the correct height.\n\t\t\t\t//\n\t\t\t\t// https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\n\t\t\t\tif( Device.isMobile && !config.embedded ) {\n\t\t\t\t\tdocument.documentElement.style.setProperty( '--vh', ( window.innerHeight * 0.01 ) + 'px' );\n\t\t\t\t}\n\n\t\t\t\tconst size = getComputedSlideSize();\n\n\t\t\t\tconst oldScale = scale;\n\n\t\t\t\t// Layout the contents of the slides\n\t\t\t\tlayoutSlideContents( config.width, config.height );\n\n\t\t\t\tdom.slides.style.width = size.width + 'px';\n\t\t\t\tdom.slides.style.height = size.height + 'px';\n\n\t\t\t\t// Determine scale of content to fit within available space\n\t\t\t\tscale = Math.min( size.presentationWidth / size.width, size.presentationHeight / size.height );\n\n\t\t\t\t// Respect max/min scale settings\n\t\t\t\tscale = Math.max( scale, config.minScale );\n\t\t\t\tscale = Math.min( scale, config.maxScale );\n\n\t\t\t\t// Don't apply any scaling styles if scale is 1\n\t\t\t\tif( scale === 1 ) {\n\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\tdom.slides.style.left = '';\n\t\t\t\t\tdom.slides.style.top = '';\n\t\t\t\t\tdom.slides.style.bottom = '';\n\t\t\t\t\tdom.slides.style.right = '';\n\t\t\t\t\ttransformSlides( { layout: '' } );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\tdom.slides.style.left = '50%';\n\t\t\t\t\tdom.slides.style.top = '50%';\n\t\t\t\t\tdom.slides.style.bottom = 'auto';\n\t\t\t\t\tdom.slides.style.right = 'auto';\n\t\t\t\t\ttransformSlides( { layout: 'translate(-50%, -50%) scale('+ scale +')' } );\n\t\t\t\t}\n\n\t\t\t\t// Select all slides, vertical and horizontal\n\t\t\t\tconst slides = Array.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) );\n\n\t\t\t\tfor( let i = 0, len = slides.length; i < len; i++ ) {\n\t\t\t\t\tconst slide = slides[ i ];\n\n\t\t\t\t\t// Don't bother updating invisible slides\n\t\t\t\t\tif( slide.style.display === 'none' ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif( config.center || slide.classList.contains( 'center' ) ) {\n\t\t\t\t\t\t// Vertical stacks are not centred since their section\n\t\t\t\t\t\t// children will be\n\t\t\t\t\t\tif( slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\t\t\tslide.style.top = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslide.style.top = Math.max( ( size.height - slide.scrollHeight ) / 2, 0 ) + 'px';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tslide.style.top = '';\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif( oldScale !== scale ) {\n\t\t\t\t\tdispatchEvent({\n\t\t\t\t\t\ttype: 'resize',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\toldScale,\n\t\t\t\t\t\t\tscale,\n\t\t\t\t\t\t\tsize\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdom.viewport.style.setProperty( '--slide-scale', scale );\n\n\t\t\tprogress.update();\n\t\t\tbackgrounds.updateParallax();\n\n\t\t\tif( overview.isActive() ) {\n\t\t\t\toverview.update();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies layout logic to the contents of all slides in\n\t * the presentation.\n\t *\n\t * @param {string|number} width\n\t * @param {string|number} height\n\t */\n\tfunction layoutSlideContents( width, height ) {\n\n\t\t// Handle sizing of elements with the 'r-stretch' class\n\t\tUtil.queryAll( dom.slides, 'section > .stretch, section > .r-stretch' ).forEach( element => {\n\n\t\t\t// Determine how much vertical space we can use\n\t\t\tlet remainingHeight = Util.getRemainingHeight( element, height );\n\n\t\t\t// Consider the aspect ratio of media elements\n\t\t\tif( /(img|video)/gi.test( element.nodeName ) ) {\n\t\t\t\tconst nw = element.naturalWidth || element.videoWidth,\n\t\t\t\t\t  nh = element.naturalHeight || element.videoHeight;\n\n\t\t\t\tconst es = Math.min( width / nw, remainingHeight / nh );\n\n\t\t\t\telement.style.width = ( nw * es ) + 'px';\n\t\t\t\telement.style.height = ( nh * es ) + 'px';\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.width = width + 'px';\n\t\t\t\telement.style.height = remainingHeight + 'px';\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Calculates the computed pixel size of our slides. These\n\t * values are based on the width and height configuration\n\t * options.\n\t *\n\t * @param {number} [presentationWidth=dom.wrapper.offsetWidth]\n\t * @param {number} [presentationHeight=dom.wrapper.offsetHeight]\n\t */\n\tfunction getComputedSlideSize( presentationWidth, presentationHeight ) {\n\t\tlet width = config.width;\n\t\tlet height = config.height;\n\n\t\tif( config.disableLayout ) {\n\t\t\twidth = dom.slides.offsetWidth;\n\t\t\theight = dom.slides.offsetHeight;\n\t\t}\n\n\t\tconst size = {\n\t\t\t// Slide size\n\t\t\twidth: width,\n\t\t\theight: height,\n\n\t\t\t// Presentation size\n\t\t\tpresentationWidth: presentationWidth || dom.wrapper.offsetWidth,\n\t\t\tpresentationHeight: presentationHeight || dom.wrapper.offsetHeight\n\t\t};\n\n\t\t// Reduce available space by margin\n\t\tsize.presentationWidth -= ( size.presentationWidth * config.margin );\n\t\tsize.presentationHeight -= ( size.presentationHeight * config.margin );\n\n\t\t// Slide width may be a percentage of available width\n\t\tif( typeof size.width === 'string' && /%$/.test( size.width ) ) {\n\t\t\tsize.width = parseInt( size.width, 10 ) / 100 * size.presentationWidth;\n\t\t}\n\n\t\t// Slide height may be a percentage of available height\n\t\tif( typeof size.height === 'string' && /%$/.test( size.height ) ) {\n\t\t\tsize.height = parseInt( size.height, 10 ) / 100 * size.presentationHeight;\n\t\t}\n\n\t\treturn size;\n\n\t}\n\n\t/**\n\t * Stores the vertical index of a stack so that the same\n\t * vertical slide can be selected when navigating to and\n\t * from the stack.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t * @param {string|number} [v=0] Index to memorize\n\t */\n\tfunction setPreviousVerticalIndex( stack, v ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' ) {\n\t\t\tstack.setAttribute( 'data-previous-indexv', v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Retrieves the vertical index which was stored using\n\t * #setPreviousVerticalIndex() or 0 if no previous index\n\t * exists.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t */\n\tfunction getPreviousVerticalIndex( stack ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' && stack.classList.contains( 'stack' ) ) {\n\t\t\t// Prefer manually defined start-indexv\n\t\t\tconst attributeName = stack.hasAttribute( 'data-start-indexv' ) ? 'data-start-indexv' : 'data-previous-indexv';\n\n\t\t\treturn parseInt( stack.getAttribute( attributeName ) || 0, 10 );\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\t/**\n\t * Checks if the current or specified slide is vertical\n\t * (nested within another slide).\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to check\n\t * orientation of\n\t * @return {Boolean}\n\t */\n\tfunction isVerticalSlide( slide = currentSlide ) {\n\n\t\treturn slide && slide.parentNode && !!slide.parentNode.nodeName.match( /section/i );\n\n\t}\n\n\t/**\n\t * Returns true if we're on the last slide in the current\n\t * vertical stack.\n\t */\n\tfunction isLastVerticalSlide() {\n\n\t\tif( currentSlide && isVerticalSlide( currentSlide ) ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the first slide in\n\t * the presentation.\n\t */\n\tfunction isFirstSlide() {\n\n\t\treturn indexh === 0 && indexv === 0;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the last slide in\n\t * the presenation. If the last slide is a stack, we only\n\t * consider this the last slide if it's at the end of the\n\t * stack.\n\t */\n\tfunction isLastSlide() {\n\n\t\tif( currentSlide ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\t// If it's vertical, does its parent have a next sibling?\n\t\t\tif( isVerticalSlide( currentSlide ) && currentSlide.parentNode.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Enters the paused mode which fades everything on screen to\n\t * black.\n\t */\n\tfunction pause() {\n\n\t\tif( config.pause ) {\n\t\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\n\t\t\tcancelAutoSlide();\n\t\t\tdom.wrapper.classList.add( 'paused' );\n\n\t\t\tif( wasPaused === false ) {\n\t\t\t\tdispatchEvent({ type: 'paused' });\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Exits from the paused mode.\n\t */\n\tfunction resume() {\n\n\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\t\tdom.wrapper.classList.remove( 'paused' );\n\n\t\tcueAutoSlide();\n\n\t\tif( wasPaused ) {\n\t\t\tdispatchEvent({ type: 'resumed' });\n\t\t}\n\n\t}\n\n\t/**\n\t * Toggles the paused mode on and off.\n\t */\n\tfunction togglePause( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? pause() : resume();\n\t\t}\n\t\telse {\n\t\t\tisPaused() ? resume() : pause();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if we are currently in the paused mode.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isPaused() {\n\n\t\treturn dom.wrapper.classList.contains( 'paused' );\n\n\t}\n\n\t/**\n\t * Toggles visibility of the jump-to-slide UI.\n\t */\n\tfunction toggleJumpToSlide( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? jumpToSlide.show() : jumpToSlide.hide();\n\t\t}\n\t\telse {\n\t\t\tjumpToSlide.isVisible() ? jumpToSlide.hide() : jumpToSlide.show();\n\t\t}\n\n\t}\n\n\t/**\n\t * Toggles the auto slide mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which sets the desired state.\n\t * True means autoplay starts, false means it stops.\n\t */\n\n\tfunction toggleAutoSlide( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t\telse {\n\t\t\tautoSlidePaused ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the auto slide mode is currently on.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isAutoSliding() {\n\n\t\treturn !!( autoSlide && !autoSlidePaused );\n\n\t}\n\n\t/**\n\t * Steps from the current point in the presentation to the\n\t * slide which matches the specified horizontal and vertical\n\t * indices.\n\t *\n\t * @param {number} [h=indexh] Horizontal index of the target slide\n\t * @param {number} [v=indexv] Vertical index of the target slide\n\t * @param {number} [f] Index of a fragment within the\n\t * target slide to activate\n\t * @param {number} [origin] Origin for use in multimaster environments\n\t */\n\tfunction slide( h, v, f, origin ) {\n\n\t\t// Dispatch an event before the slide\n\t\tconst slidechange = dispatchEvent({\n\t\t\ttype: 'beforeslidechange',\n\t\t\tdata: {\n\t\t\t\tindexh: h === undefined ? indexh : h,\n\t\t\t\tindexv: v === undefined ? indexv : v,\n\t\t\t\torigin\n\t\t\t}\n\t\t});\n\n\t\t// Abort if this slide change was prevented by an event listener\n\t\tif( slidechange.defaultPrevented ) return;\n\n\t\t// Remember where we were at before\n\t\tpreviousSlide = currentSlide;\n\n\t\t// Query all horizontal slides in the deck\n\t\tconst horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR );\n\n\t\t// Abort if there are no slides\n\t\tif( horizontalSlides.length === 0 ) return;\n\n\t\t// If no vertical index is specified and the upcoming slide is a\n\t\t// stack, resume at its previous vertical index\n\t\tif( v === undefined && !overview.isActive() ) {\n\t\t\tv = getPreviousVerticalIndex( horizontalSlides[ h ] );\n\t\t}\n\n\t\t// If we were on a vertical stack, remember what vertical index\n\t\t// it was on so we can resume at the same position when returning\n\t\tif( previousSlide && previousSlide.parentNode && previousSlide.parentNode.classList.contains( 'stack' ) ) {\n\t\t\tsetPreviousVerticalIndex( previousSlide.parentNode, indexv );\n\t\t}\n\n\t\t// Remember the state before this slide\n\t\tconst stateBefore = state.concat();\n\n\t\t// Reset the state array\n\t\tstate.length = 0;\n\n\t\tlet indexhBefore = indexh || 0,\n\t\t\tindexvBefore = indexv || 0;\n\n\t\t// Activate and transition to the new slide\n\t\tindexh = updateSlides( HORIZONTAL_SLIDES_SELECTOR, h === undefined ? indexh : h );\n\t\tindexv = updateSlides( VERTICAL_SLIDES_SELECTOR, v === undefined ? indexv : v );\n\n\t\t// Dispatch an event if the slide changed\n\t\tlet slideChanged = ( indexh !== indexhBefore || indexv !== indexvBefore );\n\n\t\t// Ensure that the previous slide is never the same as the current\n\t\tif( !slideChanged ) previousSlide = null;\n\n\t\t// Find the current horizontal slide and any possible vertical slides\n\t\t// within it\n\t\tlet currentHorizontalSlide = horizontalSlides[ indexh ],\n\t\t\tcurrentVerticalSlides = currentHorizontalSlide.querySelectorAll( 'section' );\n\n\t\t// Store references to the previous and current slides\n\t\tcurrentSlide = currentVerticalSlides[ indexv ] || currentHorizontalSlide;\n\n\t\tlet autoAnimateTransition = false;\n\n\t\t// Detect if we're moving between two auto-animated slides\n\t\tif( slideChanged && previousSlide && currentSlide && !overview.isActive() ) {\n\n\t\t\t// If this is an auto-animated transition, we disable the\n\t\t\t// regular slide transition\n\t\t\t//\n\t\t\t// Note 20-03-2020:\n\t\t\t// This needs to happen before we update slide visibility,\n\t\t\t// otherwise transitions will still run in Safari.\n\t\t\tif( previousSlide.hasAttribute( 'data-auto-animate' ) && currentSlide.hasAttribute( 'data-auto-animate' )\n\t\t\t\t\t&& previousSlide.getAttribute( 'data-auto-animate-id' ) === currentSlide.getAttribute( 'data-auto-animate-id' )\n\t\t\t\t\t&& !( ( indexh > indexhBefore || indexv > indexvBefore ) ? currentSlide : previousSlide ).hasAttribute( 'data-auto-animate-restart' ) ) {\n\n\t\t\t\tautoAnimateTransition = true;\n\t\t\t\tdom.slides.classList.add( 'disable-slide-transitions' );\n\t\t\t}\n\n\t\t\ttransition = 'running';\n\n\t\t}\n\n\t\t// Update the visibility of slides now that the indices have changed\n\t\tupdateSlidesVisibility();\n\n\t\tlayout();\n\n\t\t// Update the overview if it's currently active\n\t\tif( overview.isActive() ) {\n\t\t\toverview.update();\n\t\t}\n\n\t\t// Show fragment, if specified\n\t\tif( typeof f !== 'undefined' ) {\n\t\t\tfragments.goto( f );\n\t\t}\n\n\t\t// Solves an edge case where the previous slide maintains the\n\t\t// 'present' class when navigating between adjacent vertical\n\t\t// stacks\n\t\tif( previousSlide && previousSlide !== currentSlide ) {\n\t\t\tpreviousSlide.classList.remove( 'present' );\n\t\t\tpreviousSlide.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t// Reset all slides upon navigate to home\n\t\t\tif( isFirstSlide() ) {\n\t\t\t\t// Launch async task\n\t\t\t\tsetTimeout( () => {\n\t\t\t\t\tgetVerticalStacks().forEach( slide => {\n\t\t\t\t\t\tsetPreviousVerticalIndex( slide, 0 );\n\t\t\t\t\t} );\n\t\t\t\t}, 0 );\n\t\t\t}\n\t\t}\n\n\t\t// Apply the new state\n\t\tstateLoop: for( let i = 0, len = state.length; i < len; i++ ) {\n\t\t\t// Check if this state existed on the previous slide. If it\n\t\t\t// did, we will avoid adding it repeatedly\n\t\t\tfor( let j = 0; j < stateBefore.length; j++ ) {\n\t\t\t\tif( stateBefore[j] === state[i] ) {\n\t\t\t\t\tstateBefore.splice( j, 1 );\n\t\t\t\t\tcontinue stateLoop;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdom.viewport.classList.add( state[i] );\n\n\t\t\t// Dispatch custom event matching the state's name\n\t\t\tdispatchEvent({ type: state[i] });\n\t\t}\n\n\t\t// Clean up the remains of the previous state\n\t\twhile( stateBefore.length ) {\n\t\t\tdom.viewport.classList.remove( stateBefore.pop() );\n\t\t}\n\n\t\tif( slideChanged ) {\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'slidechanged',\n\t\t\t\tdata: {\n\t\t\t\t\tindexh,\n\t\t\t\t\tindexv,\n\t\t\t\t\tpreviousSlide,\n\t\t\t\t\tcurrentSlide,\n\t\t\t\t\torigin\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Handle embedded content\n\t\tif( slideChanged || !previousSlide ) {\n\t\t\tslideContent.stopEmbeddedContent( previousSlide );\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\t// Announce the current slide contents to screen readers\n\t\t// Use animation frame to prevent getComputedStyle in getStatusText\n\t\t// from triggering layout mid-frame\n\t\trequestAnimationFrame( () => {\n\t\t\tannounceStatus( getStatusText( currentSlide ) );\n\t\t});\n\n\t\tprogress.update();\n\t\tcontrols.update();\n\t\tnotes.update();\n\t\tbackgrounds.update();\n\t\tbackgrounds.updateParallax();\n\t\tslideNumber.update();\n\t\tfragments.update();\n\n\t\t// Update the URL hash\n\t\tlocation.writeURL();\n\n\t\tcueAutoSlide();\n\n\t\t// Auto-animation\n\t\tif( autoAnimateTransition ) {\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tdom.slides.classList.remove( 'disable-slide-transitions' );\n\t\t\t}, 0 );\n\n\t\t\tif( config.autoAnimate ) {\n\t\t\t\t// Run the auto-animation between our slides\n\t\t\t\tautoAnimate.run( previousSlide, currentSlide );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Syncs the presentation with the current DOM. Useful\n\t * when new slides or control elements are added or when\n\t * the configuration has changed.\n\t */\n\tfunction sync() {\n\n\t\t// Subscribe to input\n\t\tremoveEventListeners();\n\t\taddEventListeners();\n\n\t\t// Force a layout to make sure the current config is accounted for\n\t\tlayout();\n\n\t\t// Reflect the current autoSlide value\n\t\tautoSlide = config.autoSlide;\n\n\t\t// Start auto-sliding if it's enabled\n\t\tcueAutoSlide();\n\n\t\t// Re-create all slide backgrounds\n\t\tbackgrounds.create();\n\n\t\t// Write the current hash to the URL\n\t\tlocation.writeURL();\n\n\t\tif( config.sortFragmentsOnSync === true ) {\n\t\t\tfragments.sortAll();\n\t\t}\n\n\t\tcontrols.update();\n\t\tprogress.update();\n\n\t\tupdateSlidesVisibility();\n\n\t\tnotes.update();\n\t\tnotes.updateVisibility();\n\t\tbackgrounds.update( true );\n\t\tslideNumber.update();\n\t\tslideContent.formatEmbeddedContent();\n\n\t\t// Start or stop embedded content depending on global config\n\t\tif( config.autoPlayMedia === false ) {\n\t\t\tslideContent.stopEmbeddedContent( currentSlide, { unloadIframes: false } );\n\t\t}\n\t\telse {\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\tif( overview.isActive() ) {\n\t\t\toverview.layout();\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates reveal.js to keep in sync with new slide attributes. For\n\t * example, if you add a new `data-background-image` you can call\n\t * this to have reveal.js render the new background image.\n\t *\n\t * Similar to #sync() but more efficient when you only need to\n\t * refresh a specific slide.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tfunction syncSlide( slide = currentSlide ) {\n\n\t\tbackgrounds.sync( slide );\n\t\tfragments.sync( slide );\n\n\t\tslideContent.load( slide );\n\n\t\tbackgrounds.update();\n\t\tnotes.update();\n\n\t}\n\n\t/**\n\t * Resets all vertical slides so that only the first\n\t * is visible.\n\t */\n\tfunction resetVerticalSlides() {\n\n\t\tgetHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tUtil.queryAll( horizontalSlide, 'section' ).forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tif( y > 0 ) {\n\t\t\t\t\tverticalSlide.classList.remove( 'present' );\n\t\t\t\t\tverticalSlide.classList.remove( 'past' );\n\t\t\t\t\tverticalSlide.classList.add( 'future' );\n\t\t\t\t\tverticalSlide.setAttribute( 'aria-hidden', 'true' );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Randomly shuffles all slides in the deck.\n\t */\n\tfunction shuffle( slides = getHorizontalSlides() ) {\n\n\t\tslides.forEach( ( slide, i ) => {\n\n\t\t\t// Insert the slide next to a randomly picked sibling slide\n\t\t\t// slide. This may cause the slide to insert before itself,\n\t\t\t// but that's not an issue.\n\t\t\tlet beforeSlide = slides[ Math.floor( Math.random() * slides.length ) ];\n\t\t\tif( beforeSlide.parentNode === slide.parentNode ) {\n\t\t\t\tslide.parentNode.insertBefore( slide, beforeSlide );\n\t\t\t}\n\n\t\t\t// Randomize the order of vertical slides (if there are any)\n\t\t\tlet verticalSlides = slide.querySelectorAll( 'section' );\n\t\t\tif( verticalSlides.length ) {\n\t\t\t\tshuffle( verticalSlides );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates one dimension of slides by showing the slide\n\t * with the specified index.\n\t *\n\t * @param {string} selector A CSS selector that will fetch\n\t * the group of slides we are working with\n\t * @param {number} index The index of the slide that should be\n\t * shown\n\t *\n\t * @return {number} The index of the slide that is now shown,\n\t * might differ from the passed in index if it was out of\n\t * bounds.\n\t */\n\tfunction updateSlides( selector, index ) {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet slides = Util.queryAll( dom.wrapper, selector ),\n\t\t\tslidesLength = slides.length;\n\n\t\tlet printMode = print.isPrintingPDF();\n\t\tlet loopedForwards = false;\n\t\tlet loopedBackwards = false;\n\n\t\tif( slidesLength ) {\n\n\t\t\t// Should the index loop?\n\t\t\tif( config.loop ) {\n\t\t\t\tif( index >= slidesLength ) loopedForwards = true;\n\n\t\t\t\tindex %= slidesLength;\n\n\t\t\t\tif( index < 0 ) {\n\t\t\t\t\tindex = slidesLength + index;\n\t\t\t\t\tloopedBackwards = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Enforce max and minimum index bounds\n\t\t\tindex = Math.max( Math.min( index, slidesLength - 1 ), 0 );\n\n\t\t\tfor( let i = 0; i < slidesLength; i++ ) {\n\t\t\t\tlet element = slides[i];\n\n\t\t\t\tlet reverse = config.rtl && !isVerticalSlide( element );\n\n\t\t\t\t// Avoid .remove() with multiple args for IE11 support\n\t\t\t\telement.classList.remove( 'past' );\n\t\t\t\telement.classList.remove( 'present' );\n\t\t\t\telement.classList.remove( 'future' );\n\n\t\t\t\t// http://www.w3.org/html/wg/drafts/html/master/editing.html#the-hidden-attribute\n\t\t\t\telement.setAttribute( 'hidden', '' );\n\t\t\t\telement.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t\t// If this element contains vertical slides\n\t\t\t\tif( element.querySelector( 'section' ) ) {\n\t\t\t\t\telement.classList.add( 'stack' );\n\t\t\t\t}\n\n\t\t\t\t// If we're printing static slides, all slides are \"present\"\n\t\t\t\tif( printMode ) {\n\t\t\t\t\telement.classList.add( 'present' );\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif( i < index ) {\n\t\t\t\t\t// Any element previous to index is given the 'past' class\n\t\t\t\t\telement.classList.add( reverse ? 'future' : 'past' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Show all fragments in prior slides\n\t\t\t\t\t\tshowFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( i > index ) {\n\t\t\t\t\t// Any element subsequent to index is given the 'future' class\n\t\t\t\t\telement.classList.add( reverse ? 'past' : 'future' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Hide all fragments in future slides\n\t\t\t\t\t\thideFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Update the visibility of fragments when a presentation loops\n\t\t\t\t// in either direction\n\t\t\t\telse if( i === index && config.fragments ) {\n\t\t\t\t\tif( loopedForwards ) {\n\t\t\t\t\t\thideFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t\telse if( loopedBackwards ) {\n\t\t\t\t\t\tshowFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet slide = slides[index];\n\t\t\tlet wasPresent = slide.classList.contains( 'present' );\n\n\t\t\t// Mark the current slide as present\n\t\t\tslide.classList.add( 'present' );\n\t\t\tslide.removeAttribute( 'hidden' );\n\t\t\tslide.removeAttribute( 'aria-hidden' );\n\n\t\t\tif( !wasPresent ) {\n\t\t\t\t// Dispatch an event indicating the slide is now visible\n\t\t\t\tdispatchEvent({\n\t\t\t\t\ttarget: slide,\n\t\t\t\t\ttype: 'visible',\n\t\t\t\t\tbubbles: false\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If this slide has a state associated with it, add it\n\t\t\t// onto the current state of the deck\n\t\t\tlet slideState = slide.getAttribute( 'data-state' );\n\t\t\tif( slideState ) {\n\t\t\t\tstate = state.concat( slideState.split( ' ' ) );\n\t\t\t}\n\n\t\t}\n\t\telse {\n\t\t\t// Since there are no slides we can't be anywhere beyond the\n\t\t\t// zeroth index\n\t\t\tindex = 0;\n\t\t}\n\n\t\treturn index;\n\n\t}\n\n\t/**\n\t * Shows all fragment elements within the given contaienr.\n\t */\n\tfunction showFragmentsIn( container ) {\n\n\t\tUtil.queryAll( container, '.fragment' ).forEach( fragment => {\n\t\t\tfragment.classList.add( 'visible' );\n\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Hides all fragment elements within the given contaienr.\n\t */\n\tfunction hideFragmentsIn( container ) {\n\n\t\tUtil.queryAll( container, '.fragment.visible' ).forEach( fragment => {\n\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Optimization method; hide all slides that are far away\n\t * from the present slide.\n\t */\n\tfunction updateSlidesVisibility() {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet horizontalSlides = getHorizontalSlides(),\n\t\t\thorizontalSlidesLength = horizontalSlides.length,\n\t\t\tdistanceX,\n\t\t\tdistanceY;\n\n\t\tif( horizontalSlidesLength && typeof indexh !== 'undefined' ) {\n\n\t\t\t// The number of steps away from the present slide that will\n\t\t\t// be visible\n\t\t\tlet viewDistance = overview.isActive() ? 10 : config.viewDistance;\n\n\t\t\t// Shorten the view distance on devices that typically have\n\t\t\t// less resources\n\t\t\tif( Device.isMobile ) {\n\t\t\t\tviewDistance = overview.isActive() ? 6 : config.mobileViewDistance;\n\t\t\t}\n\n\t\t\t// All slides need to be visible when exporting to PDF\n\t\t\tif( print.isPrintingPDF() ) {\n\t\t\t\tviewDistance = Number.MAX_VALUE;\n\t\t\t}\n\n\t\t\tfor( let x = 0; x < horizontalSlidesLength; x++ ) {\n\t\t\t\tlet horizontalSlide = horizontalSlides[x];\n\n\t\t\t\tlet verticalSlides = Util.queryAll( horizontalSlide, 'section' ),\n\t\t\t\t\tverticalSlidesLength = verticalSlides.length;\n\n\t\t\t\t// Determine how far away this slide is from the present\n\t\t\t\tdistanceX = Math.abs( ( indexh || 0 ) - x ) || 0;\n\n\t\t\t\t// If the presentation is looped, distance should measure\n\t\t\t\t// 1 between the first and last slides\n\t\t\t\tif( config.loop ) {\n\t\t\t\t\tdistanceX = Math.abs( ( ( indexh || 0 ) - x ) % ( horizontalSlidesLength - viewDistance ) ) || 0;\n\t\t\t\t}\n\n\t\t\t\t// Show the horizontal slide if it's within the view distance\n\t\t\t\tif( distanceX < viewDistance ) {\n\t\t\t\t\tslideContent.load( horizontalSlide );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslideContent.unload( horizontalSlide );\n\t\t\t\t}\n\n\t\t\t\tif( verticalSlidesLength ) {\n\n\t\t\t\t\tlet oy = getPreviousVerticalIndex( horizontalSlide );\n\n\t\t\t\t\tfor( let y = 0; y < verticalSlidesLength; y++ ) {\n\t\t\t\t\t\tlet verticalSlide = verticalSlides[y];\n\n\t\t\t\t\t\tdistanceY = x === ( indexh || 0 ) ? Math.abs( ( indexv || 0 ) - y ) : Math.abs( y - oy );\n\n\t\t\t\t\t\tif( distanceX + distanceY < viewDistance ) {\n\t\t\t\t\t\t\tslideContent.load( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslideContent.unload( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Flag if there are ANY vertical slides, anywhere in the deck\n\t\t\tif( hasVerticalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-vertical-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-vertical-slides' );\n\t\t\t}\n\n\t\t\t// Flag if there are ANY horizontal slides, anywhere in the deck\n\t\t\tif( hasHorizontalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-horizontal-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-horizontal-slides' );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Determine what available routes there are for navigation.\n\t *\n\t * @return {{left: boolean, right: boolean, up: boolean, down: boolean}}\n\t */\n\tfunction availableRoutes({ includeFragments = false } = {}) {\n\n\t\tlet horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ),\n\t\t\tverticalSlides = dom.wrapper.querySelectorAll( VERTICAL_SLIDES_SELECTOR );\n\n\t\tlet routes = {\n\t\t\tleft: indexh > 0,\n\t\t\tright: indexh < horizontalSlides.length - 1,\n\t\t\tup: indexv > 0,\n\t\t\tdown: indexv < verticalSlides.length - 1\n\t\t};\n\n\t\t// Looped presentations can always be navigated as long as\n\t\t// there are slides available\n\t\tif( config.loop ) {\n\t\t\tif( horizontalSlides.length > 1 ) {\n\t\t\t\troutes.left = true;\n\t\t\t\troutes.right = true;\n\t\t\t}\n\n\t\t\tif( verticalSlides.length > 1 ) {\n\t\t\t\troutes.up = true;\n\t\t\t\troutes.down = true;\n\t\t\t}\n\t\t}\n\n\t\tif ( horizontalSlides.length > 1 && config.navigationMode === 'linear' ) {\n\t\t\troutes.right = routes.right || routes.down;\n\t\t\troutes.left = routes.left || routes.up;\n\t\t}\n\n\t\t// If includeFragments is set, a route will be considered\n\t\t// available if either a slid OR fragment is available in\n\t\t// the given direction\n\t\tif( includeFragments === true ) {\n\t\t\tlet fragmentRoutes = fragments.availableRoutes();\n\t\t\troutes.left = routes.left || fragmentRoutes.prev;\n\t\t\troutes.up = routes.up || fragmentRoutes.prev;\n\t\t\troutes.down = routes.down || fragmentRoutes.next;\n\t\t\troutes.right = routes.right || fragmentRoutes.next;\n\t\t}\n\n\t\t// Reverse horizontal controls for rtl\n\t\tif( config.rtl ) {\n\t\t\tlet left = routes.left;\n\t\t\troutes.left = routes.right;\n\t\t\troutes.right = left;\n\t\t}\n\n\t\treturn routes;\n\n\t}\n\n\t/**\n\t * Returns the number of past slides. This can be used as a global\n\t * flattened index for slides.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide we're counting before\n\t *\n\t * @return {number} Past slide count\n\t */\n\tfunction getSlidePastCount( slide = currentSlide ) {\n\n\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t// The number of past slides\n\t\tlet pastCount = 0;\n\n\t\t// Step through all slides and count the past ones\n\t\tmainLoop: for( let i = 0; i < horizontalSlides.length; i++ ) {\n\n\t\t\tlet horizontalSlide = horizontalSlides[i];\n\t\t\tlet verticalSlides = horizontalSlide.querySelectorAll( 'section' );\n\n\t\t\tfor( let j = 0; j < verticalSlides.length; j++ ) {\n\n\t\t\t\t// Stop as soon as we arrive at the present\n\t\t\t\tif( verticalSlides[j] === slide ) {\n\t\t\t\t\tbreak mainLoop;\n\t\t\t\t}\n\n\t\t\t\t// Don't count slides with the \"uncounted\" class\n\t\t\t\tif( verticalSlides[j].dataset.visibility !== 'uncounted' ) {\n\t\t\t\t\tpastCount++;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Stop as soon as we arrive at the present\n\t\t\tif( horizontalSlide === slide ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Don't count the wrapping section for vertical slides and\n\t\t\t// slides marked as uncounted\n\t\t\tif( horizontalSlide.classList.contains( 'stack' ) === false && horizontalSlide.dataset.visibility !== 'uncounted' ) {\n\t\t\t\tpastCount++;\n\t\t\t}\n\n\t\t}\n\n\t\treturn pastCount;\n\n\t}\n\n\t/**\n\t * Returns a value ranging from 0-1 that represents\n\t * how far into the presentation we have navigated.\n\t *\n\t * @return {number}\n\t */\n\tfunction getProgress() {\n\n\t\t// The number of past and total slides\n\t\tlet totalCount = getTotalSlides();\n\t\tlet pastCount = getSlidePastCount();\n\n\t\tif( currentSlide ) {\n\n\t\t\tlet allFragments = currentSlide.querySelectorAll( '.fragment' );\n\n\t\t\t// If there are fragments in the current slide those should be\n\t\t\t// accounted for in the progress.\n\t\t\tif( allFragments.length > 0 ) {\n\t\t\t\tlet visibleFragments = currentSlide.querySelectorAll( '.fragment.visible' );\n\n\t\t\t\t// This value represents how big a portion of the slide progress\n\t\t\t\t// that is made up by its fragments (0-1)\n\t\t\t\tlet fragmentWeight = 0.9;\n\n\t\t\t\t// Add fragment progress to the past slide count\n\t\t\t\tpastCount += ( visibleFragments.length / allFragments.length ) * fragmentWeight;\n\t\t\t}\n\n\t\t}\n\n\t\treturn Math.min( pastCount / ( totalCount - 1 ), 1 );\n\n\t}\n\n\t/**\n\t * Retrieves the h/v location and fragment of the current,\n\t * or specified, slide.\n\t *\n\t * @param {HTMLElement} [slide] If specified, the returned\n\t * index will be for this slide rather than the currently\n\t * active one\n\t *\n\t * @return {{h: number, v: number, f: number}}\n\t */\n\tfunction getIndices( slide ) {\n\n\t\t// By default, return the current indices\n\t\tlet h = indexh,\n\t\t\tv = indexv,\n\t\t\tf;\n\n\t\t// If a slide is specified, return the indices of that slide\n\t\tif( slide ) {\n\t\t\tlet isVertical = isVerticalSlide( slide );\n\t\t\tlet slideh = isVertical ? slide.parentNode : slide;\n\n\t\t\t// Select all horizontal slides\n\t\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t\t// Now that we know which the horizontal slide is, get its index\n\t\t\th = Math.max( horizontalSlides.indexOf( slideh ), 0 );\n\n\t\t\t// Assume we're not vertical\n\t\t\tv = undefined;\n\n\t\t\t// If this is a vertical slide, grab the vertical index\n\t\t\tif( isVertical ) {\n\t\t\t\tv = Math.max( Util.queryAll( slide.parentNode, 'section' ).indexOf( slide ), 0 );\n\t\t\t}\n\t\t}\n\n\t\tif( !slide && currentSlide ) {\n\t\t\tlet hasFragments = currentSlide.querySelectorAll( '.fragment' ).length > 0;\n\t\t\tif( hasFragments ) {\n\t\t\t\tlet currentFragment = currentSlide.querySelector( '.current-fragment' );\n\t\t\t\tif( currentFragment && currentFragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\tf = parseInt( currentFragment.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tf = currentSlide.querySelectorAll( '.fragment.visible' ).length - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { h, v, f };\n\n\t}\n\n\t/**\n\t * Retrieves all slides in this presentation.\n\t */\n\tfunction getSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, SLIDES_SELECTOR + ':not(.stack):not([data-visibility=\"uncounted\"])' );\n\n\t}\n\n\t/**\n\t * Returns a list of all horizontal slides in the deck. Each\n\t * vertical stack is included as one horizontal slide in the\n\t * resulting array.\n\t */\n\tfunction getHorizontalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR );\n\n\t}\n\n\t/**\n\t * Returns all vertical slides that exist within this deck.\n\t */\n\tfunction getVerticalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, '.slides>section>section' );\n\n\t}\n\n\t/**\n\t * Returns all vertical stacks (each stack can contain multiple slides).\n\t */\n\tfunction getVerticalStacks() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.stack');\n\n\t}\n\n\t/**\n\t * Returns true if there are at least two horizontal slides.\n\t */\n\tfunction hasHorizontalSlides() {\n\n\t\treturn getHorizontalSlides().length > 1;\n\t}\n\n\t/**\n\t * Returns true if there are at least two vertical slides.\n\t */\n\tfunction hasVerticalSlides() {\n\n\t\treturn getVerticalSlides().length > 1;\n\n\t}\n\n\t/**\n\t * Returns an array of objects where each object represents the\n\t * attributes on its respective slide.\n\t */\n\tfunction getSlidesAttributes() {\n\n\t\treturn getSlides().map( slide => {\n\n\t\t\tlet attributes = {};\n\t\t\tfor( let i = 0; i < slide.attributes.length; i++ ) {\n\t\t\t\tlet attribute = slide.attributes[ i ];\n\t\t\t\tattributes[ attribute.name ] = attribute.value;\n\t\t\t}\n\t\t\treturn attributes;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Retrieves the total number of slides in this presentation.\n\t *\n\t * @return {number}\n\t */\n\tfunction getTotalSlides() {\n\n\t\treturn getSlides().length;\n\n\t}\n\n\t/**\n\t * Returns the slide element matching the specified index.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction getSlide( x, y ) {\n\n\t\tlet horizontalSlide = getHorizontalSlides()[ x ];\n\t\tlet verticalSlides = horizontalSlide && horizontalSlide.querySelectorAll( 'section' );\n\n\t\tif( verticalSlides && verticalSlides.length && typeof y === 'number' ) {\n\t\t\treturn verticalSlides ? verticalSlides[ y ] : undefined;\n\t\t}\n\n\t\treturn horizontalSlide;\n\n\t}\n\n\t/**\n\t * Returns the background element for the given slide.\n\t * All slides, even the ones with no background properties\n\t * defined, have a background element so as long as the\n\t * index is valid an element will be returned.\n\t *\n\t * @param {mixed} x Horizontal background index OR a slide\n\t * HTML element\n\t * @param {number} y Vertical background index\n\t * @return {(HTMLElement[]|*)}\n\t */\n\tfunction getSlideBackground( x, y ) {\n\n\t\tlet slide = typeof x === 'number' ? getSlide( x, y ) : x;\n\t\tif( slide ) {\n\t\t\treturn slide.slideBackgroundElement;\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\t/**\n\t * Retrieves the current state of the presentation as\n\t * an object. This state can then be restored at any\n\t * time.\n\t *\n\t * @return {{indexh: number, indexv: number, indexf: number, paused: boolean, overview: boolean}}\n\t */\n\tfunction getState() {\n\n\t\tlet indices = getIndices();\n\n\t\treturn {\n\t\t\tindexh: indices.h,\n\t\t\tindexv: indices.v,\n\t\t\tindexf: indices.f,\n\t\t\tpaused: isPaused(),\n\t\t\toverview: overview.isActive()\n\t\t};\n\n\t}\n\n\t/**\n\t * Restores the presentation to the given state.\n\t *\n\t * @param {object} state As generated by getState()\n\t * @see {@link getState} generates the parameter `state`\n\t */\n\tfunction setState( state ) {\n\n\t\tif( typeof state === 'object' ) {\n\t\t\tslide( Util.deserialize( state.indexh ), Util.deserialize( state.indexv ), Util.deserialize( state.indexf ) );\n\n\t\t\tlet pausedFlag = Util.deserialize( state.paused ),\n\t\t\t\toverviewFlag = Util.deserialize( state.overview );\n\n\t\t\tif( typeof pausedFlag === 'boolean' && pausedFlag !== isPaused() ) {\n\t\t\t\ttogglePause( pausedFlag );\n\t\t\t}\n\n\t\t\tif( typeof overviewFlag === 'boolean' && overviewFlag !== overview.isActive() ) {\n\t\t\t\toverview.toggle( overviewFlag );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Cues a new automated slide if enabled in the config.\n\t */\n\tfunction cueAutoSlide() {\n\n\t\tcancelAutoSlide();\n\n\t\tif( currentSlide && config.autoSlide !== false ) {\n\n\t\t\tlet fragment = currentSlide.querySelector( '.current-fragment' );\n\n\t\t\tlet fragmentAutoSlide = fragment ? fragment.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet parentAutoSlide = currentSlide.parentNode ? currentSlide.parentNode.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet slideAutoSlide = currentSlide.getAttribute( 'data-autoslide' );\n\n\t\t\t// Pick value in the following priority order:\n\t\t\t// 1. Current fragment's data-autoslide\n\t\t\t// 2. Current slide's data-autoslide\n\t\t\t// 3. Parent slide's data-autoslide\n\t\t\t// 4. Global autoSlide setting\n\t\t\tif( fragmentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( fragmentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( slideAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( slideAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( parentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( parentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tautoSlide = config.autoSlide;\n\n\t\t\t\t// If there are media elements with data-autoplay,\n\t\t\t\t// automatically set the autoSlide duration to the\n\t\t\t\t// length of that media. Not applicable if the slide\n\t\t\t\t// is divided up into fragments.\n\t\t\t\t// playbackRate is accounted for in the duration.\n\t\t\t\tif( currentSlide.querySelectorAll( '.fragment' ).length === 0 ) {\n\t\t\t\t\tUtil.queryAll( currentSlide, 'video, audio' ).forEach( el => {\n\t\t\t\t\t\tif( el.hasAttribute( 'data-autoplay' ) ) {\n\t\t\t\t\t\t\tif( autoSlide && (el.duration * 1000 / el.playbackRate ) > autoSlide ) {\n\t\t\t\t\t\t\t\tautoSlide = ( el.duration * 1000 / el.playbackRate ) + 1000;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Cue the next auto-slide if:\n\t\t\t// - There is an autoSlide value\n\t\t\t// - Auto-sliding isn't paused by the user\n\t\t\t// - The presentation isn't paused\n\t\t\t// - The overview isn't active\n\t\t\t// - The presentation isn't over\n\t\t\tif( autoSlide && !autoSlidePaused && !isPaused() && !overview.isActive() && ( !isLastSlide() || fragments.availableRoutes().next || config.loop === true ) ) {\n\t\t\t\tautoSlideTimeout = setTimeout( () => {\n\t\t\t\t\tif( typeof config.autoSlideMethod === 'function' ) {\n\t\t\t\t\t\tconfig.autoSlideMethod()\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnavigateNext();\n\t\t\t\t\t}\n\t\t\t\t\tcueAutoSlide();\n\t\t\t\t}, autoSlide );\n\t\t\t\tautoSlideStartTime = Date.now();\n\t\t\t}\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( autoSlideTimeout !== -1 );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Cancels any ongoing request to auto-slide.\n\t */\n\tfunction cancelAutoSlide() {\n\n\t\tclearTimeout( autoSlideTimeout );\n\t\tautoSlideTimeout = -1;\n\n\t}\n\n\tfunction pauseAutoSlide() {\n\n\t\tif( autoSlide && !autoSlidePaused ) {\n\t\t\tautoSlidePaused = true;\n\t\t\tdispatchEvent({ type: 'autoslidepaused' });\n\t\t\tclearTimeout( autoSlideTimeout );\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( false );\n\t\t\t}\n\t\t}\n\n\t}\n\n\tfunction resumeAutoSlide() {\n\n\t\tif( autoSlide && autoSlidePaused ) {\n\t\t\tautoSlidePaused = false;\n\t\t\tdispatchEvent({ type: 'autoslideresumed' });\n\t\t\tcueAutoSlide();\n\t\t}\n\n\t}\n\n\tfunction navigateLeft({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().left ) {\n\t\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().left ) {\n\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateRight({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().right ) {\n\t\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().right ) {\n\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateUp({skipFragments=false}={}) {\n\n\t\t// Prioritize hiding fragments\n\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().up ) {\n\t\t\tslide( indexh, indexv - 1 );\n\t\t}\n\n\t}\n\n\tfunction navigateDown({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Prioritize revealing fragments\n\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().down ) {\n\t\t\tslide( indexh, indexv + 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Navigates backwards, prioritized in the following order:\n\t * 1) Previous fragment\n\t * 2) Previous vertical slide\n\t * 3) Previous horizontal slide\n\t */\n\tfunction navigatePrev({skipFragments=false}={}) {\n\n\t\t// Prioritize revealing fragments\n\t\tif( skipFragments || fragments.prev() === false ) {\n\t\t\tif( availableRoutes().up ) {\n\t\t\t\tnavigateUp({skipFragments});\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Fetch the previous horizontal slide, if there is one\n\t\t\t\tlet previousSlide;\n\n\t\t\t\tif( config.rtl ) {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.future' ).pop();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.past' ).pop();\n\t\t\t\t}\n\n\t\t\t\t// When going backwards and arriving on a stack we start\n\t\t\t\t// at the bottom of the stack\n\t\t\t\tif( previousSlide && previousSlide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tlet v = ( previousSlide.querySelectorAll( 'section' ).length - 1 ) || undefined;\n\t\t\t\t\tlet h = indexh - 1;\n\t\t\t\t\tslide( h, v );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnavigateLeft({skipFragments});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * The reverse of #navigatePrev().\n\t */\n\tfunction navigateNext({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Prioritize revealing fragments\n\t\tif( skipFragments || fragments.next() === false ) {\n\n\t\t\tlet routes = availableRoutes();\n\n\t\t\t// When looping is enabled `routes.down` is always available\n\t\t\t// so we need a separate check for when we've reached the\n\t\t\t// end of a stack and should move horizontally\n\t\t\tif( routes.down && routes.right && config.loop && isLastVerticalSlide() ) {\n\t\t\t\troutes.down = false;\n\t\t\t}\n\n\t\t\tif( routes.down ) {\n\t\t\t\tnavigateDown({skipFragments});\n\t\t\t}\n\t\t\telse if( config.rtl ) {\n\t\t\t\tnavigateLeft({skipFragments});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnavigateRight({skipFragments});\n\t\t\t}\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ----------------------------- EVENTS -------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t/**\n\t * Called by all event handlers that are based on user\n\t * input.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onUserInput( event ) {\n\n\t\tif( config.autoSlideStoppable ) {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t* Listener for post message events posted to this window.\n\t*/\n\tfunction onPostMessage( event ) {\n\n\t\tlet data = event.data;\n\n\t\t// Make sure we're dealing with JSON\n\t\tif( typeof data === 'string' && data.charAt( 0 ) === '{' && data.charAt( data.length - 1 ) === '}' ) {\n\t\t\tdata = JSON.parse( data );\n\n\t\t\t// Check if the requested method can be found\n\t\t\tif( data.method && typeof Reveal[data.method] === 'function' ) {\n\n\t\t\t\tif( POST_MESSAGE_METHOD_BLACKLIST.test( data.method ) === false ) {\n\n\t\t\t\t\tconst result = Reveal[data.method].apply( Reveal, data.args );\n\n\t\t\t\t\t// Dispatch a postMessage event with the returned value from\n\t\t\t\t\t// our method invocation for getter functions\n\t\t\t\t\tdispatchPostMessage( 'callback', { method: data.method, result: result } );\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconsole.warn( 'reveal.js: \"'+ data.method +'\" is is blacklisted from the postMessage API' );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Event listener for transition end on the current slide.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onTransitionEnd( event ) {\n\n\t\tif( transition === 'running' && /section/gi.test( event.target.nodeName ) ) {\n\t\t\ttransition = 'idle';\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'slidetransitionend',\n\t\t\t\tdata: { indexh, indexv, previousSlide, currentSlide }\n\t\t\t});\n\t\t}\n\n\t}\n\n\t/**\n\t * A global listener for all click events inside of the\n\t * .slides container.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onSlidesClicked( event ) {\n\n\t\tconst anchor = Util.closest( event.target, 'a[href^=\"#\"]' );\n\n\t\t// If a hash link is clicked, we find the target slide\n\t\t// and navigate to it. We previously relied on 'hashchange'\n\t\t// for links like these but that prevented media with\n\t\t// audio tracks from playing in mobile browsers since it\n\t\t// wasn't considered a direct interaction with the document.\n\t\tif( anchor ) {\n\t\t\tconst hash = anchor.getAttribute( 'href' );\n\t\t\tconst indices = location.getIndicesFromHash( hash );\n\n\t\t\tif( indices ) {\n\t\t\t\tReveal.slide( indices.h, indices.v, indices.f );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the window level 'resize' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onWindowResize( event ) {\n\n\t\tlayout();\n\n\t}\n\n\t/**\n\t * Handle for the window level 'visibilitychange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onPageVisibilityChange( event ) {\n\n\t\t// If, after clicking a link or similar and we're coming back,\n\t\t// focus the document.body to ensure we can use keyboard shortcuts\n\t\tif( document.hidden === false && document.activeElement !== document.body ) {\n\t\t\t// Not all elements support .blur() - SVGs among them.\n\t\t\tif( typeof document.activeElement.blur === 'function' ) {\n\t\t\t\tdocument.activeElement.blur();\n\t\t\t}\n\t\t\tdocument.body.focus();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the document level 'fullscreenchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onFullscreenChange( event ) {\n\n\t\tlet element = document.fullscreenElement || document.webkitFullscreenElement;\n\t\tif( element === dom.wrapper ) {\n\t\t\tevent.stopImmediatePropagation();\n\n\t\t\t// Timeout to avoid layout shift in Safari\n\t\t\tsetTimeout( () => {\n\t\t\t\tReveal.layout();\n\t\t\t\tReveal.focus.focus(); // focus.focus :'(\n\t\t\t}, 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles clicks on links that are set to preview in the\n\t * iframe overlay.\n\t *\n\t * @param {object} event\n\t */\n\tfunction onPreviewLinkClicked( event ) {\n\n\t\tif( event.currentTarget && event.currentTarget.hasAttribute( 'href' ) ) {\n\t\t\tlet url = event.currentTarget.getAttribute( 'href' );\n\t\t\tif( url ) {\n\t\t\t\tshowPreview( url );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles click on the auto-sliding controls element.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onAutoSlidePlayerClick( event ) {\n\n\t\t// Replay\n\t\tif( isLastSlide() && config.loop === false ) {\n\t\t\tslide( 0, 0 );\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Resume\n\t\telse if( autoSlidePaused ) {\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Pause\n\t\telse {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ------------------------------- API --------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t// The public reveal.js API\n\tconst API = {\n\t\tVERSION,\n\n\t\tinitialize,\n\t\tconfigure,\n\t\tdestroy,\n\n\t\tsync,\n\t\tsyncSlide,\n\t\tsyncFragments: fragments.sync.bind( fragments ),\n\n\t\t// Navigation methods\n\t\tslide,\n\t\tleft: navigateLeft,\n\t\tright: navigateRight,\n\t\tup: navigateUp,\n\t\tdown: navigateDown,\n\t\tprev: navigatePrev,\n\t\tnext: navigateNext,\n\n\t\t// Navigation aliases\n\t\tnavigateLeft, navigateRight, navigateUp, navigateDown, navigatePrev, navigateNext,\n\n\t\t// Fragment methods\n\t\tnavigateFragment: fragments.goto.bind( fragments ),\n\t\tprevFragment: fragments.prev.bind( fragments ),\n\t\tnextFragment: fragments.next.bind( fragments ),\n\n\t\t// Event binding\n\t\ton,\n\t\toff,\n\n\t\t// Legacy event binding methods left in for backwards compatibility\n\t\taddEventListener: on,\n\t\tremoveEventListener: off,\n\n\t\t// Forces an update in slide layout\n\t\tlayout,\n\n\t\t// Randomizes the order of slides\n\t\tshuffle,\n\n\t\t// Returns an object with the available routes as booleans (left/right/top/bottom)\n\t\tavailableRoutes,\n\n\t\t// Returns an object with the available fragments as booleans (prev/next)\n\t\tavailableFragments: fragments.availableRoutes.bind( fragments ),\n\n\t\t// Toggles a help overlay with keyboard shortcuts\n\t\ttoggleHelp,\n\n\t\t// Toggles the overview mode on/off\n\t\ttoggleOverview: overview.toggle.bind( overview ),\n\n\t\t// Toggles the \"black screen\" mode on/off\n\t\ttogglePause,\n\n\t\t// Toggles the auto slide mode on/off\n\t\ttoggleAutoSlide,\n\n\t\t// Toggles visibility of the jump-to-slide UI\n\t\ttoggleJumpToSlide,\n\n\t\t// Slide navigation checks\n\t\tisFirstSlide,\n\t\tisLastSlide,\n\t\tisLastVerticalSlide,\n\t\tisVerticalSlide,\n\n\t\t// State checks\n\t\tisPaused,\n\t\tisAutoSliding,\n\t\tisSpeakerNotes: notes.isSpeakerNotesWindow.bind( notes ),\n\t\tisOverview: overview.isActive.bind( overview ),\n\t\tisFocused: focus.isFocused.bind( focus ),\n\t\tisPrintingPDF: print.isPrintingPDF.bind( print ),\n\n\t\t// Checks if reveal.js has been loaded and is ready for use\n\t\tisReady: () => ready,\n\n\t\t// Slide preloading\n\t\tloadSlide: slideContent.load.bind( slideContent ),\n\t\tunloadSlide: slideContent.unload.bind( slideContent ),\n\n\t\t// Preview management\n\t\tshowPreview,\n\t\thidePreview: closeOverlay,\n\n\t\t// Adds or removes all internal event listeners\n\t\taddEventListeners,\n\t\tremoveEventListeners,\n\t\tdispatchEvent,\n\n\t\t// Facility for persisting and restoring the presentation state\n\t\tgetState,\n\t\tsetState,\n\n\t\t// Presentation progress on range of 0-1\n\t\tgetProgress,\n\n\t\t// Returns the indices of the current, or specified, slide\n\t\tgetIndices,\n\n\t\t// Returns an Array of key:value maps of the attributes of each\n\t\t// slide in the deck\n\t\tgetSlidesAttributes,\n\n\t\t// Returns the number of slides that we have passed\n\t\tgetSlidePastCount,\n\n\t\t// Returns the total number of slides\n\t\tgetTotalSlides,\n\n\t\t// Returns the slide element at the specified index\n\t\tgetSlide,\n\n\t\t// Returns the previous slide element, may be null\n\t\tgetPreviousSlide: () => previousSlide,\n\n\t\t// Returns the current slide element\n\t\tgetCurrentSlide: () => currentSlide,\n\n\t\t// Returns the slide background element at the specified index\n\t\tgetSlideBackground,\n\n\t\t// Returns the speaker notes string for a slide, or null\n\t\tgetSlideNotes: notes.getSlideNotes.bind( notes ),\n\n\t\t// Returns an Array of all slides\n\t\tgetSlides,\n\n\t\t// Returns an array with all horizontal/vertical slides in the deck\n\t\tgetHorizontalSlides,\n\t\tgetVerticalSlides,\n\n\t\t// Checks if the presentation contains two or more horizontal\n\t\t// and vertical slides\n\t\thasHorizontalSlides,\n\t\thasVerticalSlides,\n\n\t\t// Checks if the deck has navigated on either axis at least once\n\t\thasNavigatedHorizontally: () => navigationHistory.hasNavigatedHorizontally,\n\t\thasNavigatedVertically: () => navigationHistory.hasNavigatedVertically,\n\n\t\t// Adds/removes a custom key binding\n\t\taddKeyBinding: keyboard.addKeyBinding.bind( keyboard ),\n\t\tremoveKeyBinding: keyboard.removeKeyBinding.bind( keyboard ),\n\n\t\t// Programmatically triggers a keyboard event\n\t\ttriggerKey: keyboard.triggerKey.bind( keyboard ),\n\n\t\t// Registers a new shortcut to include in the help overlay\n\t\tregisterKeyboardShortcut: keyboard.registerKeyboardShortcut.bind( keyboard ),\n\n\t\tgetComputedSlideSize,\n\n\t\t// Returns the current scale of the presentation content\n\t\tgetScale: () => scale,\n\n\t\t// Returns the current configuration object\n\t\tgetConfig: () => config,\n\n\t\t// Helper method, retrieves query string as a key:value map\n\t\tgetQueryHash: Util.getQueryHash,\n\n\t\t// Returns the path to the current slide as represented in the URL\n\t\tgetSlidePath: location.getHash.bind( location ),\n\n\t\t// Returns reveal.js DOM elements\n\t\tgetRevealElement: () => revealElement,\n\t\tgetSlidesElement: () => dom.slides,\n\t\tgetViewportElement: () => dom.viewport,\n\t\tgetBackgroundsElement: () => backgrounds.element,\n\n\t\t// API for registering and retrieving plugins\n\t\tregisterPlugin: plugins.registerPlugin.bind( plugins ),\n\t\thasPlugin: plugins.hasPlugin.bind( plugins ),\n\t\tgetPlugin: plugins.getPlugin.bind( plugins ),\n\t\tgetPlugins: plugins.getRegisteredPlugins.bind( plugins )\n\n\t};\n\n\t// Our internal API which controllers have access to\n\tUtil.extend( Reveal, {\n\t\t...API,\n\n\t\t// Methods for announcing content to screen readers\n\t\tannounceStatus,\n\t\tgetStatusText,\n\n\t\t// Controllers\n\t\tprint,\n\t\tfocus,\n\t\tprogress,\n\t\tcontrols,\n\t\tlocation,\n\t\toverview,\n\t\tfragments,\n\t\tslideContent,\n\t\tslideNumber,\n\n\t\tonUserInput,\n\t\tcloseOverlay,\n\t\tupdateSlidesVisibility,\n\t\tlayoutSlideContents,\n\t\ttransformSlides,\n\t\tcueAutoSlide,\n\t\tcancelAutoSlide\n\t} );\n\n\treturn API;\n\n};\n","import Deck, { VERSION } from './reveal.js'\n\n/**\n * Expose the Reveal class to the window. To create a\n * new instance:\n * let deck = new Reveal( document.querySelector( '.reveal' ), {\n *   controls: false\n * } );\n * deck.initialize().then(() => {\n *   // reveal.js is ready\n * });\n */\nlet Reveal = Deck;\n\n\n/**\n * The below is a thin shell that mimics the pre 4.0\n * reveal.js API and ensures backwards compatibility.\n * This API only allows for one Reveal instance per\n * page, whereas the new API above lets you run many\n * presentations on the same page.\n *\n * Reveal.initialize( { controls: false } ).then(() => {\n *   // reveal.js is ready\n * });\n */\n\nlet enqueuedAPICalls = [];\n\nReveal.initialize = options => {\n\n\t// Create our singleton reveal.js instance\n\tObject.assign( Reveal, new Deck( document.querySelector( '.reveal' ), options ) );\n\n\t// Invoke any enqueued API calls\n\tenqueuedAPICalls.map( method => method( Reveal ) );\n\n\treturn Reveal.initialize();\n\n}\n\n/**\n * The pre 4.0 API let you add event listener before\n * initializing. We maintain the same behavior by\n * queuing up premature API calls and invoking all\n * of them when Reveal.initialize is called.\n */\n[ 'configure', 'on', 'off', 'addEventListener', 'removeEventListener', 'registerPlugin' ].forEach( method => {\n\tReveal[method] = ( ...args ) => {\n\t\tenqueuedAPICalls.push( deck => deck[method].call( null, ...args ) );\n\t}\n} );\n\nReveal.isReady = () => false;\n\nReveal.VERSION = VERSION;\n\nexport default Reveal;"],"names":["extend","a","b","i","queryAll","el","selector","Array","from","querySelectorAll","toggleClass","className","value","classList","add","remove","deserialize","match","parseFloat","transformElement","element","transform","style","matches","target","matchesMethod","matchesSelector","msMatchesSelector","call","closest","parentNode","createSingletonNode","container","tagname","classname","innerHTML","arguments","length","undefined","nodes","testNode","node","document","createElement","appendChild","createStyleSheet","tag","type","styleSheet","cssText","createTextNode","head","getQueryHash","query","location","search","replace","split","shift","pop","unescape","getRemainingHeight","height","newHeight","oldHeight","offsetHeight","removeProperty","fileExtensionToMimeMap","mp4","m4a","ogv","mpeg","webm","UA","navigator","userAgent","isMobile","test","platform","maxTouchPoints","isAndroid","Object","defineProperty","fitty_module","_extends","assign","source","key","prototype","hasOwnProperty","w","toArray","nl","slice","DrawState","fitties","redrawFrame","requestRedraw","cancelAnimationFrame","requestAnimationFrame","redraw","filter","f","dirty","active","redrawAll","forEach","styleComputed","computeStyle","shouldPreStyle","applyStyle","fittiesToRedraw","shouldRedraw","calculateStyles","markAsClean","dispatchFitEvent","availableWidth","clientWidth","currentWidth","scrollWidth","previousFontSize","currentFontSize","Math","min","max","minSize","maxSize","whiteSpace","multiLine","getComputedStyle","getPropertyValue","display","preStyle","preStyleTestCompleted","fontSize","dispatchEvent","CustomEvent","detail","oldValue","newValue","scaleFactor","fit","destroy","_","observeMutations","observer","disconnect","originalStyle","subscribe","unsubscribe","MutationObserver","observe","defaultOptions","subtree","childList","characterData","resizeDebounce","onWindowResized","clearTimeout","setTimeout","fitty","observeWindowDelay","events","set","enabled","method","e","observeWindow","fitAll","fittyCreate","elements","options","fittyOptions","publicFitties","map","newbie","push","init","unfreeze","freeze","window","SlideContent","constructor","Reveal","this","startEmbeddedIframe","bind","shouldPreload","preload","getConfig","preloadIframes","hasAttribute","load","slide","tagName","setAttribute","getAttribute","removeAttribute","media","sources","background","slideBackgroundElement","backgroundContent","slideBackgroundContentElement","backgroundIframe","backgroundImage","backgroundVideo","backgroundVideoLoop","backgroundVideoMuted","trim","url","encodeURI","c","charCodeAt","toString","toUpperCase","encodeRFC3986URI","decodeURI","join","isSpeakerNotes","video","muted","filename","getMimeTypeFromFile","excludeIframes","iframe","width","maxHeight","maxWidth","backgroundIframeElement","querySelector","layout","scopeElement","unload","getSlideBackground","formatEmbeddedContent","_appendParamToIframeSource","sourceAttribute","sourceURL","param","getSlidesElement","src","indexOf","startEmbeddedContent","autoplay","autoPlayMedia","play","readyState","startEmbeddedMedia","promise","catch","controls","addEventListener","removeEventListener","event","isAttachedToDOM","isVisible","currentTime","contentWindow","postMessage","stopEmbeddedContent","unloadIframes","pause","SlideNumber","render","getRevealElement","configure","config","oldConfig","slideNumberDisplay","slideNumber","isPrintingPDF","showSlideNumber","update","getSlideNumber","getCurrentSlide","format","getHorizontalSlides","horizontalOffset","dataset","visibility","getSlidePastCount","getTotalSlides","indices","getIndices","h","sep","isVerticalSlide","v","getHash","formatNumber","delimiter","isNaN","JumpToSlide","onInput","onBlur","onKeyDown","jumpInput","placeholder","show","indicesOnShow","focus","hide","jumpTimeout","jump","getIndicesFromHash","oneBasedIndex","jumpAfter","delay","regex","RegExp","getSlides","find","innerText","cancel","confirm","keyCode","stopImmediatePropagation","colorToRgb","color","hex3","r","parseInt","charAt","g","hex6","rgb","rgba","Backgrounds","create","slideh","backgroundStack","createBackground","slidev","parallaxBackgroundImage","backgroundSize","parallaxBackgroundSize","backgroundRepeat","parallaxBackgroundRepeat","backgroundPosition","parallaxBackgroundPosition","contentElement","sync","data","backgroundColor","backgroundGradient","backgroundTransition","backgroundOpacity","dataPreload","opacity","contrastColor","computedBackgroundStyle","includeAll","currentSlide","currentBackground","horizontalPast","rtl","horizontalFuture","childNodes","backgroundh","backgroundv","previousBackground","slideContent","currentBackgroundContent","backgroundImageURL","previousBackgroundHash","currentBackgroundHash","classToBubble","contains","updateParallax","backgroundWidth","backgroundHeight","horizontalSlides","verticalSlides","getVerticalSlides","horizontalOffsetMultiplier","slideWidth","offsetWidth","horizontalSlideCount","parallaxBackgroundHorizontal","verticalOffsetMultiplier","verticalOffset","slideHeight","verticalSlideCount","parallaxBackgroundVertical","SLIDES_SELECTOR","HORIZONTAL_SLIDES_SELECTOR","VERTICAL_SLIDES_SELECTOR","POST_MESSAGE_METHOD_BLACKLIST","FRAGMENT_STYLE_REGEX","autoAnimateCounter","AutoAnimate","run","fromSlide","toSlide","reset","allSlides","toSlideIndex","fromSlideIndex","autoAnimateStyleSheet","animationOptions","getAutoAnimateOptions","autoAnimate","slideDirection","fromSlideIsHidden","css","getAutoAnimatableElements","autoAnimateElements","to","autoAnimateUnmatched","defaultUnmatchedDuration","duration","defaultUnmatchedDelay","getUnmatchedAutoAnimateElements","unmatchedElement","unmatchedOptions","id","autoAnimateTarget","fontWeight","sheet","removeChild","elementOptions","easing","fromProps","getAutoAnimatableProperties","toProps","styles","translate","scale","presentationScale","getScale","delta","x","y","scaleX","scaleY","round","propertyName","toValue","fromValue","explicitValue","toStyleProperties","keys","inheritedOptions","autoAnimateEasing","autoAnimateDuration","autoAnimatedParent","autoAnimateDelay","direction","properties","bounds","measure","center","getBoundingClientRect","offsetLeft","offsetTop","computedStyles","autoAnimateStyles","property","pairs","autoAnimateMatcher","getAutoAnimatePairs","reserved","pair","index","textNodes","findAutoAnimateMatches","nodeName","textContent","getLocalBoundingBox","fromScope","toScope","serializer","fromMatches","toMatches","fromElement","primaryIndex","secondaryIndex","rootElement","children","reduce","result","containsAnimatedElements","concat","Fragments","fragments","disable","enable","availableRoutes","hiddenFragments","prev","next","sort","grouped","ordered","unordered","sorted","fragment","group","sortAll","horizontalSlide","verticalSlide","changedFragments","shown","hidden","maxIndex","currentFragment","wasVisible","announceStatus","getStatusText","bubbles","goto","offset","lastVisibleFragment","progress","fragmentInURL","writeURL","Overview","onSlideClicked","activate","overview","isActive","cancelAutoSlide","getBackgroundsElement","margin","slideSize","getComputedSlideSize","overviewSlideWidth","overviewSlideHeight","updateSlidesVisibility","indexh","indexv","hslide","vslide","hbackground","vbackground","vmin","innerWidth","innerHeight","transformSlides","deactivate","cueAutoSlide","toggle","override","preventDefault","Keyboard","shortcuts","bindings","onDocumentKeyDown","onDocumentKeyPress","navigationMode","unbind","addKeyBinding","binding","callback","description","removeKeyBinding","triggerKey","registerKeyboardShortcut","getShortcuts","getBindings","shiftKey","charCode","toggleHelp","keyboardCondition","isFocused","autoSlideWasPaused","isAutoSliding","onUserInput","activeElementIsCE","activeElement","isContentEditable","activeElementIsInput","activeElementIsNotes","unusedModifier","altKey","ctrlKey","metaKey","resumeKeyCodes","keyboard","isPaused","useLinearMode","hasHorizontalSlides","hasVerticalSlides","triggered","apply","action","skipFragments","left","right","up","Number","MAX_VALUE","down","togglePause","requestMethod","documentElement","requestFullscreen","webkitRequestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","enterFullscreen","embedded","getViewportElement","autoSlideStoppable","toggleAutoSlide","jumpToSlide","toggleJumpToSlide","closeOverlay","Location","MAX_REPLACE_STATE_FREQUENCY","writeURLTimeout","replaceStateTimestamp","onWindowHashChange","hash","name","bits","hashIndexBase","hashOneBasedIndex","getElementById","decodeURIComponent","error","readURL","currentIndices","newIndices","history","debouncedReplaceState","pathname","replaceState","Date","now","replaceStateTimeout","s","encodeURIComponent","Controls","onNavigateLeftClicked","onNavigateRightClicked","onNavigateUpClicked","onNavigateDownClicked","onNavigatePrevClicked","onNavigateNextClicked","revealElement","controlsLeft","controlsRight","controlsUp","controlsDown","controlsPrev","controlsNext","controlsRightArrow","controlsLeftArrow","controlsDownArrow","controlsLayout","controlsBackArrows","pointerEvents","eventName","routes","fragmentsRoutes","controlsTutorial","hasNavigatedVertically","hasNavigatedHorizontally","Progress","onProgressClicked","bar","getProgress","getMaxWidth","slides","slidesTotal","slideIndex","floor","clientX","targetIndices","Pointer","lastMouseWheelStep","cursorHidden","cursorInactiveTimeout","onDocumentCursorActive","onDocumentMouseScroll","mouseWheel","hideInactiveCursor","showCursor","cursor","hideCursor","hideCursorTime","wheelDelta","loadScript","script","async","defer","onload","onreadystatechange","onerror","err","Error","insertBefore","lastChild","Plugins","reveal","state","registeredPlugins","asyncDependencies","plugins","dependencies","registerPlugin","Promise","resolve","scripts","scriptsToLoad","condition","scriptLoadedCallback","initPlugins","then","console","warn","pluginValues","values","pluginsToInitialize","loadAsync","initNextPlugin","afterPlugInitialized","plugin","hasPlugin","getPlugin","getRegisteredPlugins","Print","injectPageNumbers","pageWidth","pageHeight","body","viewportElement","presentationBackground","viewportStyles","layoutSlideContents","slideScrollHeights","scrollHeight","pages","pageContainer","top","contentHeight","numberOfPages","ceil","pdfMaxPagesPerSlide","page","pdfPageHeightOffset","showNotes","notes","getSlideNotes","notesSpacing","notesLayout","notesElement","bottom","numberElement","pdfSeparateFragments","fragmentGroups","previousFragmentStep","clonedPage","cloneNode","fragmentNumber","Touch","touchStartX","touchStartY","touchStartCount","touchCaptured","onPointerDown","onPointerMove","onPointerUp","onTouchStart","onTouchMove","onTouchEnd","msPointerEnabled","isSwipePrevented","touches","clientY","currentX","currentY","includeFragments","deltaX","deltaY","abs","pointerType","MSPOINTER_TYPE_TOUCH","STATE_FOCUS","STATE_BLUR","Focus","onRevealPointerDown","onDocumentPointerDown","blur","Notes","print","updateVisibility","hasNotes","isSpeakerNotesWindow","notesElements","Playback","progressCheck","diameter","diameter2","thickness","playing","progressOffset","canvas","context","getContext","setPlaying","wasPlaying","animate","progressBefore","radius","iconSize","endAngle","PI","startAngle","save","clearRect","beginPath","arc","fillStyle","fill","lineWidth","strokeStyle","stroke","fillRect","moveTo","lineTo","restore","on","listener","off","minScale","maxScale","respondToHashChanges","disableLayout","touch","loop","shuffle","help","showHiddenSlides","autoSlide","autoSlideMethod","defaultTiming","previewLinks","postMessageEvents","focusBodyOnPageVisibilityChange","transition","transitionSpeed","POSITIVE_INFINITY","viewDistance","mobileViewDistance","sortFragmentsOnSync","VERSION","previousSlide","autoSlidePlayer","ready","navigationHistory","slidesTransform","dom","autoSlideTimeout","autoSlideStartTime","autoSlidePaused","backgrounds","pointer","initialize","initOptions","wrapper","defaultConfig","Util","setViewport","start","viewport","removeHiddenSlides","setupDOM","setupPostMessage","setupScrollPrevention","setupFullscreen","resetVerticalSlides","removeEventListeners","setupPDF","Device","pauseOverlay","statusElement","createStatusElement","position","overflow","clip","text","nodeType","isAriaHidden","isDisplayHidden","child","setInterval","scrollTop","scrollLeft","onFullscreenChange","onPostMessage","isReady","numberOfSlides","setProperty","resume","enablePreviewLinks","disablePreviewLinks","onAutoSlidePlayerClick","addEventListeners","onWindowResize","onSlidesClicked","onTransitionEnd","onPageVisibilityChange","useCapture","transforms","_ref","createEvent","initEvent","dispatchPostMessage","parent","self","message","namespace","getState","JSON","stringify","onPreviewLinkClicked","showPreview","overlay","showHelp","html","size","oldScale","presentationWidth","presentationHeight","zoom","len","remainingHeight","nw","naturalWidth","videoWidth","nh","naturalHeight","videoHeight","es","setPreviousVerticalIndex","stack","getPreviousVerticalIndex","attributeName","isLastVerticalSlide","nextElementSibling","isFirstSlide","isLastSlide","wasPaused","resumeAutoSlide","pauseAutoSlide","origin","defaultPrevented","stateBefore","indexhBefore","indexvBefore","updateSlides","slideChanged","currentHorizontalSlide","currentVerticalSlides","autoAnimateTransition","getVerticalStacks","stateLoop","j","splice","syncSlide","beforeSlide","random","slidesLength","printMode","loopedForwards","loopedBackwards","reverse","showFragmentsIn","hideFragmentsIn","wasPresent","slideState","distanceX","distanceY","horizontalSlidesLength","verticalSlidesLength","oy","fragmentRoutes","pastCount","mainLoop","totalCount","allFragments","fragmentWeight","isVertical","getSlidesAttributes","attributes","attribute","getSlide","indexf","paused","setState","pausedFlag","overviewFlag","fragmentAutoSlide","parentAutoSlide","slideAutoSlide","playbackRate","navigateNext","navigateLeft","navigateRight","navigateUp","navigateDown","navigatePrev","parse","args","anchor","fullscreenElement","webkitFullscreenElement","currentTarget","API","syncFragments","navigateFragment","prevFragment","nextFragment","availableFragments","toggleOverview","isOverview","loadSlide","unloadSlide","hidePreview","getPreviousSlide","getSlidePath","getPlugins","Deck","enqueuedAPICalls","_len","_key","deck"],"mappings":"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"}